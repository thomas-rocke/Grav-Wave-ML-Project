2020-12-21 00:21:50,103::DEBUG::root::ML_Identification.py::651::[INFO] Optimizing parameter 'steps_per_epoch' across range '[1, 2, 4, 8, 16, 32, 64, 128, 256]'.

2020-12-21 00:21:50,104::DEBUG::root::ML_Identification.py::651::[WARN] Model does not exist! Will now train and save.

2020-12-21 00:21:50,104::DEBUG::root::ML_Identification.py::651::[INIT] Initialising dataset... 
2020-12-21 00:21:50,105::DEBUG::root::ML_Identification.py::651::[INIT] Generating model (input shape = (128, 128, 1), classes = 18, optimizer: Adamax)... 
2020-12-21 00:21:51,182::DEBUG::root::ML_Identification.py::651::[TRAIN] Training...
2020-12-21 00:21:51,183::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 00:21:51,183::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Dataset             : Dataset(3, [0, 0, (0, 1), 0], [0], 128, 128, 1, False).
2020-12-21 00:21:51,184::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Success Condition   : A loss of 0.001.
2020-12-21 00:21:51,184::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Terminate Condition : Reaching epoch 100 or 5 consecutive epochs of stagnation.
2020-12-21 00:21:51,185::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 00:21:51,185::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Training 
2020-12-21 00:22:55,731::DEBUG::root::ML_Identification.py::651::[INFO] Optimizing parameter 'steps_per_epoch' across range '[1, 2, 4, 8, 16, 32, 64, 128, 256]'.

2020-12-21 00:22:55,732::DEBUG::root::ML_Identification.py::651::[WARN] Model does not exist! Will now train and save.

2020-12-21 00:22:55,732::DEBUG::root::ML_Identification.py::651::[INIT] Initialising dataset... 
2020-12-21 00:22:55,732::DEBUG::root::ML_Identification.py::651::[INIT] Generating model (input shape = (128, 128, 1), classes = 18, optimizer: Adamax)... 
2020-12-21 00:22:56,824::DEBUG::root::ML_Identification.py::651::[TRAIN] Training...
2020-12-21 00:22:56,825::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 00:22:56,825::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Dataset             : Dataset(3, [0, 0, (0, 1), 0], [0], 128, 128, 1, False).
2020-12-21 00:22:56,825::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Success Condition   : A loss of 0.001.
2020-12-21 00:22:56,825::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Terminate Condition : Reaching epoch 100 or 5 consecutive epochs of stagnation.
2020-12-21 00:22:56,826::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 00:22:56,826::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Training 
2020-12-21 00:23:33,963::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.436 - Accuracy: 42.7% 
2020-12-21 00:24:09,678::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.412 - Accuracy: 43.3% 
2020-12-21 00:24:43,025::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.382 - Accuracy: 45.7% 
2020-12-21 00:25:19,205::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.389 - Accuracy: 47.7% 
2020-12-21 00:25:52,642::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.382 - Accuracy: 46.8% 
2020-12-21 00:26:26,538::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.388 - Accuracy: 46.1% 
2020-12-21 00:27:00,015::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.364 - Accuracy: 45.4% 
2020-12-21 00:27:33,781::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.377 - Accuracy: 45.7% 
2020-12-21 00:27:41,677::DEBUG::root::ML_Identification.py::651::[INFO] Optimizing parameter 'steps_per_epoch' across range '[1, 2, 4, 8, 16, 32, 64, 128, 256]'.

2020-12-21 00:27:41,677::DEBUG::root::ML_Identification.py::651::[WARN] Model does not exist! Will now train and save.

2020-12-21 00:27:41,677::DEBUG::root::ML_Identification.py::651::[INIT] Initialising dataset... 
2020-12-21 00:27:41,678::DEBUG::root::ML_Identification.py::651::[INIT] Generating model (input shape = (128, 128, 1), classes = 18, optimizer: Adamax)... 
2020-12-21 00:27:42,733::DEBUG::root::ML_Identification.py::651::[TRAIN] Training...
2020-12-21 00:27:42,733::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 00:27:42,733::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Dataset             : Dataset(3, [0, 0, (0, 1), 0], [0], 128, 128, 1, False).
2020-12-21 00:27:42,734::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Success Condition   : A loss of 0.001.
2020-12-21 00:27:42,734::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Terminate Condition : Reaching epoch 100 or 5 consecutive epochs of stagnation.
2020-12-21 00:27:42,734::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 00:27:42,734::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Training 
2020-12-21 00:28:19,314::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.437 - Accuracy: 43.9% 
2020-12-21 00:28:55,456::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.416 - Accuracy: 43.7% 
2020-12-21 00:31:37,235::DEBUG::root::ML_Identification.py::651::[INFO] Optimizing parameter 'steps_per_epoch' across range '[1, 2, 4, 8, 16, 32, 64, 128, 256]'.

2020-12-21 00:31:37,236::DEBUG::root::ML_Identification.py::651::[WARN] Model does not exist! Will now train and save.

2020-12-21 00:31:37,236::DEBUG::root::ML_Identification.py::651::[INIT] Initialising dataset... 
2020-12-21 00:31:37,237::DEBUG::root::ML_Identification.py::651::[INIT] Generating model (input shape = (128, 128, 1), classes = 18, optimizer: Adamax)... 
2020-12-21 00:31:38,197::DEBUG::root::ML_Identification.py::651::[TRAIN] Training...
2020-12-21 00:31:38,197::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 00:31:38,198::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Dataset             : Dataset(3, [0, 0, (0, 1), 0], [0], 128, 128, 1, False).
2020-12-21 00:31:38,198::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Success Condition   : A loss of 0.001.
2020-12-21 00:31:38,199::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Terminate Condition : Reaching epoch 100 or 5 consecutive epochs of stagnation.
2020-12-21 00:31:38,199::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 00:31:38,199::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Training 
2020-12-21 00:31:44,822::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:31:53,569::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:32:00,316::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 00:32:00,317::DEBUG::root::ML_Identification.py::651::[WARN]  |-> Aborted at epoch 1!
2020-12-21 00:32:00,366::DEBUG::root::ML_Identification.py::651::[TRAIN] V
2020-12-21 00:32:16,332::DEBUG::root::ML_Identification.py::651::[INFO] Optimizing parameter 'steps_per_epoch' across range '[1, 2, 4, 8, 16, 32, 64, 128, 256]'.

2020-12-21 00:32:16,332::DEBUG::root::ML_Identification.py::651::[WARN] Model does not exist! Will now train and save.

2020-12-21 00:32:16,333::DEBUG::root::ML_Identification.py::651::[INIT] Initialising dataset... 
2020-12-21 00:32:16,333::DEBUG::root::ML_Identification.py::651::[INIT] Generating model (input shape = (128, 128, 1), classes = 18, optimizer: Adamax)... 
2020-12-21 00:32:17,303::DEBUG::root::ML_Identification.py::651::[TRAIN] Training...
2020-12-21 00:32:17,304::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 00:32:17,304::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Dataset             : Dataset(3, [0, 0, (0, 1), 0], [0], 128, 128, 1, False).
2020-12-21 00:32:17,305::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Success Condition   : A loss of 0.001.
2020-12-21 00:32:17,305::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Terminate Condition : Reaching epoch 100 or 5 consecutive epochs of stagnation.
2020-12-21 00:32:17,306::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 00:32:17,306::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Training 
2020-12-21 00:32:44,712::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.435 - Accuracy: 42.5% 
2020-12-21 00:33:13,722::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.397 - Accuracy: 45.7% 
2020-12-21 00:33:42,150::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.375 - Accuracy: 45.3% 
2020-12-21 00:34:07,091::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.384 - Accuracy: 45.7% 
2020-12-21 00:34:31,777::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.397 - Accuracy: 44.7% 
2020-12-21 00:34:57,085::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.403 - Accuracy: 44.1% 
2020-12-21 00:35:21,242::DEBUG::root::ML_Identification.py::651::[INFO] Optimizing parameter 'steps_per_epoch' across range '[1, 2, 4, 8, 16, 32, 64, 128, 256]'.

2020-12-21 00:35:21,242::DEBUG::root::ML_Identification.py::651::[WARN] Model does not exist! Will now train and save.

2020-12-21 00:35:21,243::DEBUG::root::ML_Identification.py::651::[INIT] Initialising dataset... 
2020-12-21 00:35:21,243::DEBUG::root::ML_Identification.py::651::[INIT] Generating model (input shape = (128, 128, 1), classes = 18, optimizer: Adamax)... 
2020-12-21 00:35:22,226::DEBUG::root::ML_Identification.py::651::[TRAIN] Training...
2020-12-21 00:35:22,227::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 00:35:22,227::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Dataset             : Dataset(3, [0, 0, (0, 1), 0], [0], 128, 128, 1, False).
2020-12-21 00:35:22,227::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Success Condition   : A loss of 0.001.
2020-12-21 00:35:22,228::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Terminate Condition : Reaching epoch 100 or 5 consecutive epochs of stagnation.
2020-12-21 00:35:22,228::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 00:35:22,228::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Training 
2020-12-21 00:35:28,830::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:35:37,350::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:35:46,889::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:35:55,720::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:35:56,299::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.427 - Accuracy: 42.4% 
2020-12-21 00:36:03,252::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:36:12,737::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:36:20,013::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:36:29,426::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:36:29,710::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.42 - Accuracy: 43.8% 
2020-12-21 00:36:35,044::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:36:43,783::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:36:51,251::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:37:00,863::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.395 - Accuracy: 45.5% 
2020-12-21 00:37:06,154::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:37:14,765::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:37:22,168::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:37:31,458::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:37:31,763::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.399 - Accuracy: 44.9% 
2020-12-21 00:37:37,110::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:37:45,845::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:37:53,000::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:38:02,386::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:38:02,703::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.392 - Accuracy: 45.2% 
2020-12-21 00:38:07,947::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:38:16,688::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:38:23,895::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:38:33,445::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.395 - Accuracy: 46.3% 
2020-12-21 00:38:38,890::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:38:47,739::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:38:54,883::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:39:04,522::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.387 - Accuracy: 46.4% 
2020-12-21 00:39:09,845::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:39:18,464::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:39:25,847::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:39:35,605::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.38 - Accuracy: 47.1% 
2020-12-21 00:39:40,804::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:39:49,638::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:39:56,872::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:40:06,369::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:40:06,699::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.344 - Accuracy: 47.0% 
2020-12-21 00:40:12,077::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:40:20,808::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:40:28,152::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:40:37,750::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.368 - Accuracy: 47.8% 
2020-12-21 00:40:43,047::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:40:51,792::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:40:58,962::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:41:08,428::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.342 - Accuracy: 48.7% 
2020-12-21 00:41:13,713::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:41:22,322::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:41:29,463::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:41:38,979::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.352 - Accuracy: 49.5% 
2020-12-21 00:41:44,215::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:41:52,822::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:42:00,251::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:42:09,747::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.367 - Accuracy: 48.5% 
2020-12-21 00:42:15,071::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:42:23,802::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:42:31,048::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:42:40,672::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.36 - Accuracy: 48.0% 
2020-12-21 00:42:45,966::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:42:54,592::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:43:01,877::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:43:11,405::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.368 - Accuracy: 48.1% 
2020-12-21 00:43:16,571::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:43:25,297::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:43:32,440::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:43:42,147::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.353 - Accuracy: 50.0% 
2020-12-21 00:43:47,412::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:43:56,251::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:44:03,602::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:44:13,300::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.348 - Accuracy: 48.5% 
2020-12-21 00:44:18,712::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:44:27,669::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:44:34,712::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:44:44,200::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:44:44,446::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.354 - Accuracy: 48.5% 
2020-12-21 00:44:49,638::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:44:58,585::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:45:05,666::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:45:15,274::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.349 - Accuracy: 48.3% 
2020-12-21 00:45:20,582::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:45:29,319::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:45:36,354::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:45:45,950::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:45:46,185::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.345 - Accuracy: 49.9% 
2020-12-21 00:45:51,502::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:46:00,336::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:46:07,627::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:46:17,693::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.335 - Accuracy: 50.4% 
2020-12-21 00:46:22,990::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:46:31,610::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:46:38,696::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:46:48,206::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.337 - Accuracy: 49.8% 
2020-12-21 00:46:53,570::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:47:02,355::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:47:09,417::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:47:19,196::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.34 - Accuracy: 51.3% 
2020-12-21 00:47:24,455::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:47:33,182::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:47:40,259::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:47:49,826::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.346 - Accuracy: 50.6% 
2020-12-21 00:47:55,134::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:48:03,861::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:48:11,075::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:48:20,934::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.335 - Accuracy: 50.2% 
2020-12-21 00:48:26,163::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:48:34,884::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:48:42,128::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:48:51,772::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.318 - Accuracy: 51.0% 
2020-12-21 00:48:57,009::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:49:05,854::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:49:13,079::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:49:22,688::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:49:22,878::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.328 - Accuracy: 51.4% 
2020-12-21 00:49:28,275::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:49:36,883::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:49:44,106::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:49:53,704::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.336 - Accuracy: 49.8% 
2020-12-21 00:49:59,112::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:50:07,849::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:50:14,885::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:50:24,583::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.324 - Accuracy: 51.3% 
2020-12-21 00:50:29,782::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:50:38,498::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:50:45,688::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:50:55,303::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.315 - Accuracy: 52.5% 
2020-12-21 00:51:00,584::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:51:09,430::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:51:16,625::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:51:26,377::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.339 - Accuracy: 51.2% 
2020-12-21 00:51:31,538::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:51:40,269::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:51:47,421::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:51:57,206::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.318 - Accuracy: 53.6% 
2020-12-21 00:52:02,492::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:52:11,206::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:52:18,433::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:52:28,116::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.316 - Accuracy: 50.2% 
2020-12-21 00:52:33,442::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:52:42,170::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:52:49,363::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:52:58,904::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.343 - Accuracy: 52.6% 
2020-12-21 00:53:04,156::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:53:12,986::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:53:20,096::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:53:29,486::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:53:29,738::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.32 - Accuracy: 52.9% 
2020-12-21 00:53:35,086::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:53:43,918::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:53:50,974::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:54:00,541::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.302 - Accuracy: 54.2% 
2020-12-21 00:54:05,900::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:54:14,506::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:54:21,710::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:54:31,261::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.333 - Accuracy: 51.9% 
2020-12-21 00:54:36,667::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:54:45,401::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:54:52,650::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:55:02,117::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:55:02,322::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.335 - Accuracy: 52.6% 
2020-12-21 00:55:07,514::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:55:16,242::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:55:23,454::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:55:33,123::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.313 - Accuracy: 52.7% 
2020-12-21 00:55:38,447::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:55:47,077::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:55:54,129::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:56:03,407::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:56:03,566::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.319 - Accuracy: 53.7% 
2020-12-21 00:56:08,761::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:56:17,610::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:56:24,628::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:56:34,310::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.314 - Accuracy: 54.2% 
2020-12-21 00:56:39,498::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:56:48,345::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:56:55,400::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:57:05,106::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.311 - Accuracy: 53.9% 
2020-12-21 00:57:10,378::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:57:19,112::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:57:26,273::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:57:35,775::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:57:35,964::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.311 - Accuracy: 54.3% 
2020-12-21 00:57:41,262::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:57:49,989::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:57:56,963::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:58:06,553::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.316 - Accuracy: 53.8% 
2020-12-21 00:58:11,847::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:58:20,574::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:58:27,701::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:58:37,329::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.3 - Accuracy: 57.6% 
2020-12-21 00:58:42,601::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:58:51,323::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:58:58,457::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:59:08,065::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.308 - Accuracy: 55.7% 
2020-12-21 00:59:13,373::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:59:22,101::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:59:29,102::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:59:38,736::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.269 - Accuracy: 58.0% 
2020-12-21 00:59:43,979::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:59:52,801::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 00:59:59,931::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:00:09,682::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.301 - Accuracy: 55.9% 
2020-12-21 01:00:15,025::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:00:23,789::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:00:30,953::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:00:40,459::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:00:40,647::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.302 - Accuracy: 55.6% 
2020-12-21 01:00:45,923::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:00:54,765::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:01:02,144::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:01:11,421::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:01:11,667::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.298 - Accuracy: 58.1% 
2020-12-21 01:01:17,080::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:01:25,821::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:01:33,244::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:01:42,812::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.304 - Accuracy: 56.7% 
2020-12-21 01:01:48,077::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:01:56,930::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:02:03,951::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:02:13,757::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.314 - Accuracy: 56.9% 
2020-12-21 01:02:19,059::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:02:27,899::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:02:34,915::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:02:44,639::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.316 - Accuracy: 57.1% 
2020-12-21 01:02:49,887::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:02:58,635::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:03:05,751::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:03:15,364::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.306 - Accuracy: 57.0% 
2020-12-21 01:03:20,516::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:03:29,246::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:03:36,358::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:03:45,773::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:03:45,947::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.289 - Accuracy: 57.2% 
2020-12-21 01:03:51,340::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:04:00,057::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:04:07,329::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:04:16,947::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:04:17,134::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.302 - Accuracy: 57.2% 
2020-12-21 01:04:22,554::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:04:31,297::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:04:38,426::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:04:48,036::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.294 - Accuracy: 59.1% 
2020-12-21 01:04:53,285::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:05:02,002::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:05:09,076::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:05:18,804::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.299 - Accuracy: 57.6% 
2020-12-21 01:05:24,026::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:05:32,758::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:05:39,877::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:05:49,443::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.301 - Accuracy: 59.6% 
2020-12-21 01:05:54,675::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:06:03,529::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:06:10,605::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:06:20,382::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.305 - Accuracy: 58.3% 
2020-12-21 01:06:25,693::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:06:34,541::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:06:41,562::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:06:51,183::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.287 - Accuracy: 59.5% 
2020-12-21 01:06:56,406::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:07:05,134::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:07:12,314::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:07:21,842::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:07:22,027::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.277 - Accuracy: 59.7% 
2020-12-21 01:07:27,249::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:07:36,021::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:07:43,213::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:07:52,700::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:07:52,857::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.304 - Accuracy: 57.2% 
2020-12-21 01:07:58,216::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:08:07,073::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:08:14,249::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:08:24,177::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.271 - Accuracy: 61.5% 
2020-12-21 01:08:29,586::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:08:38,310::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:08:45,488::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:08:55,515::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.277 - Accuracy: 60.5% 
2020-12-21 01:09:00,717::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:09:09,680::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:09:16,764::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:09:26,470::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.26 - Accuracy: 61.4% 
2020-12-21 01:09:31,801::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:09:40,648::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:09:47,707::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:09:57,520::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.278 - Accuracy: 59.3% 
2020-12-21 01:10:02,835::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:10:11,678::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:10:18,774::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:10:28,475::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.304 - Accuracy: 59.5% 
2020-12-21 01:10:33,786::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:10:42,522::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:10:49,532::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:10:59,313::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.277 - Accuracy: 61.2% 
2020-12-21 01:11:04,536::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:11:13,161::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:11:20,288::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:11:29,644::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:11:29,863::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.296 - Accuracy: 60.8% 
2020-12-21 01:11:35,232::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:11:43,928::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:11:51,006::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:12:00,590::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.289 - Accuracy: 60.4% 
2020-12-21 01:12:05,843::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:12:14,681::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:12:21,765::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:12:31,470::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.281 - Accuracy: 61.2% 
2020-12-21 01:12:36,818::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:12:45,314::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:12:52,382::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:13:01,983::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.291 - Accuracy: 60.5% 
2020-12-21 01:13:07,398::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:13:16,060::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:13:23,322::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:13:32,689::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:13:32,847::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.308 - Accuracy: 59.1% 
2020-12-21 01:13:38,178::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:13:46,787::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:13:53,937::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:14:03,554::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.283 - Accuracy: 61.9% 
2020-12-21 01:14:08,764::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:14:17,497::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:14:24,791::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:14:34,551::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.284 - Accuracy: 61.4% 
2020-12-21 01:14:39,751::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:14:48,494::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:14:55,525::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:15:05,043::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:15:05,265::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.284 - Accuracy: 61.5% 
2020-12-21 01:15:10,615::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:15:19,239::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:15:26,310::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:15:36,128::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.282 - Accuracy: 61.5% 
2020-12-21 01:15:41,526::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:15:50,385::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:15:57,526::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:16:07,265::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.28 - Accuracy: 62.4% 
2020-12-21 01:16:12,480::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:16:21,213::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:16:28,332::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:16:37,949::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.271 - Accuracy: 62.1% 
2020-12-21 01:16:43,284::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:16:51,917::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:16:59,071::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:17:08,573::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:17:08,838::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.253 - Accuracy: 62.3% 
2020-12-21 01:17:14,064::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:17:22,700::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:17:29,995::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:17:39,678::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.275 - Accuracy: 61.5% 
2020-12-21 01:17:44,829::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:17:53,573::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:18:00,715::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:18:10,363::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.253 - Accuracy: 63.0% 
2020-12-21 01:18:15,602::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:18:24,346::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:18:31,609::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:18:41,471::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.263 - Accuracy: 62.4% 
2020-12-21 01:18:46,609::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:18:55,236::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:19:02,288::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:19:11,796::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:19:12,045::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.273 - Accuracy: 62.4% 
2020-12-21 01:19:17,272::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:19:26,236::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:19:33,207::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:19:42,912::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.291 - Accuracy: 61.7% 
2020-12-21 01:19:48,131::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:19:56,859::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:20:03,961::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:20:13,769::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.276 - Accuracy: 62.9% 
2020-12-21 01:20:19,009::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:20:27,846::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:20:34,961::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:20:44,620::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.266 - Accuracy: 62.6% 
2020-12-21 01:20:49,981::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:20:58,606::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:21:05,830::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:21:15,323::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:21:15,576::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.269 - Accuracy: 63.4% 
2020-12-21 01:21:20,804::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:21:29,449::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:21:36,938::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:21:46,514::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.264 - Accuracy: 62.8% 
2020-12-21 01:21:51,850::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:22:00,647::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:22:07,813::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:22:17,532::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.268 - Accuracy: 64.1% 
2020-12-21 01:22:22,777::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:22:31,501::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:22:38,611::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:22:47,995::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:22:48,168::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.277 - Accuracy: 62.8% 
2020-12-21 01:22:53,484::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:23:02,441::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:23:09,602::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:23:19,213::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.268 - Accuracy: 63.2% 
2020-12-21 01:23:24,350::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:23:32,958::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:23:40,329::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:23:49,992::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.272 - Accuracy: 63.2% 
2020-12-21 01:23:55,254::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:24:04,097::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:24:11,152::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:24:20,513::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:24:21,530::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.258 - Accuracy: 64.5% 
2020-12-21 01:24:26,786::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:24:35,457::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:24:42,694::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:24:52,445::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.272 - Accuracy: 64.4% 
2020-12-21 01:24:57,704::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:25:06,249::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:25:13,408::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:25:22,743::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:25:23,703::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.26 - Accuracy: 65.3% 
2020-12-21 01:25:28,887::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:25:37,527::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:25:44,646::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:25:54,203::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.26 - Accuracy: 63.2% 
2020-12-21 01:25:59,546::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:26:08,332::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:26:15,455::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:26:25,019::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.246 - Accuracy: 63.1% 
2020-12-21 01:26:30,370::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:26:39,136::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:26:46,257::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:26:55,962::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.254 - Accuracy: 64.5% 
2020-12-21 01:26:55,964::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 01:26:55,964::DEBUG::root::ML_Identification.py::651::[WARN]  |-> Reached max epoch of 100!
2020-12-21 01:26:55,965::DEBUG::root::ML_Identification.py::651::[TRAIN] V
2020-12-21 01:26:55,966::DEBUG::root::ML_Identification.py::651::[TRAIN] Done!

2020-12-21 01:26:55,967::DEBUG::root::ML_Identification.py::651::[INFO] Training complete after 51 minutes 34 seconds.

2020-12-21 01:26:55,969::DEBUG::root::ML_Identification.py::651::[SAVE] Saving model... 
2020-12-21 01:26:56,045::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 01:26:56,052::DEBUG::matplotlib.font_manager::font_manager.py::1334::findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-12-21 01:26:56,052::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-12-21 01:26:56,052::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,052::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,052::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,052::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,052::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,052::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,052::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,052::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,052::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2020-12-21 01:26:56,052::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,053::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,053::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,053::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,053::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,053::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,053::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,053::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,053::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,053::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,053::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-12-21 01:26:56,053::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,053::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,053::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2020-12-21 01:26:56,053::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,053::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,053::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,053::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,053::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,054::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,054::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,054::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,054::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,054::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-12-21 01:26:56,054::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,054::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2020-12-21 01:26:56,054::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,054::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,054::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,054::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,054::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2020-12-21 01:26:56,054::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,054::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 01:26:56,054::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,054::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,054::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,054::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT_IV50' (Amgdt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,055::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Blk BT' (swissk.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,055::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,055::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,055::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,055::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,055::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2020-12-21 01:26:56,055::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,055::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,055::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,055::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,055::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'BankGothic Md BT' (bgothm.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,055::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,055::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,055::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,055::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,055::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,055::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 2' (mtproxy2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,055::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,056::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,056::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,056::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,056::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Bold.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,056::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,056::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2020-12-21 01:26:56,056::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,056::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,056::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,056::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic_IV25.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,056::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 7' (mtproxy7.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,056::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,056::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT_IV25' (gdt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,056::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,056::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,056::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,056::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,056::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,057::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicG' (gothicg_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,057::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2020-12-21 01:26:56,057::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,057::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,057::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,057::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,057::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,057::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,057::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2020-12-21 01:26:56,057::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,057::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2020-12-21 01:26:56,057::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,057::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Ex BT' (swisseb.ttf) normal normal 700 expanded>) = 10.535
2020-12-21 01:26:56,057::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,057::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,057::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2020-12-21 01:26:56,057::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,057::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vineta BT' (vinet.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,058::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkEx BT' (swissek.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 01:26:56,058::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'EuroRoman' (eurr____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,058::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,058::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,058::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicE' (gothice_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,058::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,058::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2020-12-21 01:26:56,058::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,058::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,058::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,058::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,058::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,058::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,058::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,058::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkCn BT' (swissck.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,058::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,058::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2020-12-21 01:26:56,058::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,058::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,059::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,059::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swissc.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,059::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2020-12-21 01:26:56,059::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,059::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,059::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,059::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,059::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,059::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2020-12-21 01:26:56,059::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2020-12-21 01:26:56,059::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,059::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,059::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,059::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2020-12-21 01:26:56,059::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,059::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicI' (gothici_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,059::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,059::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,060::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,060::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,060::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 01:26:56,060::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,060::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2020-12-21 01:26:56,060::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,060::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,060::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,060::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,060::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,060::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,060::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,060::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,060::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,060::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,060::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,060::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,060::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,061::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,061::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,061::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,061::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,061::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic_IV50.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,061::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sansso__.ttf) oblique normal 400 normal>) = 11.05
2020-12-21 01:26:56,061::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,061::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'PanRoman' (panroman.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,061::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,061::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,061::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,061::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,061::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,061::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCTEUR' (isocteur.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,061::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,061::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,061::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,061::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,062::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,062::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,062::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Lt BT' (swissl.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,062::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,062::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,062::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2020-12-21 01:26:56,062::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CommercialScript BT' (comsc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,062::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,062::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,062::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,062::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,062::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,062::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,062::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,062::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 01:26:56,062::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,062::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,062::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicE' (gothice_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,063::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanC' (romanc__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,063::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,063::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2020-12-21 01:26:56,063::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,063::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2020-12-21 01:26:56,063::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,063::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2020-12-21 01:26:56,063::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,063::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2020-12-21 01:26:56,063::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,063::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,063::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,063::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,063::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Blk BT' (swisski.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,063::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 01:26:56,063::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,063::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2020-12-21 01:26:56,063::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2020-12-21 01:26:56,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2020-12-21 01:26:56,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Stylus BT' (stylu.ttf) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2020-12-21 01:26:56,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 01:26:56,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT' (AMGDT___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'BankGothic Lt BT' (bgothl.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Regular.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Technic' (technic_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AIGDT' (AIGDT___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 8' (mtproxy8.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanT' (romant__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2020-12-21 01:26:56,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtEx BT' (swissel.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 01:26:56,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SuperFrench' (supef___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CommercialPi BT' (compi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 9' (mtproxy9.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkOul BT' (swissko.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtCn BT' (swisscli.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 01:26:56,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCTEUR' (isocteur.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Technic' (technic_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Regular.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2020-12-21 01:26:56,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2020-12-21 01:26:56,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT' (gdt_____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2020-12-21 01:26:56,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2020-12-21 01:26:56,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2020-12-21 01:26:56,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2020-12-21 01:26:56,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ItalicT' (italict_.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2020-12-21 01:26:56,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ItalicT' (italict_.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2020-12-21 01:26:56,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'TechnicBold' (techb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AmdtSymbols' (AMDT_Symbols.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2020-12-21 01:26:56,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2020-12-21 01:26:56,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkEx BT' (swissek.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 01:26:56,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BdCnOul BT' (swisscbo.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2020-12-21 01:26:56,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CityBlueprint' (cityb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2020-12-21 01:26:56,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2020-12-21 01:26:56,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BdOul BT' (swissbo.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'PanRoman' (panroman.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'UniversalMath1 BT' (umath.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'TechnicLite' (techl___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanT' (romant__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Ex BT' (swisse.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 01:26:56,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romai___.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2020-12-21 01:26:56,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GOST Common' (GOST Common.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romai___.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romantic.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2020-12-21 01:26:56,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2020-12-21 01:26:56,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2020-12-21 01:26:56,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2020-12-21 01:26:56,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCPEUR' (isocpeui.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkCn BT' (swisscki.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 01:26:56,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'TechnicBold' (techb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 3' (mtproxy3.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2020-12-21 01:26:56,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2020-12-21 01:26:56,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2020-12-21 01:26:56,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 01:26:56,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2020-12-21 01:26:56,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 5' (mtproxy5.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GENISO' (GENISO.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanssbo_.ttf) oblique normal 700 normal>) = 11.335
2020-12-21 01:26:56,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2020-12-21 01:26:56,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monos.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkOul BT' (swissko.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCPEUR' (isocpeui.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2020-12-21 01:26:56,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 8' (mtproxy8.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vineta BT' (vinet.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanD' (romand__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AIGDT' (AIGDT___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AmdtSymbols' (AMDT_Symbols.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT_IV25' (Amgdt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT' (AMGDT___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCTEUR' (isocteui.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2020-12-21 01:26:56,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2020-12-21 01:26:56,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2020-12-21 01:26:56,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptC' (scriptc_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Lt BT' (swissli.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 01:26:56,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2020-12-21 01:26:56,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 1' (mtproxy1.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'EuroRoman' (eurro___.ttf) oblique normal 400 normal>) = 11.05
2020-12-21 01:26:56,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicI' (gothici_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkCn BT' (swissck.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swissci.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 01:26:56,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Ex BT' (swisseb.ttf) normal normal 700 expanded>) = 10.535
2020-12-21 01:26:56,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'UniversalMath1 BT' (umath.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanss___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ItalicC' (italicc_.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2020-12-21 01:26:56,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CountryBlueprint' (counb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 01:26:56,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Ex BT' (swisse.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 01:26:56,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'TechnicLite' (techl___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2020-12-21 01:26:56,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 01:26:56,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2020-12-21 01:26:56,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2020-12-21 01:26:56,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SuperFrench' (supef___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT_IV25' (Amgdt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 01:26:56,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swissci.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 01:26:56,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanssb__.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic_IV50.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2020-12-21 01:26:56,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2020-12-21 01:26:56,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GOST Common' (GOST Common Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Lt BT' (swissl.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 01:26:56,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2020-12-21 01:26:56,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Bold.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AcadEref' (AcadEref.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CountryBlueprint' (counb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CommercialScript BT' (comsc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic_IV25.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swiss.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 7' (mtproxy7.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swiss.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutch.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2020-12-21 01:26:56,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2020-12-21 01:26:56,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT_IV50' (gdt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanss___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 2' (mtproxy2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanssb__.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtCn BT' (swisscli.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 01:26:56,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 XBd BT' (dutcheb.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkCn BT' (swisscki.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 01:26:56,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 01:26:56,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCPEUR' (isocpeur.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GOST Common' (GOST Common Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2020-12-21 01:26:56,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutch.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT_IV25' (gdt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCPEUR' (isocpeur.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2020-12-21 01:26:56,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AcadEref' (AcadEref.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 6' (mtproxy6.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2020-12-21 01:26:56,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 01:26:56,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'EuroRoman' (eurr____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtCn BT' (swisscl.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2020-12-21 01:26:56,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 9' (mtproxy9.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic__.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 01:26:56,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romab___.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CityBlueprint' (cityb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT_IV50' (gdt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 01:26:56,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Stylus BT' (stylu.ttf) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2020-12-21 01:26:56,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtEx BT' (swissel.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 01:26:56,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2020-12-21 01:26:56,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 01:26:56,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2020-12-21 01:26:56,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 01:26:56,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swisscbi.ttf) italic normal 700 condensed>) = 11.535
2020-12-21 01:26:56,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 01:26:56,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 5' (mtproxy5.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2020-12-21 01:26:56,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BdCnOul BT' (swisscbo.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 01:26:56,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2020-12-21 01:26:56,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT_IV50' (Amgdt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 XBd BT' (dutcheb.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 1' (mtproxy1.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2020-12-21 01:26:56,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 3' (mtproxy3.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'BankGothic Md BT' (bgothm.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 4' (mtproxy4.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GOST Common' (GOST Common.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2020-12-21 01:26:56,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romab___.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swissc.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanD' (romand__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2020-12-21 01:26:56,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'EuroRoman' (eurro___.ttf) oblique normal 400 normal>) = 11.05
2020-12-21 01:26:56,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtCn BT' (swisscl.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2020-12-21 01:26:56,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Blk BT' (swissk.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romantic.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 4' (mtproxy4.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BdOul BT' (swissbo.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2020-12-21 01:26:56,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GENISO' (GENISO.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 01:26:56,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2020-12-21 01:26:56,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Blk BT' (swisski.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2020-12-21 01:26:56,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2020-12-21 01:26:56,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2020-12-21 01:26:56,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCTEUR' (isocteui.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT' (gdt_____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'BankGothic Lt BT' (bgothl.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2020-12-21 01:26:56,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swisscb.ttf) normal normal 700 condensed>) = 10.535
2020-12-21 01:26:56,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swisscbi.ttf) italic normal 700 condensed>) = 11.535
2020-12-21 01:26:56,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2020-12-21 01:26:56,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2020-12-21 01:26:56,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicG' (gothicg_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monos.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 6' (mtproxy6.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptC' (scriptc_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CommercialPi BT' (compi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sansso__.ttf) oblique normal 400 normal>) = 11.05
2020-12-21 01:26:56,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanssbo_.ttf) oblique normal 700 normal>) = 11.335
2020-12-21 01:26:56,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Lt BT' (swissli.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,108::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic__.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,108::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,108::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,108::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanC' (romanc__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,108::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,108::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swisscb.ttf) normal normal 700 condensed>) = 10.535
2020-12-21 01:26:56,108::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,108::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ItalicC' (italicc_.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,108::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2020-12-21 01:26:56,108::DEBUG::matplotlib.font_manager::font_manager.py::1366::findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\Jake\\miniconda3\\envs\\ML-GPU\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2020-12-21 01:26:56,161::DEBUG::matplotlib.font_manager::font_manager.py::1334::findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2020-12-21 01:26:56,162::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-12-21 01:26:56,162::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,162::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,162::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,162::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,162::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,162::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,162::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,162::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,162::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2020-12-21 01:26:56,162::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,162::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,162::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,162::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,162::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,162::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,162::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,162::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,163::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,163::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,163::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-12-21 01:26:56,163::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,163::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,163::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2020-12-21 01:26:56,163::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,163::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,163::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,163::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,163::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,163::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,163::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,163::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,163::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,163::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-12-21 01:26:56,163::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,163::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2020-12-21 01:26:56,163::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,164::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,164::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,164::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,164::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2020-12-21 01:26:56,164::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,164::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 01:26:56,164::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,164::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,164::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,164::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT_IV50' (Amgdt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,164::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Blk BT' (swissk.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,164::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,164::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,164::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,164::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,164::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2020-12-21 01:26:56,164::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,164::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,165::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,165::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,165::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'BankGothic Md BT' (bgothm.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,165::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,165::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,165::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,165::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,165::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,165::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 2' (mtproxy2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,165::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,165::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,165::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,165::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,165::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Bold.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,165::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,165::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2020-12-21 01:26:56,165::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,165::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,165::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,166::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic_IV25.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,166::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 7' (mtproxy7.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,166::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,166::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT_IV25' (gdt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,166::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,166::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,166::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,166::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,166::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,166::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicG' (gothicg_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,166::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2020-12-21 01:26:56,166::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,166::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,166::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,166::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,166::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,166::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,166::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2020-12-21 01:26:56,166::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,167::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2020-12-21 01:26:56,167::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,167::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Ex BT' (swisseb.ttf) normal normal 700 expanded>) = 10.535
2020-12-21 01:26:56,167::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,167::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,167::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2020-12-21 01:26:56,167::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,167::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vineta BT' (vinet.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,167::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkEx BT' (swissek.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 01:26:56,167::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'EuroRoman' (eurr____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,167::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,167::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,167::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicE' (gothice_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,167::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,167::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2020-12-21 01:26:56,167::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,167::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,167::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,168::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,168::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,168::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,168::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,168::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkCn BT' (swissck.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,168::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,168::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2020-12-21 01:26:56,168::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,168::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,168::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,168::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swissc.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,168::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2020-12-21 01:26:56,168::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,168::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,168::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,168::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,168::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,168::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2020-12-21 01:26:56,168::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2020-12-21 01:26:56,169::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,169::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,169::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,169::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2020-12-21 01:26:56,169::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,169::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicI' (gothici_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,169::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,169::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,169::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,169::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,169::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 01:26:56,169::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,169::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2020-12-21 01:26:56,169::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,169::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,169::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,169::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,169::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,169::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,170::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,170::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,170::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,170::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,170::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,170::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,170::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,170::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,170::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,170::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,170::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,170::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic_IV50.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,170::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sansso__.ttf) oblique normal 400 normal>) = 11.05
2020-12-21 01:26:56,170::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,170::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'PanRoman' (panroman.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,170::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,170::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,170::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,170::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,171::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,171::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCTEUR' (isocteur.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,171::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,171::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,171::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,171::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,171::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,171::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,171::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Lt BT' (swissl.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,171::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,171::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,171::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2020-12-21 01:26:56,171::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CommercialScript BT' (comsc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,171::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,171::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,171::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,171::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,171::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,171::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,172::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,172::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 01:26:56,172::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,172::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,172::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicE' (gothice_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,172::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanC' (romanc__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,172::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,172::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2020-12-21 01:26:56,172::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,172::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2020-12-21 01:26:56,172::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,172::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2020-12-21 01:26:56,172::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,172::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2020-12-21 01:26:56,172::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,172::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,172::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,172::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,173::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Blk BT' (swisski.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,173::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 01:26:56,173::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,173::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2020-12-21 01:26:56,173::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2020-12-21 01:26:56,173::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2020-12-21 01:26:56,173::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,173::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,173::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,173::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,173::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,173::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Stylus BT' (stylu.ttf) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,173::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,173::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,173::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,173::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2020-12-21 01:26:56,173::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,173::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,173::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 01:26:56,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT' (AMGDT___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'BankGothic Lt BT' (bgothl.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Regular.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Technic' (technic_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AIGDT' (AIGDT___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 8' (mtproxy8.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanT' (romant__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2020-12-21 01:26:56,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtEx BT' (swissel.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 01:26:56,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SuperFrench' (supef___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CommercialPi BT' (compi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 9' (mtproxy9.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkOul BT' (swissko.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtCn BT' (swisscli.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 01:26:56,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCTEUR' (isocteur.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Technic' (technic_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Regular.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2020-12-21 01:26:56,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2020-12-21 01:26:56,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT' (gdt_____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2020-12-21 01:26:56,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2020-12-21 01:26:56,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2020-12-21 01:26:56,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2020-12-21 01:26:56,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ItalicT' (italict_.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2020-12-21 01:26:56,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ItalicT' (italict_.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2020-12-21 01:26:56,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'TechnicBold' (techb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AmdtSymbols' (AMDT_Symbols.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2020-12-21 01:26:56,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2020-12-21 01:26:56,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkEx BT' (swissek.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 01:26:56,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BdCnOul BT' (swisscbo.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2020-12-21 01:26:56,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CityBlueprint' (cityb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2020-12-21 01:26:56,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2020-12-21 01:26:56,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BdOul BT' (swissbo.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'PanRoman' (panroman.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'UniversalMath1 BT' (umath.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'TechnicLite' (techl___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanT' (romant__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Ex BT' (swisse.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 01:26:56,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romai___.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2020-12-21 01:26:56,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GOST Common' (GOST Common.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romai___.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romantic.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2020-12-21 01:26:56,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2020-12-21 01:26:56,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2020-12-21 01:26:56,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2020-12-21 01:26:56,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCPEUR' (isocpeui.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkCn BT' (swisscki.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 01:26:56,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'TechnicBold' (techb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 3' (mtproxy3.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2020-12-21 01:26:56,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2020-12-21 01:26:56,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2020-12-21 01:26:56,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 01:26:56,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2020-12-21 01:26:56,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 5' (mtproxy5.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GENISO' (GENISO.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanssbo_.ttf) oblique normal 700 normal>) = 11.335
2020-12-21 01:26:56,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2020-12-21 01:26:56,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monos.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkOul BT' (swissko.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCPEUR' (isocpeui.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2020-12-21 01:26:56,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 8' (mtproxy8.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vineta BT' (vinet.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanD' (romand__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AIGDT' (AIGDT___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AmdtSymbols' (AMDT_Symbols.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT_IV25' (Amgdt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT' (AMGDT___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCTEUR' (isocteui.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2020-12-21 01:26:56,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2020-12-21 01:26:56,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2020-12-21 01:26:56,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptC' (scriptc_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Lt BT' (swissli.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 01:26:56,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2020-12-21 01:26:56,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 1' (mtproxy1.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'EuroRoman' (eurro___.ttf) oblique normal 400 normal>) = 11.05
2020-12-21 01:26:56,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicI' (gothici_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkCn BT' (swissck.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swissci.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 01:26:56,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Ex BT' (swisseb.ttf) normal normal 700 expanded>) = 10.535
2020-12-21 01:26:56,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'UniversalMath1 BT' (umath.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanss___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ItalicC' (italicc_.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2020-12-21 01:26:56,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CountryBlueprint' (counb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 01:26:56,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Ex BT' (swisse.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 01:26:56,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'TechnicLite' (techl___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2020-12-21 01:26:56,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 01:26:56,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2020-12-21 01:26:56,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2020-12-21 01:26:56,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SuperFrench' (supef___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT_IV25' (Amgdt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 01:26:56,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swissci.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 01:26:56,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanssb__.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic_IV50.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2020-12-21 01:26:56,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2020-12-21 01:26:56,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GOST Common' (GOST Common Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Lt BT' (swissl.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 01:26:56,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2020-12-21 01:26:56,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Bold.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AcadEref' (AcadEref.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CountryBlueprint' (counb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CommercialScript BT' (comsc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic_IV25.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swiss.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 7' (mtproxy7.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swiss.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutch.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2020-12-21 01:26:56,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2020-12-21 01:26:56,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT_IV50' (gdt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanss___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 2' (mtproxy2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanssb__.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtCn BT' (swisscli.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 01:26:56,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 XBd BT' (dutcheb.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkCn BT' (swisscki.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 01:26:56,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 01:26:56,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCPEUR' (isocpeur.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GOST Common' (GOST Common Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2020-12-21 01:26:56,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutch.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT_IV25' (gdt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCPEUR' (isocpeur.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2020-12-21 01:26:56,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AcadEref' (AcadEref.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 6' (mtproxy6.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2020-12-21 01:26:56,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 01:26:56,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'EuroRoman' (eurr____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtCn BT' (swisscl.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2020-12-21 01:26:56,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 9' (mtproxy9.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic__.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 01:26:56,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romab___.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CityBlueprint' (cityb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT_IV50' (gdt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 01:26:56,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Stylus BT' (stylu.ttf) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2020-12-21 01:26:56,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtEx BT' (swissel.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 01:26:56,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2020-12-21 01:26:56,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 01:26:56,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2020-12-21 01:26:56,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 01:26:56,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swisscbi.ttf) italic normal 700 condensed>) = 11.535
2020-12-21 01:26:56,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 01:26:56,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 5' (mtproxy5.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2020-12-21 01:26:56,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BdCnOul BT' (swisscbo.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 01:26:56,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2020-12-21 01:26:56,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT_IV50' (Amgdt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 XBd BT' (dutcheb.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 1' (mtproxy1.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2020-12-21 01:26:56,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 3' (mtproxy3.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'BankGothic Md BT' (bgothm.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 4' (mtproxy4.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GOST Common' (GOST Common.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2020-12-21 01:26:56,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romab___.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swissc.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanD' (romand__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2020-12-21 01:26:56,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'EuroRoman' (eurro___.ttf) oblique normal 400 normal>) = 11.05
2020-12-21 01:26:56,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtCn BT' (swisscl.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2020-12-21 01:26:56,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Blk BT' (swissk.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romantic.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 4' (mtproxy4.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BdOul BT' (swissbo.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2020-12-21 01:26:56,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GENISO' (GENISO.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 01:26:56,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2020-12-21 01:26:56,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Blk BT' (swisski.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2020-12-21 01:26:56,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2020-12-21 01:26:56,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2020-12-21 01:26:56,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCTEUR' (isocteui.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT' (gdt_____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'BankGothic Lt BT' (bgothl.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 01:26:56,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2020-12-21 01:26:56,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2020-12-21 01:26:56,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swisscb.ttf) normal normal 700 condensed>) = 10.535
2020-12-21 01:26:56,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swisscbi.ttf) italic normal 700 condensed>) = 11.535
2020-12-21 01:26:56,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2020-12-21 01:26:56,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 01:26:56,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2020-12-21 01:26:56,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicG' (gothicg_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monos.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 6' (mtproxy6.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptC' (scriptc_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CommercialPi BT' (compi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sansso__.ttf) oblique normal 400 normal>) = 11.05
2020-12-21 01:26:56,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanssbo_.ttf) oblique normal 700 normal>) = 11.335
2020-12-21 01:26:56,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Lt BT' (swissli.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,216::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,216::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic__.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,216::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,216::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,216::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanC' (romanc__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,216::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 01:26:56,216::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swisscb.ttf) normal normal 700 condensed>) = 10.535
2020-12-21 01:26:56,216::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-12-21 01:26:56,216::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ItalicC' (italicc_.ttf) italic normal 400 normal>) = 11.05
2020-12-21 01:26:56,216::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2020-12-21 01:26:56,216::DEBUG::matplotlib.font_manager::font_manager.py::1366::findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\Users\\Jake\\miniconda3\\envs\\ML-GPU\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2020-12-21 01:26:56,223::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 01:26:56,249::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 01:26:56,263::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 01:26:56,350::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 01:26:56,445::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 01:26:56,505::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 01:26:56,531::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 01:26:56,544::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 01:26:56,625::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 01:26:56,686::DEBUG::root::ML_Identification.py::651::[INFO] Deleting model and freeing GPU memory... 
2020-12-21 01:26:56,964::DEBUG::root::ML_Identification.py::651::[WARN] Model does not exist! Will now train and save.

2020-12-21 01:26:56,966::DEBUG::root::ML_Identification.py::651::[INIT] Initialising dataset... 
2020-12-21 01:26:56,966::DEBUG::root::ML_Identification.py::651::[INIT] Generating model (input shape = (128, 128, 1), classes = 18, optimizer: Adamax)... 
2020-12-21 01:26:57,268::DEBUG::root::ML_Identification.py::651::[TRAIN] Training...
2020-12-21 01:26:57,268::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 01:26:57,269::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Dataset             : Dataset(3, [0, 0, (0, 1), 0], [0], 128, 128, 2, False).
2020-12-21 01:26:57,270::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Success Condition   : A loss of 0.001.
2020-12-21 01:26:57,270::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Terminate Condition : Reaching epoch 100 or 5 consecutive epochs of stagnation.
2020-12-21 01:26:57,271::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 01:26:57,272::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Training 
2020-12-21 01:27:04,083::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:27:14,665::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:27:22,057::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:27:34,359::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.438 - Accuracy: 43.2% 
2020-12-21 01:27:40,136::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:27:50,623::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:27:58,067::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:28:10,726::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.383 - Accuracy: 46.3% 
2020-12-21 01:28:16,218::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:28:26,207::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:28:33,564::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:28:45,119::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.374 - Accuracy: 46.1% 
2020-12-21 01:28:50,466::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:29:00,572::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:29:08,331::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:29:19,472::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.382 - Accuracy: 45.8% 
2020-12-21 01:29:25,052::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:29:35,048::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:29:42,639::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:29:54,390::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.354 - Accuracy: 47.5% 
2020-12-21 01:29:59,816::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:30:09,810::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:30:17,461::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:30:28,965::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.353 - Accuracy: 47.7% 
2020-12-21 01:30:34,332::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:30:44,412::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:30:51,981::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:31:03,527::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.368 - Accuracy: 46.3% 
2020-12-21 01:31:08,959::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:31:18,961::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:31:26,523::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:31:38,056::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.34 - Accuracy: 49.4% 
2020-12-21 01:31:43,349::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:31:53,397::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:32:01,302::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:32:12,679::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.342 - Accuracy: 48.0% 
2020-12-21 01:32:18,048::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:32:28,445::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:32:36,174::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:32:47,466::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.357 - Accuracy: 47.2% 
2020-12-21 01:32:52,904::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:33:02,977::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:33:10,712::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:33:22,148::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.339 - Accuracy: 49.5% 
2020-12-21 01:33:27,492::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:33:37,511::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:33:45,177::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:33:56,595::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.335 - Accuracy: 49.7% 
2020-12-21 01:34:01,940::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:34:12,018::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:34:19,511::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:34:30,938::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.344 - Accuracy: 50.1% 
2020-12-21 01:34:36,364::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:34:46,367::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:34:53,914::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:35:05,484::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.332 - Accuracy: 51.4% 
2020-12-21 01:35:10,804::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:35:20,787::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:35:28,115::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:35:39,538::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.346 - Accuracy: 50.3% 
2020-12-21 01:35:44,782::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:35:55,005::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:36:02,904::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:36:14,060::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.324 - Accuracy: 50.8% 
2020-12-21 01:36:19,439::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:36:29,648::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:36:37,481::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:36:49,005::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.328 - Accuracy: 51.1% 
2020-12-21 01:36:54,423::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:37:05,097::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:37:12,808::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:37:23,927::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.34 - Accuracy: 51.1% 
2020-12-21 01:37:29,278::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:37:39,165::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:37:46,745::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:37:58,028::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.319 - Accuracy: 52.1% 
2020-12-21 01:38:03,457::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:38:13,575::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:38:21,009::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:38:32,279::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.315 - Accuracy: 52.5% 
2020-12-21 01:38:37,605::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:38:48,249::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:38:55,844::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:39:07,362::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.321 - Accuracy: 53.1% 
2020-12-21 01:39:12,756::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:39:22,853::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:39:30,139::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:39:41,324::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.311 - Accuracy: 53.5% 
2020-12-21 01:39:46,890::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:39:57,098::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:40:04,737::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:40:15,930::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.312 - Accuracy: 54.3% 
2020-12-21 01:40:21,354::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:40:31,326::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:40:39,034::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:40:50,850::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.312 - Accuracy: 53.5% 
2020-12-21 01:40:56,043::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:41:06,686::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:41:14,219::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:41:25,508::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.297 - Accuracy: 54.8% 
2020-12-21 01:41:30,954::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:41:40,987::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:41:48,730::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:42:00,189::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.307 - Accuracy: 54.6% 
2020-12-21 01:42:05,551::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:42:15,875::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:42:23,326::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:42:35,039::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.307 - Accuracy: 56.0% 
2020-12-21 01:42:40,407::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:42:50,925::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:42:58,422::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:43:10,022::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.301 - Accuracy: 56.0% 
2020-12-21 01:43:15,384::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:43:25,338::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:43:32,758::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:43:44,247::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.289 - Accuracy: 56.4% 
2020-12-21 01:43:49,675::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:43:59,995::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:44:07,559::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:44:19,170::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.304 - Accuracy: 56.5% 
2020-12-21 01:44:24,756::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:44:34,704::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:44:42,431::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:44:54,861::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.288 - Accuracy: 58.1% 
2020-12-21 01:45:00,703::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:45:11,006::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:45:18,810::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:45:32,226::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.283 - Accuracy: 58.3% 
2020-12-21 01:45:38,204::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:45:48,623::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:45:56,473::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:46:08,375::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.283 - Accuracy: 59.2% 
2020-12-21 01:46:13,817::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:46:24,009::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:46:31,552::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:46:42,906::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.279 - Accuracy: 59.5% 
2020-12-21 01:46:48,175::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:46:58,160::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:47:05,616::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:47:16,660::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.279 - Accuracy: 59.2% 
2020-12-21 01:47:21,940::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:47:31,911::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:47:39,936::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:47:51,187::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.289 - Accuracy: 59.3% 
2020-12-21 01:47:56,458::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:48:06,750::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:48:14,475::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:48:25,962::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.288 - Accuracy: 60.1% 
2020-12-21 01:48:31,281::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:48:41,364::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:48:48,759::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:49:00,469::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.285 - Accuracy: 61.0% 
2020-12-21 01:49:05,858::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:49:16,509::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:49:23,835::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:49:35,415::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.286 - Accuracy: 60.6% 
2020-12-21 01:49:40,588::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:49:50,580::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:49:58,063::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:50:10,290::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.274 - Accuracy: 60.5% 
2020-12-21 01:50:15,511::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:50:25,832::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:50:33,481::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:50:44,941::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.267 - Accuracy: 61.2% 
2020-12-21 01:50:50,090::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:51:00,280::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:51:07,702::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:51:19,127::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.276 - Accuracy: 61.7% 
2020-12-21 01:51:24,245::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:51:34,332::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:51:42,000::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:51:53,201::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.278 - Accuracy: 61.3% 
2020-12-21 01:51:58,386::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:52:08,944::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:52:16,408::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:52:27,742::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.283 - Accuracy: 61.8% 
2020-12-21 01:52:33,026::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:52:43,311::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:52:50,816::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:53:02,162::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.263 - Accuracy: 63.0% 
2020-12-21 01:53:07,439::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:53:17,407::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:53:25,011::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:53:36,662::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.259 - Accuracy: 63.7% 
2020-12-21 01:53:41,908::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:53:51,905::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:53:59,170::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:54:10,681::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.265 - Accuracy: 63.3% 
2020-12-21 01:54:15,995::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:54:26,544::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:54:33,682::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:54:45,516::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.267 - Accuracy: 63.3% 
2020-12-21 01:54:50,801::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:55:01,133::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:55:08,651::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:55:19,897::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.262 - Accuracy: 63.5% 
2020-12-21 01:55:25,148::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:55:35,543::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:55:43,082::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:55:54,749::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.264 - Accuracy: 64.3% 
2020-12-21 01:55:59,995::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:56:09,999::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:56:17,348::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:56:28,778::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.26 - Accuracy: 63.7% 
2020-12-21 01:56:34,116::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:56:44,248::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:56:51,544::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:57:04,600::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.252 - Accuracy: 64.6% 
2020-12-21 01:57:10,235::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:57:20,949::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:57:28,023::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:57:40,838::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.265 - Accuracy: 63.7% 
2020-12-21 01:57:46,480::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:57:56,856::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:58:04,351::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:58:16,603::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.259 - Accuracy: 65.1% 
2020-12-21 01:58:21,925::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:58:32,679::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:58:40,183::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:58:51,845::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.262 - Accuracy: 64.4% 
2020-12-21 01:58:57,169::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:59:07,156::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:59:14,616::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:59:26,379::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.252 - Accuracy: 64.6% 
2020-12-21 01:59:31,697::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:59:41,696::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 01:59:49,356::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:00:01,032::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.259 - Accuracy: 63.6% 
2020-12-21 02:00:06,380::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:00:16,485::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:00:23,806::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:00:36,243::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.257 - Accuracy: 64.5% 
2020-12-21 02:00:41,540::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:00:51,631::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:00:59,014::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:01:10,186::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.254 - Accuracy: 65.5% 
2020-12-21 02:01:15,427::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:01:25,402::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:01:32,867::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:01:44,938::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.259 - Accuracy: 65.1% 
2020-12-21 02:01:50,243::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:02:00,248::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:02:07,853::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:02:19,152::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.25 - Accuracy: 65.9% 
2020-12-21 02:02:24,531::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:02:35,186::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:02:42,769::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:02:54,200::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.244 - Accuracy: 66.2% 
2020-12-21 02:02:59,338::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:03:09,796::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:03:16,994::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:03:28,812::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.257 - Accuracy: 64.0% 
2020-12-21 02:03:34,176::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:03:44,263::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:03:51,930::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:04:03,228::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.237 - Accuracy: 65.8% 
2020-12-21 02:04:08,563::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:04:18,539::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:04:26,118::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:04:38,028::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.253 - Accuracy: 65.3% 
2020-12-21 02:04:43,342::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:04:53,791::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:05:01,282::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:05:12,972::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.255 - Accuracy: 65.0% 
2020-12-21 02:05:18,325::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:05:28,865::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:05:36,199::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:05:47,976::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.245 - Accuracy: 65.5% 
2020-12-21 02:05:53,290::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:06:03,475::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:06:10,845::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:06:22,639::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.245 - Accuracy: 64.5% 
2020-12-21 02:06:27,891::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:06:37,883::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:06:45,226::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:06:56,692::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.246 - Accuracy: 66.5% 
2020-12-21 02:07:01,920::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:07:11,905::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:07:19,431::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:07:31,085::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.238 - Accuracy: 65.5% 
2020-12-21 02:07:36,287::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:07:46,287::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:07:53,521::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:08:05,176::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.227 - Accuracy: 66.4% 
2020-12-21 02:08:10,493::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:08:20,608::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:08:27,983::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:08:40,075::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.237 - Accuracy: 66.1% 
2020-12-21 02:08:45,266::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:08:55,485::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:09:02,963::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:09:14,438::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.247 - Accuracy: 64.9% 
2020-12-21 02:09:19,677::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:09:30,333::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:09:37,882::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:09:49,569::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.237 - Accuracy: 66.0% 
2020-12-21 02:09:54,909::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:10:04,996::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:10:12,493::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:10:23,899::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.247 - Accuracy: 65.5% 
2020-12-21 02:10:29,186::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:10:39,187::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:10:46,701::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:10:57,825::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.233 - Accuracy: 66.5% 
2020-12-21 02:11:03,051::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:11:13,505::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:11:21,308::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:11:33,010::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.235 - Accuracy: 66.3% 
2020-12-21 02:11:38,279::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:11:48,224::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:11:55,795::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:12:07,495::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.232 - Accuracy: 65.9% 
2020-12-21 02:12:12,739::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:12:22,725::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:12:30,456::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:12:41,858::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.244 - Accuracy: 66.4% 
2020-12-21 02:12:47,140::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:12:57,214::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:13:04,677::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:13:15,989::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.24 - Accuracy: 66.2% 
2020-12-21 02:13:21,222::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:13:31,197::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:13:38,721::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:13:50,179::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.235 - Accuracy: 66.1% 
2020-12-21 02:13:55,414::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:14:05,294::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:14:12,867::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:14:24,643::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.253 - Accuracy: 64.3% 
2020-12-21 02:14:29,883::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:14:40,562::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:14:47,822::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:14:59,577::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.244 - Accuracy: 65.6% 
2020-12-21 02:15:04,947::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:15:14,923::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:15:22,305::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:15:33,712::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.24 - Accuracy: 66.2% 
2020-12-21 02:15:39,014::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:15:48,984::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:15:56,392::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:16:07,825::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.233 - Accuracy: 66.1% 
2020-12-21 02:16:13,146::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:16:23,138::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:16:30,431::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:16:42,595::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.24 - Accuracy: 65.5% 
2020-12-21 02:16:47,681::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:16:57,676::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:17:04,854::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:17:16,571::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.246 - Accuracy: 65.3% 
2020-12-21 02:17:22,014::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:17:31,982::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:17:39,470::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:17:51,082::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.236 - Accuracy: 65.7% 
2020-12-21 02:17:56,277::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:18:06,365::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:18:13,586::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:18:24,941::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.243 - Accuracy: 65.9% 
2020-12-21 02:18:30,241::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:18:40,134::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:18:47,796::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:18:59,276::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.239 - Accuracy: 65.9% 
2020-12-21 02:19:04,547::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:19:14,550::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:19:22,103::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:19:33,571::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.24 - Accuracy: 65.7% 
2020-12-21 02:19:38,836::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:19:48,813::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:19:56,044::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:20:07,971::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.236 - Accuracy: 66.0% 
2020-12-21 02:20:13,229::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:20:23,333::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:20:30,828::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:20:42,412::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.239 - Accuracy: 65.6% 
2020-12-21 02:20:47,525::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:20:57,401::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:21:04,832::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:21:16,437::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.232 - Accuracy: 65.1% 
2020-12-21 02:21:21,673::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:21:31,664::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:21:39,298::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:21:50,623::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.238 - Accuracy: 66.1% 
2020-12-21 02:21:55,882::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:22:06,220::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:22:13,666::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:22:25,553::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.228 - Accuracy: 66.6% 
2020-12-21 02:22:30,917::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:22:40,869::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:22:48,531::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:23:00,085::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.228 - Accuracy: 66.6% 
2020-12-21 02:23:05,359::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:23:15,896::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:23:23,288::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:23:35,379::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.236 - Accuracy: 65.9% 
2020-12-21 02:23:40,626::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:23:51,177::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:23:58,509::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:24:10,364::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.241 - Accuracy: 65.1% 
2020-12-21 02:24:15,590::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:24:25,580::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:24:32,882::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:24:44,176::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.238 - Accuracy: 65.0% 
2020-12-21 02:24:44,177::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 02:24:44,178::DEBUG::root::ML_Identification.py::651::[WARN]  |-> Reached max epoch of 100!
2020-12-21 02:24:44,179::DEBUG::root::ML_Identification.py::651::[TRAIN] V
2020-12-21 02:24:44,179::DEBUG::root::ML_Identification.py::651::[TRAIN] Done!

2020-12-21 02:24:44,180::DEBUG::root::ML_Identification.py::651::[INFO] Training complete after 57 minutes 47 seconds.

2020-12-21 02:24:44,183::DEBUG::root::ML_Identification.py::651::[SAVE] Saving model... 
2020-12-21 02:24:44,226::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 02:24:44,285::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 02:24:44,311::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 02:24:44,323::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 02:24:44,402::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 02:24:44,497::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 02:24:44,557::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 02:24:44,583::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 02:24:44,595::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 02:24:44,677::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 02:24:44,739::DEBUG::root::ML_Identification.py::651::[INFO] Deleting model and freeing GPU memory... 
2020-12-21 02:24:45,034::DEBUG::root::ML_Identification.py::651::[WARN] Model does not exist! Will now train and save.

2020-12-21 02:24:45,035::DEBUG::root::ML_Identification.py::651::[INIT] Initialising dataset... 
2020-12-21 02:24:45,035::DEBUG::root::ML_Identification.py::651::[INIT] Generating model (input shape = (128, 128, 1), classes = 18, optimizer: Adamax)... 
2020-12-21 02:24:45,339::DEBUG::root::ML_Identification.py::651::[TRAIN] Training...
2020-12-21 02:24:45,340::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 02:24:45,340::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Dataset             : Dataset(3, [0, 0, (0, 1), 0], [0], 128, 128, 4, False).
2020-12-21 02:24:45,341::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Success Condition   : A loss of 0.001.
2020-12-21 02:24:45,342::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Terminate Condition : Reaching epoch 100 or 5 consecutive epochs of stagnation.
2020-12-21 02:24:45,343::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 02:24:45,343::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Training 
2020-12-21 02:24:52,106::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:25:03,147::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:25:11,591::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:25:27,762::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.415 - Accuracy: 44.4% 
2020-12-21 02:25:33,783::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:25:45,398::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:25:53,528::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:26:10,469::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.386 - Accuracy: 45.3% 
2020-12-21 02:26:16,152::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:26:26,939::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:26:34,925::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:26:51,502::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.369 - Accuracy: 47.0% 
2020-12-21 02:26:56,942::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:27:07,696::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:27:16,405::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:27:32,063::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.368 - Accuracy: 47.2% 
2020-12-21 02:27:37,713::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:27:48,575::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:27:57,905::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:28:12,812::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.357 - Accuracy: 48.3% 
2020-12-21 02:28:18,499::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:28:29,393::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:28:37,440::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:28:51,878::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.342 - Accuracy: 48.7% 
2020-12-21 02:28:57,521::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:29:08,513::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:29:15,939::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:29:32,293::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.334 - Accuracy: 49.9% 
2020-12-21 02:29:37,862::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:29:48,764::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:29:57,437::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:30:13,388::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.332 - Accuracy: 51.4% 
2020-12-21 02:30:18,953::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:30:29,765::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:30:38,733::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:30:54,961::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.33 - Accuracy: 51.7% 
2020-12-21 02:31:00,422::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:31:11,326::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:31:20,305::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:31:36,707::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.327 - Accuracy: 51.7% 
2020-12-21 02:31:42,073::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:31:53,041::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:32:01,964::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:32:18,183::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.326 - Accuracy: 52.6% 
2020-12-21 02:32:23,739::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:32:34,279::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:32:43,377::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:32:58,393::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.32 - Accuracy: 53.4% 
2020-12-21 02:33:04,035::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:33:14,805::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:33:23,659::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:33:39,446::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.307 - Accuracy: 54.8% 
2020-12-21 02:33:45,004::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:33:55,795::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:34:04,308::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:34:20,087::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.297 - Accuracy: 55.6% 
2020-12-21 02:34:25,809::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:34:36,664::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:34:44,810::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:34:59,368::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.298 - Accuracy: 57.0% 
2020-12-21 02:35:04,893::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:35:15,799::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:35:24,504::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:35:40,321::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.302 - Accuracy: 57.6% 
2020-12-21 02:35:45,895::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:35:56,905::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:36:06,089::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:36:21,775::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.303 - Accuracy: 57.9% 
2020-12-21 02:36:27,434::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:36:38,161::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:36:46,601::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:37:02,766::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.295 - Accuracy: 59.1% 
2020-12-21 02:37:08,322::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:37:19,216::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:37:27,631::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:37:42,474::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.282 - Accuracy: 60.6% 
2020-12-21 02:37:47,947::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:37:58,843::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:38:07,574::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:38:24,125::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.274 - Accuracy: 60.8% 
2020-12-21 02:38:29,530::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:38:40,419::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:38:48,884::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:39:05,122::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.272 - Accuracy: 61.7% 
2020-12-21 02:39:10,689::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:39:21,599::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:39:30,179::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:39:46,525::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.277 - Accuracy: 62.3% 
2020-12-21 02:39:52,124::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:40:03,130::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:40:11,815::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:40:28,032::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.268 - Accuracy: 63.0% 
2020-12-21 02:40:33,454::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:40:44,323::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:40:52,761::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:41:09,318::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.268 - Accuracy: 63.2% 
2020-12-21 02:41:14,551::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:41:25,542::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:41:34,236::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:41:51,069::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.27 - Accuracy: 62.9% 
2020-12-21 02:41:56,320::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:42:07,728::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:42:15,308::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:42:30,638::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.26 - Accuracy: 63.5% 
2020-12-21 02:42:36,237::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:42:47,116::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:42:55,877::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:43:11,578::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.271 - Accuracy: 63.8% 
2020-12-21 02:43:17,077::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:43:27,966::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:43:36,543::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:43:52,553::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.261 - Accuracy: 64.5% 
2020-12-21 02:43:58,028::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:44:09,095::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:44:17,761::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:44:33,752::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.255 - Accuracy: 65.0% 
2020-12-21 02:44:39,413::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:44:50,202::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:44:58,845::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:45:14,780::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.251 - Accuracy: 64.8% 
2020-12-21 02:45:20,502::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:45:31,415::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:45:40,187::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:45:56,123::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.253 - Accuracy: 64.0% 
2020-12-21 02:46:01,685::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:46:13,319::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:46:21,928::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:46:36,536::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.251 - Accuracy: 64.8% 
2020-12-21 02:46:42,428::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:46:53,441::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:47:01,436::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:47:16,382::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.245 - Accuracy: 65.5% 
2020-12-21 02:47:21,710::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:47:32,714::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:47:41,334::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:47:57,178::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.244 - Accuracy: 66.2% 
2020-12-21 02:48:02,815::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:48:13,606::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:48:22,108::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:48:38,204::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.243 - Accuracy: 65.8% 
2020-12-21 02:48:43,777::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:48:54,765::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:49:03,539::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:49:19,338::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.248 - Accuracy: 65.3% 
2020-12-21 02:49:24,951::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:49:36,299::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:49:45,050::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:50:01,175::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.248 - Accuracy: 65.2% 
2020-12-21 02:50:06,556::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:50:17,430::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:50:26,178::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:50:41,935::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.245 - Accuracy: 64.7% 
2020-12-21 02:50:47,445::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:50:58,354::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:51:07,132::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:51:23,896::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.232 - Accuracy: 66.4% 
2020-12-21 02:51:29,195::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:51:40,098::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:51:48,738::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:52:05,475::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.243 - Accuracy: 65.5% 
2020-12-21 02:52:10,808::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:52:21,715::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:52:30,372::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:52:46,473::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.24 - Accuracy: 65.9% 
2020-12-21 02:52:51,963::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:53:02,861::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:53:10,358::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:53:25,976::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.241 - Accuracy: 65.8% 
2020-12-21 02:53:31,415::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:53:42,290::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:53:51,378::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:54:07,149::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.237 - Accuracy: 65.8% 
2020-12-21 02:54:12,726::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:54:23,599::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:54:30,947::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:54:47,267::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.235 - Accuracy: 65.5% 
2020-12-21 02:54:52,520::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:55:03,396::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:55:11,891::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:55:27,590::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.243 - Accuracy: 65.5% 
2020-12-21 02:55:33,210::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:55:44,148::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:55:52,451::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:56:08,365::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.238 - Accuracy: 66.1% 
2020-12-21 02:56:13,862::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:56:24,852::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:56:33,436::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:56:49,415::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.229 - Accuracy: 66.3% 
2020-12-21 02:56:54,838::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:57:05,759::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:57:14,712::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:57:29,823::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.242 - Accuracy: 65.6% 
2020-12-21 02:57:35,201::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:57:45,861::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:57:54,353::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:58:10,171::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.239 - Accuracy: 65.3% 
2020-12-21 02:58:15,503::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:58:26,388::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:58:34,873::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:58:50,931::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.235 - Accuracy: 66.2% 
2020-12-21 02:58:56,272::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:59:07,144::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:59:15,952::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:59:32,056::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.23 - Accuracy: 66.1% 
2020-12-21 02:59:37,301::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:59:48,157::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 02:59:56,846::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:00:13,209::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.235 - Accuracy: 66.1% 
2020-12-21 03:00:18,721::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:00:29,853::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:00:37,954::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:00:54,756::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.23 - Accuracy: 65.5% 
2020-12-21 03:01:00,765::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:01:12,067::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:01:20,499::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:01:36,498::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.227 - Accuracy: 66.0% 
2020-12-21 03:01:41,973::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:01:52,853::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:02:01,533::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:02:17,516::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.23 - Accuracy: 65.8% 
2020-12-21 03:02:23,094::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:02:33,952::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:02:42,279::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:02:58,338::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.227 - Accuracy: 66.6% 
2020-12-21 03:03:03,730::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:03:15,183::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:03:24,089::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:03:40,076::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.23 - Accuracy: 66.7% 
2020-12-21 03:03:45,542::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:03:56,547::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:04:04,830::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:04:21,655::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.232 - Accuracy: 65.4% 
2020-12-21 03:04:26,910::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:04:37,728::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:04:46,270::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:05:02,220::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.229 - Accuracy: 65.7% 
2020-12-21 03:05:07,681::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:05:18,235::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:05:27,013::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:05:42,946::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.23 - Accuracy: 65.7% 
2020-12-21 03:05:48,569::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:05:59,566::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:06:08,305::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:06:24,205::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.231 - Accuracy: 65.5% 
2020-12-21 03:06:29,672::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:06:40,438::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:06:49,136::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:07:05,394::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.226 - Accuracy: 66.0% 
2020-12-21 03:07:10,858::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:07:21,846::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:07:30,550::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:07:46,852::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.224 - Accuracy: 66.2% 
2020-12-21 03:07:52,450::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:08:03,353::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:08:12,063::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:08:28,755::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.234 - Accuracy: 64.9% 
2020-12-21 03:08:34,083::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:08:44,703::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:08:53,542::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:09:09,747::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.229 - Accuracy: 65.2% 
2020-12-21 03:09:15,219::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:09:26,166::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:09:34,075::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:09:49,043::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.23 - Accuracy: 65.9% 
2020-12-21 03:09:54,254::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:10:05,221::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:10:13,522::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:10:29,923::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.227 - Accuracy: 65.7% 
2020-12-21 03:10:35,508::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:10:46,302::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:10:55,048::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:11:11,683::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.223 - Accuracy: 66.6% 
2020-12-21 03:11:17,117::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:11:27,999::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:11:36,620::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:11:53,012::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.227 - Accuracy: 65.8% 
2020-12-21 03:11:58,346::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:12:09,250::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:12:18,282::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:12:34,673::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.227 - Accuracy: 66.1% 
2020-12-21 03:12:40,193::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:12:51,168::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:12:59,313::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:13:15,311::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.229 - Accuracy: 66.0% 
2020-12-21 03:13:20,943::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:13:31,572::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:13:39,966::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:13:55,933::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.221 - Accuracy: 66.5% 
2020-12-21 03:14:01,312::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:14:12,112::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:14:20,517::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:14:37,431::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.226 - Accuracy: 66.0% 
2020-12-21 03:14:42,684::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:14:53,587::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:15:02,365::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:15:18,661::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.221 - Accuracy: 65.7% 
2020-12-21 03:15:24,167::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:15:35,055::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:15:43,089::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:15:57,863::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.227 - Accuracy: 64.9% 
2020-12-21 03:16:03,462::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:16:14,333::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:16:23,148::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:16:38,584::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.228 - Accuracy: 65.4% 
2020-12-21 03:16:44,205::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:16:54,877::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:17:03,374::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:17:19,030::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.219 - Accuracy: 65.6% 
2020-12-21 03:17:24,439::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:17:35,307::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:17:43,897::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:17:59,982::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.224 - Accuracy: 66.7% 
2020-12-21 03:18:05,515::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:18:16,170::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:18:23,989::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:18:39,446::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.227 - Accuracy: 65.1% 
2020-12-21 03:18:44,897::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:18:56,105::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:19:04,858::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:19:20,908::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.225 - Accuracy: 65.1% 
2020-12-21 03:19:26,278::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:19:37,159::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:19:45,752::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:20:02,357::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.229 - Accuracy: 65.0% 
2020-12-21 03:20:07,927::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:20:18,760::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:20:27,533::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:20:43,736::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.225 - Accuracy: 65.0% 
2020-12-21 03:20:49,251::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:21:00,126::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:21:08,870::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:21:24,476::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.223 - Accuracy: 65.7% 
2020-12-21 03:21:30,029::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:21:40,912::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:21:49,483::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:22:04,517::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.223 - Accuracy: 65.8% 
2020-12-21 03:22:10,355::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:22:21,238::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:22:30,023::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:22:46,439::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.224 - Accuracy: 66.0% 
2020-12-21 03:22:52,013::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:23:02,780::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:23:10,839::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:23:26,321::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.226 - Accuracy: 65.7% 
2020-12-21 03:23:31,859::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:23:42,637::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:23:50,380::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:24:05,458::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.229 - Accuracy: 65.2% 
2020-12-21 03:24:11,045::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:24:21,819::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:24:30,365::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:24:46,649::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.226 - Accuracy: 65.0% 
2020-12-21 03:24:52,150::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:25:02,943::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:25:11,181::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:25:27,835::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.227 - Accuracy: 65.4% 
2020-12-21 03:25:33,128::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:25:44,171::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:25:52,219::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:26:09,109::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.22 - Accuracy: 66.3% 
2020-12-21 03:26:14,401::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:26:25,264::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:26:33,716::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:26:50,845::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.223 - Accuracy: 65.6% 
2020-12-21 03:26:56,093::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:27:06,861::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:27:15,324::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:27:31,624::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.226 - Accuracy: 65.3% 
2020-12-21 03:27:37,109::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:27:48,239::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:27:56,730::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:28:13,467::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.222 - Accuracy: 66.0% 
2020-12-21 03:28:18,836::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:28:29,723::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:28:38,384::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:28:54,472::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.225 - Accuracy: 65.8% 
2020-12-21 03:28:59,925::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:29:10,822::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:29:19,293::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:29:35,832::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.222 - Accuracy: 65.2% 
2020-12-21 03:29:41,124::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:29:51,825::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:30:00,302::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:30:15,733::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.224 - Accuracy: 65.9% 
2020-12-21 03:30:21,110::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:30:32,002::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:30:41,090::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:30:57,310::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.222 - Accuracy: 65.8% 
2020-12-21 03:31:02,744::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:31:13,627::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:31:22,236::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:31:38,292::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.224 - Accuracy: 65.4% 
2020-12-21 03:31:43,654::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:31:54,521::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:32:03,298::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:32:18,743::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.225 - Accuracy: 65.6% 
2020-12-21 03:32:24,169::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:32:35,144::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:32:44,029::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:33:00,048::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.222 - Accuracy: 66.1% 
2020-12-21 03:33:00,066::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 03:33:00,067::DEBUG::root::ML_Identification.py::651::[WARN]  |-> Reached max epoch of 100!
2020-12-21 03:33:00,068::DEBUG::root::ML_Identification.py::651::[TRAIN] V
2020-12-21 03:33:00,069::DEBUG::root::ML_Identification.py::651::[TRAIN] Done!

2020-12-21 03:33:00,070::DEBUG::root::ML_Identification.py::651::[INFO] Training complete after 68 minutes 15 seconds.

2020-12-21 03:33:00,072::DEBUG::root::ML_Identification.py::651::[SAVE] Saving model... 
2020-12-21 03:33:00,142::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 03:33:00,230::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 03:33:00,269::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 03:33:00,288::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 03:33:00,409::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 03:33:00,561::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 03:33:00,645::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 03:33:00,678::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 03:33:00,695::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 03:33:00,821::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 03:33:00,888::DEBUG::root::ML_Identification.py::651::[INFO] Deleting model and freeing GPU memory... 
2020-12-21 03:33:01,198::DEBUG::root::ML_Identification.py::651::[WARN] Model does not exist! Will now train and save.

2020-12-21 03:33:01,199::DEBUG::root::ML_Identification.py::651::[INIT] Initialising dataset... 
2020-12-21 03:33:01,200::DEBUG::root::ML_Identification.py::651::[INIT] Generating model (input shape = (128, 128, 1), classes = 18, optimizer: Adamax)... 
2020-12-21 03:33:01,506::DEBUG::root::ML_Identification.py::651::[TRAIN] Training...
2020-12-21 03:33:01,507::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 03:33:01,508::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Dataset             : Dataset(3, [0, 0, (0, 1), 0], [0], 128, 128, 8, False).
2020-12-21 03:33:01,509::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Success Condition   : A loss of 0.001.
2020-12-21 03:33:01,509::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Terminate Condition : Reaching epoch 100 or 5 consecutive epochs of stagnation.
2020-12-21 03:33:01,510::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 03:33:01,511::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Training 
2020-12-21 03:33:08,170::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:33:24,246::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:33:34,424::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:33:58,566::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.402 - Accuracy: 45.0% 
2020-12-21 03:34:06,548::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:34:24,251::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:34:33,291::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:34:56,709::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.369 - Accuracy: 46.4% 
2020-12-21 03:35:05,103::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:35:20,825::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:35:30,803::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:35:56,369::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.349 - Accuracy: 48.9% 
2020-12-21 03:36:04,147::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:36:21,867::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:36:30,512::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:36:56,863::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.334 - Accuracy: 50.2% 
2020-12-21 03:37:04,976::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:37:22,713::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:37:33,059::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:37:54,808::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.32 - Accuracy: 52.0% 
2020-12-21 03:38:03,616::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:38:21,344::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:38:30,573::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:38:54,754::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.31 - Accuracy: 54.6% 
2020-12-21 03:39:03,061::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:39:20,430::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:39:31,771::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:39:54,379::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.301 - Accuracy: 55.9% 
2020-12-21 03:40:02,539::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:40:20,320::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:40:30,595::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:40:52,027::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.295 - Accuracy: 57.7% 
2020-12-21 03:41:00,371::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:41:18,152::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:41:28,588::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:41:51,616::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.291 - Accuracy: 59.4% 
2020-12-21 03:41:59,832::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:42:17,467::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:42:28,654::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:42:51,906::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.287 - Accuracy: 61.2% 
2020-12-21 03:43:00,554::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:43:18,252::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:43:28,566::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:43:52,972::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.275 - Accuracy: 62.1% 
2020-12-21 03:44:01,137::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:44:18,741::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:44:28,644::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:44:53,923::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.269 - Accuracy: 62.9% 
2020-12-21 03:45:01,505::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:45:19,182::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:45:29,387::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:45:50,900::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.266 - Accuracy: 63.5% 
2020-12-21 03:45:59,705::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:46:18,296::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:46:29,426::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:46:53,926::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.257 - Accuracy: 64.7% 
2020-12-21 03:47:01,686::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:47:19,012::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:47:29,435::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:47:53,485::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.251 - Accuracy: 64.8% 
2020-12-21 03:48:01,664::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:48:20,045::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:48:30,803::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:48:55,725::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.254 - Accuracy: 65.1% 
2020-12-21 03:49:03,420::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:49:20,971::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:49:30,409::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:49:55,698::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.248 - Accuracy: 65.4% 
2020-12-21 03:50:03,645::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:50:21,115::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:50:29,066::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:50:52,930::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.248 - Accuracy: 65.3% 
2020-12-21 03:51:01,467::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:51:19,009::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:51:30,241::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:51:53,302::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.243 - Accuracy: 66.0% 
2020-12-21 03:52:01,911::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:52:19,709::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:52:29,872::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:52:52,931::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.24 - Accuracy: 65.8% 
2020-12-21 03:53:00,873::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:53:18,717::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:53:29,400::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:53:50,502::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.244 - Accuracy: 65.9% 
2020-12-21 03:53:59,973::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:54:19,137::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:54:29,359::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:54:52,243::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.244 - Accuracy: 65.7% 
2020-12-21 03:55:00,461::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:55:18,287::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:55:28,279::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:55:54,186::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.232 - Accuracy: 66.2% 
2020-12-21 03:56:01,450::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:56:19,060::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:56:29,305::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:56:52,748::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.236 - Accuracy: 65.8% 
2020-12-21 03:57:01,243::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:57:18,878::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:57:29,042::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:57:52,907::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.234 - Accuracy: 65.9% 
2020-12-21 03:58:01,264::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:58:16,837::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:58:27,167::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:58:48,552::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.235 - Accuracy: 65.9% 
2020-12-21 03:58:57,558::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:59:13,355::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:59:23,290::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 03:59:44,154::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.232 - Accuracy: 66.0% 
2020-12-21 03:59:52,887::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:00:10,553::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:00:21,909::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:00:43,764::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.233 - Accuracy: 65.9% 
2020-12-21 04:00:52,363::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:01:09,709::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:01:20,381::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:01:44,134::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.233 - Accuracy: 66.0% 
2020-12-21 04:01:51,960::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:02:09,403::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:02:19,978::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:02:42,064::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.228 - Accuracy: 66.8% 
2020-12-21 04:02:51,428::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:03:08,723::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:03:18,658::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:03:41,656::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.236 - Accuracy: 65.6% 
2020-12-21 04:03:50,812::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:04:08,365::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:04:18,913::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:04:42,663::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.228 - Accuracy: 65.8% 
2020-12-21 04:04:51,241::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:05:04,734::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.103594). Check your callbacks.
2020-12-21 04:05:06,820::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:05:16,558::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:05:40,757::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.229 - Accuracy: 66.3% 
2020-12-21 04:05:48,586::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:06:06,060::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:06:16,559::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:06:40,852::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.231 - Accuracy: 65.8% 
2020-12-21 04:06:49,244::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:07:06,841::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:07:16,885::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:07:39,659::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.228 - Accuracy: 65.8% 
2020-12-21 04:07:48,323::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:08:07,926::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:08:17,913::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:08:41,918::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.227 - Accuracy: 66.1% 
2020-12-21 04:08:50,415::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:09:06,077::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:09:16,728::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:09:39,205::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.229 - Accuracy: 66.2% 
2020-12-21 04:09:48,544::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:10:04,548::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.152138). Check your callbacks.
2020-12-21 04:10:06,260::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:10:16,074::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:10:41,041::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.225 - Accuracy: 66.0% 
2020-12-21 04:10:48,954::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:11:06,638::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:11:17,356::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:11:42,046::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.226 - Accuracy: 65.8% 
2020-12-21 04:11:49,629::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:12:05,262::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:12:15,687::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:12:39,398::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.229 - Accuracy: 65.6% 
2020-12-21 04:12:48,135::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:13:02,046::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.109099). Check your callbacks.
2020-12-21 04:13:03,726::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:13:14,255::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:13:38,433::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.224 - Accuracy: 66.1% 
2020-12-21 04:13:46,422::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:14:04,112::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:14:14,952::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:14:39,329::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.23 - Accuracy: 65.6% 
2020-12-21 04:14:46,910::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:15:04,556::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:15:13,908::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:15:35,951::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.222 - Accuracy: 66.5% 
2020-12-21 04:15:44,676::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:16:02,477::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:16:13,104::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:16:38,225::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.224 - Accuracy: 65.9% 
2020-12-21 04:16:46,181::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:17:03,946::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:17:14,430::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:17:38,042::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.226 - Accuracy: 65.8% 
2020-12-21 04:17:46,700::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:18:02,578::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:18:12,205::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:18:35,437::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.22 - Accuracy: 66.2% 
2020-12-21 04:18:43,738::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:19:01,115::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:19:11,593::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:19:33,198::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.224 - Accuracy: 66.0% 
2020-12-21 04:19:42,018::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:19:59,734::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:20:10,011::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:20:33,701::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.225 - Accuracy: 65.7% 
2020-12-21 04:20:42,537::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:20:56,517::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.104095). Check your callbacks.
2020-12-21 04:20:58,235::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:21:08,516::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:21:32,177::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.224 - Accuracy: 66.0% 
2020-12-21 04:21:40,542::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:21:58,347::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:22:08,714::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:22:33,497::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.225 - Accuracy: 65.6% 
2020-12-21 04:22:41,245::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:22:58,969::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:23:09,340::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:23:34,500::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.221 - Accuracy: 66.1% 
2020-12-21 04:23:42,389::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:24:00,208::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:24:09,585::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:24:33,788::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.222 - Accuracy: 66.2% 
2020-12-21 04:24:41,895::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:24:59,605::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:25:10,179::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:25:32,290::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.223 - Accuracy: 66.1% 
2020-12-21 04:25:41,367::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:26:00,748::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:26:11,971::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:26:35,192::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.224 - Accuracy: 65.7% 
2020-12-21 04:26:44,141::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:27:02,009::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:27:12,155::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:27:33,485::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.222 - Accuracy: 65.6% 
2020-12-21 04:27:42,132::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:27:52,654::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.120610). Check your callbacks.
2020-12-21 04:27:57,777::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:28:08,011::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:28:31,188::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.22 - Accuracy: 66.1% 
2020-12-21 04:28:39,520::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:28:57,269::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:29:08,009::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:29:31,117::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.224 - Accuracy: 65.9% 
2020-12-21 04:29:39,440::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:29:57,164::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:30:07,172::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:30:30,094::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.221 - Accuracy: 65.9% 
2020-12-21 04:30:38,536::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:30:54,218::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:31:04,469::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:31:29,092::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.223 - Accuracy: 65.9% 
2020-12-21 04:31:36,454::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:31:54,146::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:32:03,768::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:32:26,653::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.219 - Accuracy: 66.5% 
2020-12-21 04:32:35,365::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:32:52,946::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:33:03,392::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:33:27,014::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.221 - Accuracy: 66.1% 
2020-12-21 04:33:35,009::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:33:52,743::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:34:02,295::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:34:28,035::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.22 - Accuracy: 65.9% 
2020-12-21 04:34:36,349::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:34:54,043::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:35:03,960::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:35:28,947::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.22 - Accuracy: 66.0% 
2020-12-21 04:35:37,166::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:35:52,888::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:36:03,169::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:36:24,824::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.222 - Accuracy: 65.8% 
2020-12-21 04:36:33,282::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:36:48,934::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:36:58,557::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:37:20,954::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.222 - Accuracy: 66.1% 
2020-12-21 04:37:29,524::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:37:47,139::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:37:57,131::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:38:20,154::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.22 - Accuracy: 66.4% 
2020-12-21 04:38:28,796::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:38:46,407::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:38:56,475::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:39:19,263::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.223 - Accuracy: 65.9% 
2020-12-21 04:39:28,219::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:39:45,704::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:39:55,949::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:40:19,699::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.222 - Accuracy: 66.2% 
2020-12-21 04:40:28,207::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:40:47,675::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:40:58,501::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:41:22,155::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.22 - Accuracy: 66.2% 
2020-12-21 04:41:30,469::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:41:48,278::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:41:59,060::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:42:22,057::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.224 - Accuracy: 65.9% 
2020-12-21 04:42:30,082::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:42:47,459::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:42:57,864::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:43:20,794::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.217 - Accuracy: 66.7% 
2020-12-21 04:43:29,720::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:43:45,076::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:43:55,936::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:44:19,596::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.218 - Accuracy: 66.1% 
2020-12-21 04:44:28,618::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:44:44,181::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:44:54,507::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:45:20,900::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.221 - Accuracy: 65.9% 
2020-12-21 04:45:28,579::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:45:46,254::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:45:56,693::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:46:24,527::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.22 - Accuracy: 66.1% 
2020-12-21 04:46:31,391::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:46:48,731::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:46:58,382::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:47:23,743::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.221 - Accuracy: 65.5% 
2020-12-21 04:47:31,250::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:47:46,957::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:47:57,220::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:48:23,833::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.218 - Accuracy: 66.0% 
2020-12-21 04:48:30,824::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:48:48,178::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:48:57,844::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:49:22,119::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.217 - Accuracy: 66.3% 
2020-12-21 04:49:30,384::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:49:45,937::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:49:56,675::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:50:19,095::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.215 - Accuracy: 66.7% 
2020-12-21 04:50:28,574::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:50:47,943::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:50:57,985::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:51:20,992::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.219 - Accuracy: 66.1% 
2020-12-21 04:51:29,881::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:51:45,571::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:51:55,173::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:52:19,380::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.221 - Accuracy: 65.7% 
2020-12-21 04:52:27,679::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:52:45,370::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:52:56,111::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:53:20,015::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.216 - Accuracy: 66.7% 
2020-12-21 04:53:28,012::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:53:45,747::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:53:55,156::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:54:17,853::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.219 - Accuracy: 66.0% 
2020-12-21 04:54:26,298::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:54:41,867::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:54:51,752::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:55:13,286::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.219 - Accuracy: 66.3% 
2020-12-21 04:55:22,106::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:55:39,807::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:55:50,618::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:56:14,090::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.217 - Accuracy: 66.4% 
2020-12-21 04:56:21,914::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:56:39,558::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:56:49,856::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:57:12,185::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.22 - Accuracy: 66.6% 
2020-12-21 04:57:20,535::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:57:38,217::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:57:47,934::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:58:09,797::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.218 - Accuracy: 66.4% 
2020-12-21 04:58:18,235::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:58:35,706::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:58:46,300::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:59:10,864::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.222 - Accuracy: 65.5% 
2020-12-21 04:59:19,046::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:59:34,863::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 04:59:44,567::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:00:09,342::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.219 - Accuracy: 66.1% 
2020-12-21 05:00:16,852::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:00:36,454::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:00:46,485::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:01:10,010::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.219 - Accuracy: 66.1% 
2020-12-21 05:01:17,531::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:01:34,557::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:01:44,849::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:02:08,006::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.219 - Accuracy: 66.3% 
2020-12-21 05:02:16,612::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:02:34,232::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:02:44,817::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:03:06,723::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.217 - Accuracy: 66.3% 
2020-12-21 05:03:16,222::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:03:33,663::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:03:43,670::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:04:06,218::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.217 - Accuracy: 66.7% 
2020-12-21 05:04:14,881::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:04:32,569::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:04:42,049::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:05:07,479::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.218 - Accuracy: 66.5% 
2020-12-21 05:05:15,362::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:05:32,242::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:05:42,674::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:06:08,754::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.217 - Accuracy: 66.4% 
2020-12-21 05:06:16,361::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:06:33,869::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:06:44,131::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:07:10,078::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.216 - Accuracy: 66.7% 
2020-12-21 05:07:17,412::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:07:31,030::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.119608). Check your callbacks.
2020-12-21 05:07:33,065::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:07:44,034::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:08:08,916::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.219 - Accuracy: 66.4% 
2020-12-21 05:08:16,272::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:08:35,393::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:08:45,944::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:09:09,004::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.216 - Accuracy: 66.5% 
2020-12-21 05:09:17,753::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:09:33,316::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:09:43,703::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:10:07,045::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.217 - Accuracy: 66.7% 
2020-12-21 05:10:16,025::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:10:33,348::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:10:44,449::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:11:07,937::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.217 - Accuracy: 66.2% 
2020-12-21 05:11:15,886::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:11:33,569::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:11:44,035::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:12:06,141::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.22 - Accuracy: 66.1% 
2020-12-21 05:12:08,570::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 05:12:08,791::DEBUG::root::ML_Identification.py::651::[WARN]  |-> Reached max epoch of 100!
2020-12-21 05:12:09,137::DEBUG::root::ML_Identification.py::651::[TRAIN] V
2020-12-21 05:12:09,290::DEBUG::root::ML_Identification.py::651::[TRAIN] Done!

2020-12-21 05:12:09,381::DEBUG::root::ML_Identification.py::651::[INFO] Training complete after 99 minutes 8 seconds.

2020-12-21 05:12:09,384::DEBUG::root::ML_Identification.py::651::[SAVE] Saving model... 
2020-12-21 05:12:09,455::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 05:12:09,551::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 05:12:09,602::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 05:12:09,623::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 05:12:09,760::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 05:12:09,920::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 05:12:10,012::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 05:12:10,070::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 05:12:10,091::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 05:12:10,220::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 05:12:10,331::DEBUG::root::ML_Identification.py::651::[INFO] Deleting model and freeing GPU memory... 
2020-12-21 05:12:10,855::DEBUG::root::ML_Identification.py::651::[WARN] Model does not exist! Will now train and save.

2020-12-21 05:12:10,864::DEBUG::root::ML_Identification.py::651::[INIT] Initialising dataset... 
2020-12-21 05:12:10,888::DEBUG::root::ML_Identification.py::651::[INIT] Generating model (input shape = (128, 128, 1), classes = 18, optimizer: Adamax)... 
2020-12-21 05:12:11,421::DEBUG::root::ML_Identification.py::651::[TRAIN] Training...
2020-12-21 05:12:11,422::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 05:12:11,422::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Dataset             : Dataset(3, [0, 0, (0, 1), 0], [0], 128, 128, 16, False).
2020-12-21 05:12:11,423::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Success Condition   : A loss of 0.001.
2020-12-21 05:12:11,424::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Terminate Condition : Reaching epoch 100 or 5 consecutive epochs of stagnation.
2020-12-21 05:12:11,425::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 05:12:11,426::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Training 
2020-12-21 05:12:19,255::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:12:43,699::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.140127). Check your callbacks.
2020-12-21 05:12:44,229::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.140127). Check your callbacks.
2020-12-21 05:12:44,546::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.154140). Check your callbacks.
2020-12-21 05:12:52,162::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:13:02,297::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:13:32,854::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.377 - Accuracy: 45.8% 
2020-12-21 05:13:47,476::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:14:11,471::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.246724). Check your callbacks.
2020-12-21 05:14:11,872::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.236214). Check your callbacks.
2020-12-21 05:14:12,239::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.233211). Check your callbacks.
2020-12-21 05:14:12,389::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.230209). Check your callbacks.
2020-12-21 05:14:12,666::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.222702). Check your callbacks.
2020-12-21 05:14:13,012::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.215195). Check your callbacks.
2020-12-21 05:14:13,968::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.186169). Check your callbacks.
2020-12-21 05:14:20,401::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:14:27,572::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:15:00,857::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.335 - Accuracy: 49.9% 
2020-12-21 05:15:15,460::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:15:40,289::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.259235). Check your callbacks.
2020-12-21 05:15:41,274::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.239717). Check your callbacks.
2020-12-21 05:15:41,607::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.227206). Check your callbacks.
2020-12-21 05:15:41,935::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.225704). Check your callbacks.
2020-12-21 05:15:42,286::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.224203). Check your callbacks.
2020-12-21 05:15:44,349::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.182165). Check your callbacks.
2020-12-21 05:15:48,977::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:15:56,939::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:16:27,229::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.314 - Accuracy: 53.1% 
2020-12-21 05:16:41,158::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:17:06,220::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.260736). Check your callbacks.
2020-12-21 05:17:07,238::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.243721). Check your callbacks.
2020-12-21 05:17:07,654::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.246223). Check your callbacks.
2020-12-21 05:17:08,032::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.243721). Check your callbacks.
2020-12-21 05:17:08,388::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.241219). Check your callbacks.
2020-12-21 05:17:10,421::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.205186). Check your callbacks.
2020-12-21 05:17:14,916::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:17:22,099::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:17:54,937::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.291 - Accuracy: 57.1% 
2020-12-21 05:18:09,861::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:18:33,970::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.262738). Check your callbacks.
2020-12-21 05:18:34,342::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.240218). Check your callbacks.
2020-12-21 05:18:34,765::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.251228). Check your callbacks.
2020-12-21 05:18:35,121::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.240218). Check your callbacks.
2020-12-21 05:18:35,510::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.237716). Check your callbacks.
2020-12-21 05:18:43,227::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:18:50,391::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:19:20,943::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.279 - Accuracy: 60.4% 
2020-12-21 05:19:37,263::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:20:11,443::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:20:18,653::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:20:54,167::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.26 - Accuracy: 63.2% 
2020-12-21 05:21:06,467::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:21:28,742::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.248726). Check your callbacks.
2020-12-21 05:21:29,174::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.261237). Check your callbacks.
2020-12-21 05:21:29,603::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.263239). Check your callbacks.
2020-12-21 05:21:29,786::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.261237). Check your callbacks.
2020-12-21 05:21:30,134::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.247224). Check your callbacks.
2020-12-21 05:21:37,004::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.178162). Check your callbacks.
2020-12-21 05:21:39,503::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:21:46,621::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:22:19,551::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.257 - Accuracy: 63.8% 
2020-12-21 05:22:33,468::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:22:59,758::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.233211). Check your callbacks.
2020-12-21 05:22:59,931::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.175159). Check your callbacks.
2020-12-21 05:23:00,255::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.197179). Check your callbacks.
2020-12-21 05:23:00,414::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.175159). Check your callbacks.
2020-12-21 05:23:00,518::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.170655). Check your callbacks.
2020-12-21 05:23:00,615::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.166151). Check your callbacks.
2020-12-21 05:23:08,036::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:23:15,092::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:23:44,537::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.249 - Accuracy: 64.5% 
2020-12-21 05:24:01,829::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:24:35,265::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:24:42,329::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:25:14,380::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.243 - Accuracy: 65.0% 
2020-12-21 05:25:29,692::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:25:53,067::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.258234). Check your callbacks.
2020-12-21 05:25:53,546::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.273248). Check your callbacks.
2020-12-21 05:25:54,037::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.277752). Check your callbacks.
2020-12-21 05:25:54,435::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.273248). Check your callbacks.
2020-12-21 05:25:54,857::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.265241). Check your callbacks.
2020-12-21 05:25:58,911::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.243721). Check your callbacks.
2020-12-21 05:26:02,886::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:26:10,654::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:26:41,640::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.243 - Accuracy: 65.0% 
2020-12-21 05:26:56,699::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:27:22,053::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.211192). Check your callbacks.
2020-12-21 05:27:22,414::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.208189). Check your callbacks.
2020-12-21 05:27:22,811::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.225204). Check your callbacks.
2020-12-21 05:27:23,165::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.208189). Check your callbacks.
2020-12-21 05:27:23,310::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.206687). Check your callbacks.
2020-12-21 05:27:23,413::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.205186). Check your callbacks.
2020-12-21 05:27:30,384::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:27:38,275::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:28:08,081::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.238 - Accuracy: 65.3% 
2020-12-21 05:28:21,934::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:28:44,531::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.170154). Check your callbacks.
2020-12-21 05:28:44,893::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.191674). Check your callbacks.
2020-12-21 05:28:45,292::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.213193). Check your callbacks.
2020-12-21 05:28:45,701::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.233212). Check your callbacks.
2020-12-21 05:28:46,124::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.253230). Check your callbacks.
2020-12-21 05:28:46,534::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.250727). Check your callbacks.
2020-12-21 05:28:50,113::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.191674). Check your callbacks.
2020-12-21 05:28:54,505::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:29:03,863::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:29:34,633::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.237 - Accuracy: 65.8% 
2020-12-21 05:29:48,635::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:30:11,694::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.246724). Check your callbacks.
2020-12-21 05:30:12,094::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.244221). Check your callbacks.
2020-12-21 05:30:12,290::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.230209). Check your callbacks.
2020-12-21 05:30:12,415::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.216196). Check your callbacks.
2020-12-21 05:30:12,770::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.230209). Check your callbacks.
2020-12-21 05:30:14,755::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.207188). Check your callbacks.
2020-12-21 05:30:21,984::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:30:29,218::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:31:02,261::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.236 - Accuracy: 65.8% 
2020-12-21 05:31:16,527::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:31:42,317::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.228707). Check your callbacks.
2020-12-21 05:31:42,748::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.254230). Check your callbacks.
2020-12-21 05:31:43,146::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.246223). Check your callbacks.
2020-12-21 05:31:43,545::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.253230). Check your callbacks.
2020-12-21 05:31:43,944::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.248225). Check your callbacks.
2020-12-21 05:31:44,691::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.240718). Check your callbacks.
2020-12-21 05:31:45,937::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.166651). Check your callbacks.
2020-12-21 05:31:50,952::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:31:58,035::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:32:30,098::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.237 - Accuracy: 65.0% 
2020-12-21 05:32:44,712::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:33:10,135::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.145132). Check your callbacks.
2020-12-21 05:33:10,512::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.190172). Check your callbacks.
2020-12-21 05:33:10,891::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.200682). Check your callbacks.
2020-12-21 05:33:11,054::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.190172). Check your callbacks.
2020-12-21 05:33:11,308::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.176160). Check your callbacks.
2020-12-21 05:33:11,443::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.162147). Check your callbacks.
2020-12-21 05:33:11,694::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.164649). Check your callbacks.
2020-12-21 05:33:17,956::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:33:26,993::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:33:57,632::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.232 - Accuracy: 65.5% 
2020-12-21 05:34:11,988::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:34:37,434::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.179162). Check your callbacks.
2020-12-21 05:34:37,832::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.205186). Check your callbacks.
2020-12-21 05:34:38,893::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.219699). Check your callbacks.
2020-12-21 05:34:39,245::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.208189). Check your callbacks.
2020-12-21 05:34:39,507::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.201683). Check your callbacks.
2020-12-21 05:34:39,681::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.195177). Check your callbacks.
2020-12-21 05:34:39,849::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.187170). Check your callbacks.
2020-12-21 05:34:46,381::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:34:53,467::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:35:26,495::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.232 - Accuracy: 65.6% 
2020-12-21 05:35:40,357::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:36:06,442::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.165150). Check your callbacks.
2020-12-21 05:36:07,400::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.165150). Check your callbacks.
2020-12-21 05:36:07,589::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.160646). Check your callbacks.
2020-12-21 05:36:07,908::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.165150). Check your callbacks.
2020-12-21 05:36:08,254::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.184667). Check your callbacks.
2020-12-21 05:36:08,416::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.165150). Check your callbacks.
2020-12-21 05:36:15,420::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:36:26,381::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:36:57,035::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.234 - Accuracy: 65.3% 
2020-12-21 05:37:11,694::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:37:37,099::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.258735). Check your callbacks.
2020-12-21 05:37:37,503::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.243221). Check your callbacks.
2020-12-21 05:37:37,915::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.245222). Check your callbacks.
2020-12-21 05:37:38,318::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.243221). Check your callbacks.
2020-12-21 05:37:38,679::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.242720). Check your callbacks.
2020-12-21 05:37:38,990::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.242220). Check your callbacks.
2020-12-21 05:37:39,262::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.237716). Check your callbacks.
2020-12-21 05:37:40,519::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.183667). Check your callbacks.
2020-12-21 05:37:45,443::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:37:55,643::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:38:26,428::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.231 - Accuracy: 65.5% 
2020-12-21 05:38:40,783::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:39:02,884::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.249226). Check your callbacks.
2020-12-21 05:39:03,362::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.263239). Check your callbacks.
2020-12-21 05:39:03,798::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.272747). Check your callbacks.
2020-12-21 05:39:04,227::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.263239). Check your callbacks.
2020-12-21 05:39:04,677::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.265741). Check your callbacks.
2020-12-21 05:39:09,036::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.261737). Check your callbacks.
2020-12-21 05:39:12,065::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.209190). Check your callbacks.
2020-12-21 05:39:12,160::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.209190). Check your callbacks.
2020-12-21 05:39:12,244::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.152138). Check your callbacks.
2020-12-21 05:39:13,786::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:39:21,852::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:39:54,002::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.231 - Accuracy: 65.7% 
2020-12-21 05:40:08,695::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:40:32,469::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.256233). Check your callbacks.
2020-12-21 05:40:32,884::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.250227). Check your callbacks.
2020-12-21 05:40:33,305::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.244221). Check your callbacks.
2020-12-21 05:40:33,721::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.245723). Check your callbacks.
2020-12-21 05:40:36,168::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.242220). Check your callbacks.
2020-12-21 05:40:39,518::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.181665). Check your callbacks.
2020-12-21 05:40:41,809::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:40:48,989::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:41:21,977::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.229 - Accuracy: 65.7% 
2020-12-21 05:41:36,020::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:41:59,541::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.253230). Check your callbacks.
2020-12-21 05:41:59,926::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.233211). Check your callbacks.
2020-12-21 05:42:00,333::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.232711). Check your callbacks.
2020-12-21 05:42:00,760::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.233211). Check your callbacks.
2020-12-21 05:42:01,129::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.232711). Check your callbacks.
2020-12-21 05:42:04,563::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.218198). Check your callbacks.
2020-12-21 05:42:07,393::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.123112). Check your callbacks.
2020-12-21 05:42:09,135::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:42:16,191::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:42:49,331::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.229 - Accuracy: 65.6% 
2020-12-21 05:43:04,117::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:43:27,878::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.227206). Check your callbacks.
2020-12-21 05:43:28,281::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.256232). Check your callbacks.
2020-12-21 05:43:28,687::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.250227). Check your callbacks.
2020-12-21 05:43:29,036::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.244222). Check your callbacks.
2020-12-21 05:43:29,419::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.239217). Check your callbacks.
2020-12-21 05:43:29,751::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.234212). Check your callbacks.
2020-12-21 05:43:30,918::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.198680). Check your callbacks.
2020-12-21 05:43:37,171::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:43:44,304::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:44:16,212::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.227 - Accuracy: 65.6% 
2020-12-21 05:44:32,158::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:44:56,296::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.161146). Check your callbacks.
2020-12-21 05:44:56,688::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.197179). Check your callbacks.
2020-12-21 05:44:57,077::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.232210). Check your callbacks.
2020-12-21 05:44:57,483::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.232711). Check your callbacks.
2020-12-21 05:44:57,907::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.233212). Check your callbacks.
2020-12-21 05:44:58,259::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.232711). Check your callbacks.
2020-12-21 05:44:59,220::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.217697). Check your callbacks.
2020-12-21 05:45:06,317::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.103093). Check your callbacks.
2020-12-21 05:45:06,490::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:45:16,125::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:45:47,090::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.223 - Accuracy: 66.1% 
2020-12-21 05:46:01,932::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:46:28,401::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.146133). Check your callbacks.
2020-12-21 05:46:28,759::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.165150). Check your callbacks.
2020-12-21 05:46:29,102::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.184167). Check your callbacks.
2020-12-21 05:46:29,432::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.186669). Check your callbacks.
2020-12-21 05:46:29,777::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.186169). Check your callbacks.
2020-12-21 05:46:32,101::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.185168). Check your callbacks.
2020-12-21 05:46:37,238::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:46:44,350::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:47:16,356::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.223 - Accuracy: 65.9% 
2020-12-21 05:47:31,170::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:47:55,565::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.260236). Check your callbacks.
2020-12-21 05:47:55,875::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.227206). Check your callbacks.
2020-12-21 05:47:56,055::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.194176). Check your callbacks.
2020-12-21 05:47:56,318::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.191173). Check your callbacks.
2020-12-21 05:47:56,570::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.188170). Check your callbacks.
2020-12-21 05:47:56,846::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.176660). Check your callbacks.
2020-12-21 05:48:02,878::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:48:10,103::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:48:43,101::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.224 - Accuracy: 66.0% 
2020-12-21 05:48:57,787::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:49:21,217::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.103093). Check your callbacks.
2020-12-21 05:49:21,616::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.103093). Check your callbacks.
2020-12-21 05:49:21,936::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.134121). Check your callbacks.
2020-12-21 05:49:22,273::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.165150). Check your callbacks.
2020-12-21 05:49:22,607::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.166651). Check your callbacks.
2020-12-21 05:49:22,967::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.168152). Check your callbacks.
2020-12-21 05:49:24,925::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.115104). Check your callbacks.
2020-12-21 05:49:29,974::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:49:40,135::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:50:11,742::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.225 - Accuracy: 65.7% 
2020-12-21 05:50:25,485::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:50:46,291::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.323794). Check your callbacks.
2020-12-21 05:50:50,026::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.196178). Check your callbacks.
2020-12-21 05:50:50,189::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.141128). Check your callbacks.
2020-12-21 05:50:50,487::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.174658). Check your callbacks.
2020-12-21 05:50:50,771::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.141128). Check your callbacks.
2020-12-21 05:50:50,946::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.135623). Check your callbacks.
2020-12-21 05:50:51,137::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.130118). Check your callbacks.
2020-12-21 05:50:51,394::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.127115). Check your callbacks.
2020-12-21 05:50:51,561::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.113603). Check your callbacks.
2020-12-21 05:50:58,102::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:51:05,159::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:51:37,125::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.225 - Accuracy: 65.8% 
2020-12-21 05:51:51,939::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:52:13,581::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.266742). Check your callbacks.
2020-12-21 05:52:13,982::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.219198). Check your callbacks.
2020-12-21 05:52:17,582::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.202183). Check your callbacks.
2020-12-21 05:52:17,831::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.176160). Check your callbacks.
2020-12-21 05:52:18,040::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.150136). Check your callbacks.
2020-12-21 05:52:18,289::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.149636). Check your callbacks.
2020-12-21 05:52:18,490::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.149135). Check your callbacks.
2020-12-21 05:52:18,731::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.132120). Check your callbacks.
2020-12-21 05:52:18,890::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.109099). Check your callbacks.
2020-12-21 05:52:24,899::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:52:32,019::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:53:04,066::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.223 - Accuracy: 65.9% 
2020-12-21 05:53:18,552::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:53:43,245::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.177161). Check your callbacks.
2020-12-21 05:53:44,064::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.177161). Check your callbacks.
2020-12-21 05:53:44,447::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.202684). Check your callbacks.
2020-12-21 05:53:44,628::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.177161). Check your callbacks.
2020-12-21 05:53:44,749::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.144631). Check your callbacks.
2020-12-21 05:53:45,044::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.177161). Check your callbacks.
2020-12-21 05:53:52,037::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:53:58,998::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:54:31,434::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.223 - Accuracy: 65.6% 
2020-12-21 05:54:45,851::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:55:10,986::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.183166). Check your callbacks.
2020-12-21 05:55:11,331::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.182165). Check your callbacks.
2020-12-21 05:55:11,737::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.183166). Check your callbacks.
2020-12-21 05:55:12,129::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.210191). Check your callbacks.
2020-12-21 05:55:12,451::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.183166). Check your callbacks.
2020-12-21 05:55:12,624::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.182165). Check your callbacks.
2020-12-21 05:55:12,839::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.181164). Check your callbacks.
2020-12-21 05:55:12,969::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.175159). Check your callbacks.
2020-12-21 05:55:13,062::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.149636). Check your callbacks.
2020-12-21 05:55:19,382::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:55:27,237::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:55:56,704::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.223 - Accuracy: 65.8% 
2020-12-21 05:56:11,289::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:56:34,741::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.125113). Check your callbacks.
2020-12-21 05:56:35,528::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.125113). Check your callbacks.
2020-12-21 05:56:35,931::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.180664). Check your callbacks.
2020-12-21 05:56:36,279::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.187170). Check your callbacks.
2020-12-21 05:56:36,678::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.210191). Check your callbacks.
2020-12-21 05:56:38,984::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.156142). Check your callbacks.
2020-12-21 05:56:44,289::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:56:52,325::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:57:24,716::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.222 - Accuracy: 65.9% 
2020-12-21 05:57:38,869::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:58:00,611::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.368334). Check your callbacks.
2020-12-21 05:58:05,046::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.298270). Check your callbacks.
2020-12-21 05:58:05,518::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.288261). Check your callbacks.
2020-12-21 05:58:05,855::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.278252). Check your callbacks.
2020-12-21 05:58:06,210::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.270245). Check your callbacks.
2020-12-21 05:58:06,562::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.262238). Check your callbacks.
2020-12-21 05:58:08,316::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.207188). Check your callbacks.
2020-12-21 05:58:08,402::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.199181). Check your callbacks.
2020-12-21 05:58:12,823::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:58:19,850::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:58:52,133::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.22 - Accuracy: 66.1% 
2020-12-21 05:59:06,899::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:59:29,587::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.243221). Check your callbacks.
2020-12-21 05:59:30,034::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.284258). Check your callbacks.
2020-12-21 05:59:30,559::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.265741). Check your callbacks.
2020-12-21 05:59:30,929::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.247224). Check your callbacks.
2020-12-21 05:59:31,325::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.232711). Check your callbacks.
2020-12-21 05:59:31,814::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.218198). Check your callbacks.
2020-12-21 05:59:38,910::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.144131). Check your callbacks.
2020-12-21 05:59:39,485::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 05:59:46,637::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:00:19,039::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.221 - Accuracy: 65.9% 
2020-12-21 06:00:33,544::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:00:51,390::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.325796). Check your callbacks.
2020-12-21 06:00:57,562::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.251228). Check your callbacks.
2020-12-21 06:00:57,866::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.224203). Check your callbacks.
2020-12-21 06:00:58,134::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.197179). Check your callbacks.
2020-12-21 06:00:58,393::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.175159). Check your callbacks.
2020-12-21 06:00:58,600::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.153139). Check your callbacks.
2020-12-21 06:00:58,793::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.150136). Check your callbacks.
2020-12-21 06:01:04,911::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:01:11,990::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:01:44,223::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.218 - Accuracy: 66.2% 
2020-12-21 06:01:59,301::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:02:19,511::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.356323). Check your callbacks.
2020-12-21 06:02:22,905::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.275250). Check your callbacks.
2020-12-21 06:02:23,315::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.260236). Check your callbacks.
2020-12-21 06:02:23,680::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.245222). Check your callbacks.
2020-12-21 06:02:23,822::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.237215). Check your callbacks.
2020-12-21 06:02:23,946::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.229208). Check your callbacks.
2020-12-21 06:02:32,223::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:02:40,332::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:03:14,461::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.221 - Accuracy: 66.0% 
2020-12-21 06:03:27,509::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:03:45,040::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.328798). Check your callbacks.
2020-12-21 06:03:50,456::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.212192). Check your callbacks.
2020-12-21 06:03:50,855::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.244221). Check your callbacks.
2020-12-21 06:03:51,207::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.218698). Check your callbacks.
2020-12-21 06:03:51,550::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.193175). Check your callbacks.
2020-12-21 06:03:51,919::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.204185). Check your callbacks.
2020-12-21 06:03:52,235::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.193175). Check your callbacks.
2020-12-21 06:03:52,450::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.189672). Check your callbacks.
2020-12-21 06:03:52,565::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.184668). Check your callbacks.
2020-12-21 06:03:52,669::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.171155). Check your callbacks.
2020-12-21 06:03:58,692::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:04:08,662::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:04:37,131::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.218 - Accuracy: 66.2% 
2020-12-21 06:04:51,714::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:05:15,361::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.173157). Check your callbacks.
2020-12-21 06:05:15,701::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.189172). Check your callbacks.
2020-12-21 06:05:16,122::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.205186). Check your callbacks.
2020-12-21 06:05:16,492::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.208689). Check your callbacks.
2020-12-21 06:05:16,663::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.205186). Check your callbacks.
2020-12-21 06:05:16,969::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.203685). Check your callbacks.
2020-12-21 06:05:17,352::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.205186). Check your callbacks.
2020-12-21 06:05:17,977::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.187670). Check your callbacks.
2020-12-21 06:05:24,433::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:05:31,532::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:06:06,928::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.219 - Accuracy: 66.2% 
2020-12-21 06:06:18,732::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:06:43,832::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.125114). Check your callbacks.
2020-12-21 06:06:44,119::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.130118). Check your callbacks.
2020-12-21 06:06:44,452::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.135123). Check your callbacks.
2020-12-21 06:06:44,737::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.141629). Check your callbacks.
2020-12-21 06:06:44,913::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.135123). Check your callbacks.
2020-12-21 06:06:45,232::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.141629). Check your callbacks.
2020-12-21 06:06:45,412::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.135123). Check your callbacks.
2020-12-21 06:06:52,173::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:06:59,264::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:07:35,223::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.221 - Accuracy: 66.0% 
2020-12-21 06:07:46,483::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:08:10,113::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.223703). Check your callbacks.
2020-12-21 06:08:10,512::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.253230). Check your callbacks.
2020-12-21 06:08:10,855::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.224203). Check your callbacks.
2020-12-21 06:08:11,224::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.206187). Check your callbacks.
2020-12-21 06:08:11,558::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.200682). Check your callbacks.
2020-12-21 06:08:11,899::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.195177). Check your callbacks.
2020-12-21 06:08:13,465::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.188671). Check your callbacks.
2020-12-21 06:08:18,337::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.138125). Check your callbacks.
2020-12-21 06:08:19,475::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:08:26,441::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:08:58,347::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.219 - Accuracy: 66.2% 
2020-12-21 06:09:12,680::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:09:38,111::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.136123). Check your callbacks.
2020-12-21 06:09:38,588::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.136123). Check your callbacks.
2020-12-21 06:09:38,857::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.131619). Check your callbacks.
2020-12-21 06:09:39,102::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.128116). Check your callbacks.
2020-12-21 06:09:39,287::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.127616). Check your callbacks.
2020-12-21 06:09:39,528::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.128116). Check your callbacks.
2020-12-21 06:09:39,636::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.127616). Check your callbacks.
2020-12-21 06:09:46,225::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:09:53,357::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:10:26,190::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.22 - Accuracy: 65.9% 
2020-12-21 06:10:40,904::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:11:04,660::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.164149). Check your callbacks.
2020-12-21 06:11:04,993::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.165650). Check your callbacks.
2020-12-21 06:11:05,340::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.167152). Check your callbacks.
2020-12-21 06:11:13,022::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:11:20,749::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:11:53,028::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.219 - Accuracy: 66.0% 
2020-12-21 06:12:07,629::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:12:30,958::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.211692). Check your callbacks.
2020-12-21 06:12:31,266::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.174158). Check your callbacks.
2020-12-21 06:12:31,439::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.169153). Check your callbacks.
2020-12-21 06:12:31,569::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.164149). Check your callbacks.
2020-12-21 06:12:31,822::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.160145). Check your callbacks.
2020-12-21 06:12:31,965::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.156142). Check your callbacks.
2020-12-21 06:12:39,006::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:12:46,271::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:13:17,259::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.22 - Accuracy: 66.0% 
2020-12-21 06:13:31,719::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:13:56,555::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.119609). Check your callbacks.
2020-12-21 06:13:56,902::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.175159). Check your callbacks.
2020-12-21 06:13:57,230::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.180664). Check your callbacks.
2020-12-21 06:13:57,549::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.176160). Check your callbacks.
2020-12-21 06:14:00,566::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.109099). Check your callbacks.
2020-12-21 06:14:04,599::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:14:12,022::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:14:42,706::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.217 - Accuracy: 66.4% 
2020-12-21 06:14:57,467::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:15:21,205::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.160145). Check your callbacks.
2020-12-21 06:15:21,571::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.183666). Check your callbacks.
2020-12-21 06:15:21,947::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.207188). Check your callbacks.
2020-12-21 06:15:22,309::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.214194). Check your callbacks.
2020-12-21 06:15:22,659::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.219199). Check your callbacks.
2020-12-21 06:15:23,023::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.213193). Check your callbacks.
2020-12-21 06:15:23,369::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.207188). Check your callbacks.
2020-12-21 06:15:24,869::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.196178). Check your callbacks.
2020-12-21 06:15:30,007::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:15:40,110::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:16:09,607::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.219 - Accuracy: 66.4% 
2020-12-21 06:16:23,344::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:16:49,844::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.234213). Check your callbacks.
2020-12-21 06:16:50,229::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.236214). Check your callbacks.
2020-12-21 06:16:50,618::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.235714). Check your callbacks.
2020-12-21 06:16:51,021::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.235213). Check your callbacks.
2020-12-21 06:16:51,447::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.235714). Check your callbacks.
2020-12-21 06:16:54,023::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.234213). Check your callbacks.
2020-12-21 06:16:59,473::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:17:06,521::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:17:38,000::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.217 - Accuracy: 66.2% 
2020-12-21 06:17:52,695::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:18:17,708::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.122111). Check your callbacks.
2020-12-21 06:18:18,921::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.202183). Check your callbacks.
2020-12-21 06:18:19,256::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.185168). Check your callbacks.
2020-12-21 06:18:19,604::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.202183). Check your callbacks.
2020-12-21 06:18:19,912::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.185168). Check your callbacks.
2020-12-21 06:18:20,101::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.168152). Check your callbacks.
2020-12-21 06:18:20,205::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.160646). Check your callbacks.
2020-12-21 06:18:20,296::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.137625). Check your callbacks.
2020-12-21 06:18:21,011::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.102593). Check your callbacks.
2020-12-21 06:18:26,306::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:18:33,366::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:19:06,861::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.219 - Accuracy: 66.3% 
2020-12-21 06:19:21,324::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:19:46,861::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.168153). Check your callbacks.
2020-12-21 06:19:47,987::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.183667). Check your callbacks.
2020-12-21 06:19:48,264::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.168153). Check your callbacks.
2020-12-21 06:19:48,418::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.145632). Check your callbacks.
2020-12-21 06:19:48,665::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.160145). Check your callbacks.
2020-12-21 06:19:48,912::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.141628). Check your callbacks.
2020-12-21 06:19:49,154::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.121110). Check your callbacks.
2020-12-21 06:19:55,586::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:20:06,163::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:20:34,177::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.217 - Accuracy: 66.3% 
2020-12-21 06:20:48,565::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:21:12,376::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.107097). Check your callbacks.
2020-12-21 06:21:12,775::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.195177). Check your callbacks.
2020-12-21 06:21:13,187::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.196178). Check your callbacks.
2020-12-21 06:21:13,595::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.197179). Check your callbacks.
2020-12-21 06:21:14,023::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.223703). Check your callbacks.
2020-12-21 06:21:14,632::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.196178). Check your callbacks.
2020-12-21 06:21:20,604::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.196178). Check your callbacks.
2020-12-21 06:21:22,719::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:21:29,702::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:22:04,574::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.218 - Accuracy: 66.6% 
2020-12-21 06:22:16,388::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:22:39,861::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.168153). Check your callbacks.
2020-12-21 06:22:40,263::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.205186). Check your callbacks.
2020-12-21 06:22:41,316::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.199180). Check your callbacks.
2020-12-21 06:22:41,681::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.206187). Check your callbacks.
2020-12-21 06:22:41,974::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.199180). Check your callbacks.
2020-12-21 06:22:42,271::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.192174). Check your callbacks.
2020-12-21 06:22:42,494::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.180163). Check your callbacks.
2020-12-21 06:22:42,654::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.159645). Check your callbacks.
2020-12-21 06:22:49,106::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:22:56,139::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:23:28,722::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.219 - Accuracy: 66.1% 
2020-12-21 06:23:43,620::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:24:03,400::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.344312). Check your callbacks.
2020-12-21 06:24:06,862::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.272247). Check your callbacks.
2020-12-21 06:24:07,244::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.271246). Check your callbacks.
2020-12-21 06:24:07,680::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.270245). Check your callbacks.
2020-12-21 06:24:08,021::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.239717). Check your callbacks.
2020-12-21 06:24:08,324::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.209190). Check your callbacks.
2020-12-21 06:24:12,213::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.176160). Check your callbacks.
2020-12-21 06:24:15,620::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.124112). Check your callbacks.
2020-12-21 06:24:16,444::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:24:23,399::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:24:56,616::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.218 - Accuracy: 66.3% 
2020-12-21 06:25:11,071::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:25:31,186::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.296269). Check your callbacks.
2020-12-21 06:25:31,716::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.306278). Check your callbacks.
2020-12-21 06:25:32,148::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.283757). Check your callbacks.
2020-12-21 06:25:36,183::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.257734). Check your callbacks.
2020-12-21 06:25:36,356::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.254230). Check your callbacks.
2020-12-21 06:25:36,581::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.237716). Check your callbacks.
2020-12-21 06:25:36,868::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.221201). Check your callbacks.
2020-12-21 06:25:37,142::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.197179). Check your callbacks.
2020-12-21 06:25:43,701::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:25:53,641::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:26:24,257::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.218 - Accuracy: 66.3% 
2020-12-21 06:26:39,062::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:27:02,390::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.188170). Check your callbacks.
2020-12-21 06:27:02,728::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.188671). Check your callbacks.
2020-12-21 06:27:03,115::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.189172). Check your callbacks.
2020-12-21 06:27:03,511::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.207688). Check your callbacks.
2020-12-21 06:27:03,710::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.189172). Check your callbacks.
2020-12-21 06:27:03,837::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.188671). Check your callbacks.
2020-12-21 06:27:04,127::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.189172). Check your callbacks.
2020-12-21 06:27:06,788::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.117106). Check your callbacks.
2020-12-21 06:27:11,448::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:27:20,731::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:27:50,029::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.218 - Accuracy: 66.3% 
2020-12-21 06:28:04,087::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:28:29,991::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.253230). Check your callbacks.
2020-12-21 06:28:30,343::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.226205). Check your callbacks.
2020-12-21 06:28:30,534::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.199181). Check your callbacks.
2020-12-21 06:28:30,843::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.206688). Check your callbacks.
2020-12-21 06:28:31,177::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.202183). Check your callbacks.
2020-12-21 06:28:33,073::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.189672). Check your callbacks.
2020-12-21 06:28:33,162::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.172156). Check your callbacks.
2020-12-21 06:28:33,246::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.106096). Check your callbacks.
2020-12-21 06:28:38,069::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:28:46,598::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:29:16,338::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.22 - Accuracy: 66.0% 
2020-12-21 06:29:31,233::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:29:56,721::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.241219). Check your callbacks.
2020-12-21 06:29:57,145::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.259235). Check your callbacks.
2020-12-21 06:29:57,519::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.234713). Check your callbacks.
2020-12-21 06:29:57,898::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.210191). Check your callbacks.
2020-12-21 06:29:58,245::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.209190). Check your callbacks.
2020-12-21 06:29:58,413::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.208189). Check your callbacks.
2020-12-21 06:29:59,409::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.193676). Check your callbacks.
2020-12-21 06:30:00,061::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.120609). Check your callbacks.
2020-12-21 06:30:05,088::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:30:12,159::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:30:45,172::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.214 - Accuracy: 66.4% 
2020-12-21 06:31:00,058::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:31:19,295::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.344312). Check your callbacks.
2020-12-21 06:31:23,399::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.296769). Check your callbacks.
2020-12-21 06:31:23,564::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.271246). Check your callbacks.
2020-12-21 06:31:23,851::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.256733). Check your callbacks.
2020-12-21 06:31:24,202::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.242220). Check your callbacks.
2020-12-21 06:31:29,158::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.185668). Check your callbacks.
2020-12-21 06:31:29,250::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.162147). Check your callbacks.
2020-12-21 06:31:30,770::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:31:37,858::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:32:10,438::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.217 - Accuracy: 66.3% 
2020-12-21 06:32:25,031::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:32:48,399::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.126114). Check your callbacks.
2020-12-21 06:32:48,801::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.186168). Check your callbacks.
2020-12-21 06:32:49,175::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.197679). Check your callbacks.
2020-12-21 06:32:52,726::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.171155). Check your callbacks.
2020-12-21 06:32:57,626::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:33:04,736::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:33:37,963::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.219 - Accuracy: 66.0% 
2020-12-21 06:33:52,079::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:34:17,123::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.243221). Check your callbacks.
2020-12-21 06:34:17,536::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.255231). Check your callbacks.
2020-12-21 06:34:17,910::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.233211). Check your callbacks.
2020-12-21 06:34:18,270::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.211192). Check your callbacks.
2020-12-21 06:34:18,478::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.210191). Check your callbacks.
2020-12-21 06:34:18,710::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.209189). Check your callbacks.
2020-12-21 06:34:19,013::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.208689). Check your callbacks.
2020-12-21 06:34:20,401::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.187670). Check your callbacks.
2020-12-21 06:34:25,654::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:34:32,803::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:35:05,012::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.214 - Accuracy: 66.8% 
2020-12-21 06:35:18,940::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:35:38,186::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.403366). Check your callbacks.
2020-12-21 06:35:41,856::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.302274). Check your callbacks.
2020-12-21 06:35:42,271::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.276251). Check your callbacks.
2020-12-21 06:35:42,683::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.250227). Check your callbacks.
2020-12-21 06:35:43,099::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.251228). Check your callbacks.
2020-12-21 06:35:50,931::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.123112). Check your callbacks.
2020-12-21 06:35:51,022::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.123112). Check your callbacks.
2020-12-21 06:35:51,831::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:36:02,032::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:36:31,003::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.216 - Accuracy: 66.7% 
2020-12-21 06:36:45,373::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:37:07,310::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.324294). Check your callbacks.
2020-12-21 06:37:10,886::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.290263). Check your callbacks.
2020-12-21 06:37:11,229::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.245222). Check your callbacks.
2020-12-21 06:37:11,543::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.200181). Check your callbacks.
2020-12-21 06:37:11,890::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.200181). Check your callbacks.
2020-12-21 06:37:12,038::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.200181). Check your callbacks.
2020-12-21 06:37:12,262::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.200181). Check your callbacks.
2020-12-21 06:37:13,068::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.177161). Check your callbacks.
2020-12-21 06:37:18,403::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:37:25,458::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:38:01,406::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.217 - Accuracy: 66.2% 
2020-12-21 06:38:13,533::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:38:37,332::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.196679). Check your callbacks.
2020-12-21 06:38:37,617::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.174158). Check your callbacks.
2020-12-21 06:38:37,932::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.164149). Check your callbacks.
2020-12-21 06:38:38,250::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.174158). Check your callbacks.
2020-12-21 06:38:38,383::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.164149). Check your callbacks.
2020-12-21 06:38:38,636::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.165150). Check your callbacks.
2020-12-21 06:38:38,812::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.159645). Check your callbacks.
2020-12-21 06:38:38,949::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.147133). Check your callbacks.
2020-12-21 06:38:45,344::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:38:52,402::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:39:25,403::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.215 - Accuracy: 66.6% 
2020-12-21 06:39:40,126::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:40:01,296::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.271746). Check your callbacks.
2020-12-21 06:40:01,708::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.258234). Check your callbacks.
2020-12-21 06:40:05,311::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.233211). Check your callbacks.
2020-12-21 06:40:05,654::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.231210). Check your callbacks.
2020-12-21 06:40:06,020::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.229208). Check your callbacks.
2020-12-21 06:40:06,304::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.215195). Check your callbacks.
2020-12-21 06:40:06,588::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.201183). Check your callbacks.
2020-12-21 06:40:06,717::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.194176). Check your callbacks.
2020-12-21 06:40:06,898::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.176160). Check your callbacks.
2020-12-21 06:40:11,980::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.116105). Check your callbacks.
2020-12-21 06:40:13,068::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:40:19,996::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:40:53,068::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.214 - Accuracy: 67.0% 
2020-12-21 06:41:07,571::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:41:31,186::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.210691). Check your callbacks.
2020-12-21 06:41:31,486::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.179163). Check your callbacks.
2020-12-21 06:41:31,646::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.176160). Check your callbacks.
2020-12-21 06:41:31,892::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.173157). Check your callbacks.
2020-12-21 06:41:32,039::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.160646). Check your callbacks.
2020-12-21 06:41:32,319::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.173157). Check your callbacks.
2020-12-21 06:41:33,108::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.140628). Check your callbacks.
2020-12-21 06:41:39,349::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:41:46,955::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:42:19,915::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.218 - Accuracy: 66.4% 
2020-12-21 06:42:34,167::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:42:57,519::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.261237). Check your callbacks.
2020-12-21 06:42:57,632::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.207188). Check your callbacks.
2020-12-21 06:42:57,744::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.153139). Check your callbacks.
2020-12-21 06:42:58,000::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.159645). Check your callbacks.
2020-12-21 06:42:58,128::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.153139). Check your callbacks.
2020-12-21 06:42:58,333::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.135623). Check your callbacks.
2020-12-21 06:43:05,532::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:43:12,557::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:43:46,016::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.215 - Accuracy: 66.5% 
2020-12-21 06:44:00,485::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:44:23,655::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.102593). Check your callbacks.
2020-12-21 06:44:23,977::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.115105). Check your callbacks.
2020-12-21 06:44:24,312::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.145132). Check your callbacks.
2020-12-21 06:44:24,672::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.175159). Check your callbacks.
2020-12-21 06:44:24,833::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.145132). Check your callbacks.
2020-12-21 06:44:25,152::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.175159). Check your callbacks.
2020-12-21 06:44:27,025::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.102593). Check your callbacks.
2020-12-21 06:44:33,048::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:44:43,542::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:45:12,892::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.216 - Accuracy: 66.3% 
2020-12-21 06:45:27,660::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:45:51,571::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.180163). Check your callbacks.
2020-12-21 06:45:51,946::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.201683). Check your callbacks.
2020-12-21 06:45:52,341::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.223202). Check your callbacks.
2020-12-21 06:45:52,706::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.216196). Check your callbacks.
2020-12-21 06:45:53,070::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.209190). Check your callbacks.
2020-12-21 06:45:53,413::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.208189). Check your callbacks.
2020-12-21 06:45:53,769::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.207188). Check your callbacks.
2020-12-21 06:45:56,542::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.201182). Check your callbacks.
2020-12-21 06:45:56,637::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.201182). Check your callbacks.
2020-12-21 06:46:00,658::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:46:07,830::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:46:39,730::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.213 - Accuracy: 66.6% 
2020-12-21 06:46:53,780::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:47:12,804::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.296769). Check your callbacks.
2020-12-21 06:47:13,199::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.252229). Check your callbacks.
2020-12-21 06:47:13,627::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.253730). Check your callbacks.
2020-12-21 06:47:14,139::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.255231). Check your callbacks.
2020-12-21 06:47:14,664::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.289763). Check your callbacks.
2020-12-21 06:47:29,780::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.241219). Check your callbacks.
2020-12-21 06:47:29,864::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.132120). Check your callbacks.
2020-12-21 06:47:30,147::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:47:37,146::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:48:10,153::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.214 - Accuracy: 66.9% 
2020-12-21 06:48:25,050::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:48:48,319::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.152138). Check your callbacks.
2020-12-21 06:48:48,687::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.186669). Check your callbacks.
2020-12-21 06:48:49,036::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.197179). Check your callbacks.
2020-12-21 06:48:49,376::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.187170). Check your callbacks.
2020-12-21 06:48:49,524::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.177161). Check your callbacks.
2020-12-21 06:48:49,783::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.168653). Check your callbacks.
2020-12-21 06:48:50,082::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.160145). Check your callbacks.
2020-12-21 06:48:57,798::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:49:04,779::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:49:37,902::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.215 - Accuracy: 66.6% 
2020-12-21 06:49:51,481::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:50:11,663::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.307279). Check your callbacks.
2020-12-21 06:50:15,765::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.296269). Check your callbacks.
2020-12-21 06:50:16,225::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.285759). Check your callbacks.
2020-12-21 06:50:16,673::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.275250). Check your callbacks.
2020-12-21 06:50:17,124::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.274749). Check your callbacks.
2020-12-21 06:50:20,544::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.273248). Check your callbacks.
2020-12-21 06:50:24,977::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:50:31,968::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:51:03,693::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.213 - Accuracy: 66.5% 
2020-12-21 06:51:18,256::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:51:43,412::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.167152). Check your callbacks.
2020-12-21 06:51:43,805::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.179663). Check your callbacks.
2020-12-21 06:51:44,163::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.192174). Check your callbacks.
2020-12-21 06:51:44,501::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.194176). Check your callbacks.
2020-12-21 06:51:44,818::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.192174). Check your callbacks.
2020-12-21 06:51:45,001::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.179663). Check your callbacks.
2020-12-21 06:51:45,126::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.167152). Check your callbacks.
2020-12-21 06:51:45,248::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.160646). Check your callbacks.
2020-12-21 06:51:45,364::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.130618). Check your callbacks.
2020-12-21 06:51:51,803::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:51:58,784::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:52:34,104::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.217 - Accuracy: 66.3% 
2020-12-21 06:52:46,288::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:53:10,462::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.262238). Check your callbacks.
2020-12-21 06:53:10,794::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.226706). Check your callbacks.
2020-12-21 06:53:10,957::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.191173). Check your callbacks.
2020-12-21 06:53:11,225::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.189172). Check your callbacks.
2020-12-21 06:53:11,357::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.187170). Check your callbacks.
2020-12-21 06:53:11,591::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.178162). Check your callbacks.
2020-12-21 06:53:17,688::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:53:24,739::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:53:59,942::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.214 - Accuracy: 66.6% 
2020-12-21 06:54:12,589::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:54:36,716::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.247224). Check your callbacks.
2020-12-21 06:54:37,050::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.222702). Check your callbacks.
2020-12-21 06:54:37,319::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.198179). Check your callbacks.
2020-12-21 06:54:37,592::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.196678). Check your callbacks.
2020-12-21 06:54:37,738::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.195177). Check your callbacks.
2020-12-21 06:54:37,974::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.186169). Check your callbacks.
2020-12-21 06:54:44,188::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:54:51,229::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:55:23,360::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.214 - Accuracy: 66.8% 
2020-12-21 06:55:38,071::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:56:04,040::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.104094). Check your callbacks.
2020-12-21 06:56:04,401::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.175159). Check your callbacks.
2020-12-21 06:56:04,746::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.190172). Check your callbacks.
2020-12-21 06:56:04,895::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.175159). Check your callbacks.
2020-12-21 06:56:05,091::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.143630). Check your callbacks.
2020-12-21 06:56:12,057::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:56:19,612::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:56:52,497::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.214 - Accuracy: 66.9% 
2020-12-21 06:57:06,687::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:57:30,610::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.252729). Check your callbacks.
2020-12-21 06:57:31,540::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.239717). Check your callbacks.
2020-12-21 06:57:31,960::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.243221). Check your callbacks.
2020-12-21 06:57:32,348::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.239717). Check your callbacks.
2020-12-21 06:57:40,110::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:57:47,233::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:58:21,088::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.214 - Accuracy: 66.5% 
2020-12-21 06:58:35,094::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:59:00,743::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.256232). Check your callbacks.
2020-12-21 06:59:01,204::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.285259). Check your callbacks.
2020-12-21 06:59:01,393::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.256232). Check your callbacks.
2020-12-21 06:59:01,520::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.227206). Check your callbacks.
2020-12-21 06:59:01,860::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.231710). Check your callbacks.
2020-12-21 06:59:02,558::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.201183). Check your callbacks.
2020-12-21 06:59:08,960::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:59:16,069::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 06:59:52,609::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.214 - Accuracy: 67.0% 
2020-12-21 07:00:04,243::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:00:29,337::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.138626). Check your callbacks.
2020-12-21 07:00:29,736::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.198180). Check your callbacks.
2020-12-21 07:00:30,143::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.219199). Check your callbacks.
2020-12-21 07:00:30,496::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.198180). Check your callbacks.
2020-12-21 07:00:30,828::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.195177). Check your callbacks.
2020-12-21 07:00:31,096::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.192174). Check your callbacks.
2020-12-21 07:00:31,313::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.185168). Check your callbacks.
2020-12-21 07:00:31,501::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.153639). Check your callbacks.
2020-12-21 07:00:32,608::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.153639). Check your callbacks.
2020-12-21 07:00:37,480::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:00:44,467::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:01:21,222::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.215 - Accuracy: 66.5% 
2020-12-21 07:01:32,925::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:01:55,049::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.179163). Check your callbacks.
2020-12-21 07:01:55,316::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.159144). Check your callbacks.
2020-12-21 07:01:55,674::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.179163). Check your callbacks.
2020-12-21 07:01:56,113::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.216196). Check your callbacks.
2020-12-21 07:01:56,545::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.253230). Check your callbacks.
2020-12-21 07:01:56,966::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.249226). Check your callbacks.
2020-12-21 07:02:00,912::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.201683). Check your callbacks.
2020-12-21 07:02:03,874::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.181665). Check your callbacks.
2020-12-21 07:02:05,521::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:02:12,500::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:02:48,115::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.214 - Accuracy: 67.0% 
2020-12-21 07:03:00,290::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:03:25,381::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.256233). Check your callbacks.
2020-12-21 07:03:25,814::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.253230). Check your callbacks.
2020-12-21 07:03:26,020::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.244722). Check your callbacks.
2020-12-21 07:03:26,310::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.236214). Check your callbacks.
2020-12-21 07:03:26,660::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.222202). Check your callbacks.
2020-12-21 07:03:27,021::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.208189). Check your callbacks.
2020-12-21 07:03:27,191::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.200182). Check your callbacks.
2020-12-21 07:03:34,022::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:03:41,666::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:04:14,022::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.216 - Accuracy: 66.5% 
2020-12-21 07:04:28,296::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:04:50,737::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.160145). Check your callbacks.
2020-12-21 07:04:51,120::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.198680). Check your callbacks.
2020-12-21 07:04:51,527::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.237215). Check your callbacks.
2020-12-21 07:04:51,936::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.230209). Check your callbacks.
2020-12-21 07:04:52,309::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.223202). Check your callbacks.
2020-12-21 07:04:52,740::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.230209). Check your callbacks.
2020-12-21 07:04:56,811::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.182165). Check your callbacks.
2020-12-21 07:04:56,907::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.182165). Check your callbacks.
2020-12-21 07:05:00,739::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:05:07,815::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:05:40,524::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.213 - Accuracy: 66.7% 
2020-12-21 07:05:54,961::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:06:18,496::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.248225). Check your callbacks.
2020-12-21 07:06:18,867::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.240718). Check your callbacks.
2020-12-21 07:06:19,040::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.233211). Check your callbacks.
2020-12-21 07:06:19,324::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.224203). Check your callbacks.
2020-12-21 07:06:28,219::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:06:35,356::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:07:12,077::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.213 - Accuracy: 66.9% 
2020-12-21 07:07:23,225::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:07:43,274::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.332301). Check your callbacks.
2020-12-21 07:07:47,250::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.264740). Check your callbacks.
2020-12-21 07:07:47,740::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.302274). Check your callbacks.
2020-12-21 07:07:48,164::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.280254). Check your callbacks.
2020-12-21 07:07:48,569::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.258234). Check your callbacks.
2020-12-21 07:07:48,983::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.257233). Check your callbacks.
2020-12-21 07:07:56,597::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.205687). Check your callbacks.
2020-12-21 07:07:56,689::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.197179). Check your callbacks.
2020-12-21 07:07:58,136::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:08:05,178::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:08:37,451::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.215 - Accuracy: 66.5% 
2020-12-21 07:08:52,108::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:09:15,654::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.265741). Check your callbacks.
2020-12-21 07:09:16,137::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.284257). Check your callbacks.
2020-12-21 07:09:16,597::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.282256). Check your callbacks.
2020-12-21 07:09:17,087::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.284257). Check your callbacks.
2020-12-21 07:09:17,456::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.282256). Check your callbacks.
2020-12-21 07:09:17,801::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.280255). Check your callbacks.
2020-12-21 07:09:20,820::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.191674). Check your callbacks.
2020-12-21 07:09:23,601::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.106097). Check your callbacks.
2020-12-21 07:09:24,892::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:09:31,920::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:10:04,771::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.215 - Accuracy: 66.3% 
2020-12-21 07:10:19,521::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:10:43,666::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.156142). Check your callbacks.
2020-12-21 07:10:44,779::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.240718). Check your callbacks.
2020-12-21 07:10:45,198::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.236214). Check your callbacks.
2020-12-21 07:10:45,368::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.234212). Check your callbacks.
2020-12-21 07:10:45,642::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.232211). Check your callbacks.
2020-12-21 07:10:52,650::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:11:00,168::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:11:35,978::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.214 - Accuracy: 66.9% 
2020-12-21 07:11:48,274::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:12:09,033::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.326296). Check your callbacks.
2020-12-21 07:12:09,555::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.304276). Check your callbacks.
2020-12-21 07:12:12,908::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.272247). Check your callbacks.
2020-12-21 07:12:13,266::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.268243). Check your callbacks.
2020-12-21 07:12:15,737::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.205186). Check your callbacks.
2020-12-21 07:12:15,821::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.104094). Check your callbacks.
2020-12-21 07:12:19,558::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:12:26,623::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:12:59,734::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.211 - Accuracy: 66.8% 
2020-12-21 07:13:14,591::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:13:35,738::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.114104). Check your callbacks.
2020-12-21 07:13:36,839::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.176160). Check your callbacks.
2020-12-21 07:13:37,236::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.238216). Check your callbacks.
2020-12-21 07:13:37,656::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.244722). Check your callbacks.
2020-12-21 07:13:37,976::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.238216). Check your callbacks.
2020-12-21 07:13:47,067::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:13:54,117::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:14:27,258::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.213 - Accuracy: 66.9% 
2020-12-21 07:14:42,258::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:15:05,907::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.250227). Check your callbacks.
2020-12-21 07:15:06,305::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.240218). Check your callbacks.
2020-12-21 07:15:06,497::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.236715). Check your callbacks.
2020-12-21 07:15:06,833::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.233212). Check your callbacks.
2020-12-21 07:15:07,249::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.236715). Check your callbacks.
2020-12-21 07:15:10,389::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.208689). Check your callbacks.
2020-12-21 07:15:15,400::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:15:22,370::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:15:59,298::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.21 - Accuracy: 66.9% 
2020-12-21 07:16:10,256::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:16:33,160::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.200182). Check your callbacks.
2020-12-21 07:16:33,416::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.159145). Check your callbacks.
2020-12-21 07:16:33,768::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.178662). Check your callbacks.
2020-12-21 07:16:34,054::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.159145). Check your callbacks.
2020-12-21 07:16:34,386::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.176660). Check your callbacks.
2020-12-21 07:16:34,574::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.159145). Check your callbacks.
2020-12-21 07:16:41,903::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:16:49,032::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:17:22,121::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.213 - Accuracy: 66.8% 
2020-12-21 07:17:36,854::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:17:58,080::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.288762). Check your callbacks.
2020-12-21 07:17:58,553::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.316287). Check your callbacks.
2020-12-21 07:18:02,387::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.242220). Check your callbacks.
2020-12-21 07:18:02,681::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.234713). Check your callbacks.
2020-12-21 07:18:03,003::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.227206). Check your callbacks.
2020-12-21 07:18:03,216::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.214695). Check your callbacks.
2020-12-21 07:18:03,323::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.202183). Check your callbacks.
2020-12-21 07:18:03,559::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.190673). Check your callbacks.
2020-12-21 07:18:09,814::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:18:16,867::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:18:53,531::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.211 - Accuracy: 67.1% 
2020-12-21 07:19:05,170::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:19:23,702::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.337306). Check your callbacks.
2020-12-21 07:19:28,108::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.230209). Check your callbacks.
2020-12-21 07:19:28,453::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.196178). Check your callbacks.
2020-12-21 07:19:28,785::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.194176). Check your callbacks.
2020-12-21 07:19:29,141::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.196178). Check your callbacks.
2020-12-21 07:19:29,316::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.194176). Check your callbacks.
2020-12-21 07:19:29,412::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.192174). Check your callbacks.
2020-12-21 07:19:29,515::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.190673). Check your callbacks.
2020-12-21 07:19:29,623::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.105596). Check your callbacks.
2020-12-21 07:19:36,315::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:19:43,279::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:20:16,236::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.212 - Accuracy: 66.7% 
2020-12-21 07:20:31,014::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:20:55,213::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.178161). Check your callbacks.
2020-12-21 07:20:55,569::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.190673). Check your callbacks.
2020-12-21 07:20:55,891::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.187170). Check your callbacks.
2020-12-21 07:20:56,220::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.195177). Check your callbacks.
2020-12-21 07:20:56,556::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.187170). Check your callbacks.
2020-12-21 07:20:56,727::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.182666). Check your callbacks.
2020-12-21 07:20:56,956::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.178161). Check your callbacks.
2020-12-21 07:20:57,239::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.174158). Check your callbacks.
2020-12-21 07:21:03,853::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:21:12,515::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:21:43,939::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.212 - Accuracy: 66.8% 
2020-12-21 07:21:58,400::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:22:23,540::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.172157). Check your callbacks.
2020-12-21 07:22:23,932::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.199681). Check your callbacks.
2020-12-21 07:22:24,328::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.227206). Check your callbacks.
2020-12-21 07:22:24,737::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.230709). Check your callbacks.
2020-12-21 07:22:25,068::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.227206). Check your callbacks.
2020-12-21 07:22:25,324::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.199681). Check your callbacks.
2020-12-21 07:22:25,578::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.172157). Check your callbacks.
2020-12-21 07:22:25,702::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.169654). Check your callbacks.
2020-12-21 07:22:25,822::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.153639). Check your callbacks.
2020-12-21 07:22:26,427::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.127616). Check your callbacks.
2020-12-21 07:22:31,873::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:22:38,918::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:23:10,974::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.214 - Accuracy: 66.5% 
2020-12-21 07:23:25,256::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:23:50,248::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.110100). Check your callbacks.
2020-12-21 07:23:50,596::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.180164). Check your callbacks.
2020-12-21 07:23:50,933::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.205186). Check your callbacks.
2020-12-21 07:23:51,133::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.157643). Check your callbacks.
2020-12-21 07:23:51,431::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.204185). Check your callbacks.
2020-12-21 07:23:51,769::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.204686). Check your callbacks.
2020-12-21 07:23:52,110::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.204185). Check your callbacks.
2020-12-21 07:23:52,378::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.200182). Check your callbacks.
2020-12-21 07:23:53,449::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.118107). Check your callbacks.
2020-12-21 07:23:58,702::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:24:06,465::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:24:37,048::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.214 - Accuracy: 66.5% 
2020-12-21 07:24:51,559::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:25:12,494::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.308280). Check your callbacks.
2020-12-21 07:25:15,960::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.279253). Check your callbacks.
2020-12-21 07:25:16,610::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.261236). Check your callbacks.
2020-12-21 07:25:16,834::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.228207). Check your callbacks.
2020-12-21 07:25:17,062::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.195177). Check your callbacks.
2020-12-21 07:25:17,324::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.186169). Check your callbacks.
2020-12-21 07:25:21,775::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.137124). Check your callbacks.
2020-12-21 07:25:24,586::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:25:31,712::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:26:07,117::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.212 - Accuracy: 67.0% 
2020-12-21 07:26:19,723::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:26:45,466::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.109099). Check your callbacks.
2020-12-21 07:26:45,868::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.162147). Check your callbacks.
2020-12-21 07:26:46,212::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.174659). Check your callbacks.
2020-12-21 07:26:46,428::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.162147). Check your callbacks.
2020-12-21 07:26:46,579::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.125614). Check your callbacks.
2020-12-21 07:26:46,777::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.110100). Check your callbacks.
2020-12-21 07:26:47,041::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.121610). Check your callbacks.
2020-12-21 07:26:47,241::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.121610). Check your callbacks.
2020-12-21 07:26:53,720::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:27:01,354::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:27:34,712::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.212 - Accuracy: 66.8% 
2020-12-21 07:27:48,320::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:28:10,334::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.354321). Check your callbacks.
2020-12-21 07:28:14,765::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.288261). Check your callbacks.
2020-12-21 07:28:15,248::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.290763). Check your callbacks.
2020-12-21 07:28:15,642::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.288261). Check your callbacks.
2020-12-21 07:28:15,995::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.283757). Check your callbacks.
2020-12-21 07:28:16,164::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.279253). Check your callbacks.
2020-12-21 07:28:16,377::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.258234). Check your callbacks.
2020-12-21 07:28:22,409::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:28:29,515::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:29:04,649::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.212 - Accuracy: 67.0% 
2020-12-21 07:29:17,103::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:29:40,602::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.161146). Check your callbacks.
2020-12-21 07:29:41,010::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.192675). Check your callbacks.
2020-12-21 07:29:41,463::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.224203). Check your callbacks.
2020-12-21 07:29:41,873::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.237215). Check your callbacks.
2020-12-21 07:29:42,062::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.224203). Check your callbacks.
2020-12-21 07:29:42,413::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.237215). Check your callbacks.
2020-12-21 07:29:42,767::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.224203). Check your callbacks.
2020-12-21 07:29:49,858::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.187670). Check your callbacks.
2020-12-21 07:29:49,942::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.158143). Check your callbacks.
2020-12-21 07:29:51,453::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:29:58,501::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:30:31,910::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.211 - Accuracy: 66.8% 
2020-12-21 07:30:46,444::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:31:12,606::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.244221). Check your callbacks.
2020-12-21 07:31:13,007::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.246223). Check your callbacks.
2020-12-21 07:31:13,334::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.244221). Check your callbacks.
2020-12-21 07:31:13,637::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.221200). Check your callbacks.
2020-12-21 07:31:13,875::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.198179). Check your callbacks.
2020-12-21 07:31:14,040::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.192675). Check your callbacks.
2020-12-21 07:31:15,191::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.122611). Check your callbacks.
2020-12-21 07:31:20,254::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:31:27,295::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:32:00,708::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.213 - Accuracy: 66.8% 
2020-12-21 07:32:15,612::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:32:41,012::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.252729). Check your callbacks.
2020-12-21 07:32:41,417::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.238216). Check your callbacks.
2020-12-21 07:32:41,801::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.224203). Check your callbacks.
2020-12-21 07:32:42,145::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.210190). Check your callbacks.
2020-12-21 07:32:42,391::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.205686). Check your callbacks.
2020-12-21 07:32:42,623::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.201183). Check your callbacks.
2020-12-21 07:32:42,786::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.200182). Check your callbacks.
2020-12-21 07:32:49,390::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:32:56,478::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:33:30,356::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.211 - Accuracy: 66.9% 
2020-12-21 07:33:44,872::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:34:09,887::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.143130). Check your callbacks.
2020-12-21 07:34:10,166::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.156142). Check your callbacks.
2020-12-21 07:34:10,315::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.143130). Check your callbacks.
2020-12-21 07:34:10,611::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.156142). Check your callbacks.
2020-12-21 07:34:10,784::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.143130). Check your callbacks.
2020-12-21 07:34:11,070::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.156142). Check your callbacks.
2020-12-21 07:34:11,241::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.143130). Check your callbacks.
2020-12-21 07:34:18,127::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:34:25,208::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:34:58,801::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.212 - Accuracy: 67.2% 
2020-12-21 07:35:13,292::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:35:34,018::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.287761). Check your callbacks.
2020-12-21 07:35:34,462::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.279632). Check your callbacks.
2020-12-21 07:35:34,885::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.268933). Check your callbacks.
2020-12-21 07:35:38,897::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.257233). Check your callbacks.
2020-12-21 07:35:39,261::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.256232). Check your callbacks.
2020-12-21 07:35:39,608::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.247224). Check your callbacks.
2020-12-21 07:35:39,788::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.238216). Check your callbacks.
2020-12-21 07:35:45,931::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:35:55,495::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:36:26,549::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.212 - Accuracy: 67.0% 
2020-12-21 07:36:40,994::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:37:02,864::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.350318). Check your callbacks.
2020-12-21 07:37:08,019::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.265241). Check your callbacks.
2020-12-21 07:37:08,390::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.233212). Check your callbacks.
2020-12-21 07:37:08,740::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.229708). Check your callbacks.
2020-12-21 07:37:08,917::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.226205). Check your callbacks.
2020-12-21 07:37:10,902::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.200181). Check your callbacks.
2020-12-21 07:37:10,991::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.100091). Check your callbacks.
2020-12-21 07:37:15,010::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:37:22,655::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:37:56,584::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.209 - Accuracy: 67.4% 
2020-12-21 07:37:58,556::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 07:37:58,556::DEBUG::root::ML_Identification.py::651::[WARN]  |-> Reached max epoch of 100!
2020-12-21 07:37:58,767::DEBUG::root::ML_Identification.py::651::[TRAIN] V
2020-12-21 07:37:59,018::DEBUG::root::ML_Identification.py::651::[TRAIN] Done!

2020-12-21 07:37:59,235::DEBUG::root::ML_Identification.py::651::[INFO] Training complete after 145 minutes 48 seconds.

2020-12-21 07:37:59,422::DEBUG::root::ML_Identification.py::651::[SAVE] Saving model... 
2020-12-21 07:37:59,655::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 07:37:59,788::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 07:37:59,850::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 07:37:59,870::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 07:38:00,092::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 07:38:00,339::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 07:38:00,461::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 07:38:00,518::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 07:38:00,552::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 07:38:00,746::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 07:38:00,944::DEBUG::root::ML_Identification.py::651::[INFO] Deleting model and freeing GPU memory... 
2020-12-21 07:38:02,413::DEBUG::root::ML_Identification.py::651::[WARN] Model does not exist! Will now train and save.

2020-12-21 07:38:02,597::DEBUG::root::ML_Identification.py::651::[INIT] Initialising dataset... 
2020-12-21 07:38:02,836::DEBUG::root::ML_Identification.py::651::[INIT] Generating model (input shape = (128, 128, 1), classes = 18, optimizer: Adamax)... 
2020-12-21 07:38:03,655::DEBUG::root::ML_Identification.py::651::[TRAIN] Training...
2020-12-21 07:38:03,655::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 07:38:03,655::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Dataset             : Dataset(3, [0, 0, (0, 1), 0], [0], 128, 128, 32, False).
2020-12-21 07:38:03,656::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Success Condition   : A loss of 0.001.
2020-12-21 07:38:03,656::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Terminate Condition : Reaching epoch 100 or 5 consecutive epochs of stagnation.
2020-12-21 07:38:03,656::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 07:38:03,656::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Training 
2020-12-21 07:38:13,064::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:38:33,577::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.297269). Check your callbacks.
2020-12-21 07:38:37,369::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.246724). Check your callbacks.
2020-12-21 07:38:37,773::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.257233). Check your callbacks.
2020-12-21 07:38:38,277::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.258735). Check your callbacks.
2020-12-21 07:38:38,823::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.260236). Check your callbacks.
2020-12-21 07:38:39,314::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.272748). Check your callbacks.
2020-12-21 07:38:51,499::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.300773). Check your callbacks.
2020-12-21 07:38:51,998::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.311283). Check your callbacks.
2020-12-21 07:38:52,600::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.324795). Check your callbacks.
2020-12-21 07:38:56,709::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.354821). Check your callbacks.
2020-12-21 07:38:57,484::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.363329). Check your callbacks.
2020-12-21 07:39:05,875::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.363329). Check your callbacks.
2020-12-21 07:39:12,790::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.374840). Check your callbacks.
2020-12-21 07:39:13,096::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.363329). Check your callbacks.
2020-12-21 07:39:14,875::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.280754). Check your callbacks.
2020-12-21 07:39:14,969::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.184668). Check your callbacks.
2020-12-21 07:39:15,054::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.104095). Check your callbacks.
2020-12-21 07:39:18,509::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:39:26,520::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:40:02,185::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.351 - Accuracy: 48.6% 
2020-12-21 07:40:13,517::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:40:39,370::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.245723). Check your callbacks.
2020-12-21 07:40:39,684::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.206187). Check your callbacks.
2020-12-21 07:40:40,106::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.232211). Check your callbacks.
2020-12-21 07:40:40,613::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.258234). Check your callbacks.
2020-12-21 07:40:41,169::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.271746). Check your callbacks.
2020-12-21 07:40:41,723::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.285259). Check your callbacks.
2020-12-21 07:40:42,346::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.305277). Check your callbacks.
2020-12-21 07:40:43,768::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.335805). Check your callbacks.
2020-12-21 07:40:44,358::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.346771). Check your callbacks.
2020-12-21 07:40:58,804::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.362328). Check your callbacks.
2020-12-21 07:40:59,548::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.362328). Check your callbacks.
2020-12-21 07:41:00,149::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.374840). Check your callbacks.
2020-12-21 07:41:07,657::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.358826). Check your callbacks.
2020-12-21 07:41:08,080::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.346314). Check your callbacks.
2020-12-21 07:41:08,524::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.341310). Check your callbacks.
2020-12-21 07:41:09,099::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.285759). Check your callbacks.
2020-12-21 07:41:13,898::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.175159). Check your callbacks.
2020-12-21 07:41:17,635::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:41:24,858::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:41:58,903::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.307 - Accuracy: 55.9% 
2020-12-21 07:42:12,919::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:42:37,685::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.258234). Check your callbacks.
2020-12-21 07:42:37,858::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.236214). Check your callbacks.
2020-12-21 07:42:38,381::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.258234). Check your callbacks.
2020-12-21 07:42:38,880::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.280254). Check your callbacks.
2020-12-21 07:42:39,379::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.284258). Check your callbacks.
2020-12-21 07:42:39,938::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.288262). Check your callbacks.
2020-12-21 07:42:40,458::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.296269). Check your callbacks.
2020-12-21 07:42:41,026::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.305277). Check your callbacks.
2020-12-21 07:42:51,799::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.345813). Check your callbacks.
2020-12-21 07:42:57,066::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.366332). Check your callbacks.
2020-12-21 07:42:57,629::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.366332). Check your callbacks.
2020-12-21 07:42:58,227::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.378843). Check your callbacks.
2020-12-21 07:43:04,892::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.378843). Check your callbacks.
2020-12-21 07:43:05,447::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.366332). Check your callbacks.
2020-12-21 07:43:05,953::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.349817). Check your callbacks.
2020-12-21 07:43:06,430::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.346314). Check your callbacks.
2020-12-21 07:43:13,395::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.328798). Check your callbacks.
2020-12-21 07:43:13,481::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.320791). Check your callbacks.
2020-12-21 07:43:13,566::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.170655). Check your callbacks.
2020-12-21 07:43:16,794::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:43:26,792::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:43:58,873::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.278 - Accuracy: 61.1% 
2020-12-21 07:44:11,624::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:44:34,158::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.132120). Check your callbacks.
2020-12-21 07:44:34,503::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.168152). Check your callbacks.
2020-12-21 07:44:34,916::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.204185). Check your callbacks.
2020-12-21 07:44:35,387::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.234212). Check your callbacks.
2020-12-21 07:44:35,949::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.264240). Check your callbacks.
2020-12-21 07:44:36,160::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.234212). Check your callbacks.
2020-12-21 07:44:41,059::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.275750). Check your callbacks.
2020-12-21 07:44:41,678::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.282756). Check your callbacks.
2020-12-21 07:44:47,971::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.327797). Check your callbacks.
2020-12-21 07:44:53,437::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.353320). Check your callbacks.
2020-12-21 07:44:53,968::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.353320). Check your callbacks.
2020-12-21 07:44:54,565::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.353320). Check your callbacks.
2020-12-21 07:45:01,402::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.353320). Check your callbacks.
2020-12-21 07:45:01,949::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.352320). Check your callbacks.
2020-12-21 07:45:02,559::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.352320). Check your callbacks.
2020-12-21 07:45:06,864::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.348316). Check your callbacks.
2020-12-21 07:45:10,856::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.346314). Check your callbacks.
2020-12-21 07:45:10,985::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.333302). Check your callbacks.
2020-12-21 07:45:11,081::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.313785). Check your callbacks.
2020-12-21 07:45:11,170::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.212693). Check your callbacks.
2020-12-21 07:45:11,255::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.115104). Check your callbacks.
2020-12-21 07:45:14,796::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:45:22,241::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:45:54,381::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.254 - Accuracy: 64.4% 
2020-12-21 07:46:09,831::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:46:32,767::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.144131). Check your callbacks.
2020-12-21 07:46:33,093::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.185668). Check your callbacks.
2020-12-21 07:46:33,528::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.227206). Check your callbacks.
2020-12-21 07:46:34,001::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.243721). Check your callbacks.
2020-12-21 07:46:34,533::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.260236). Check your callbacks.
2020-12-21 07:46:35,152::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.265241). Check your callbacks.
2020-12-21 07:46:40,169::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.322292). Check your callbacks.
2020-12-21 07:46:52,169::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.357825). Check your callbacks.
2020-12-21 07:46:52,702::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.357825). Check your callbacks.
2020-12-21 07:46:53,228::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.352820). Check your callbacks.
2020-12-21 07:46:53,803::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.352820). Check your callbacks.
2020-12-21 07:47:00,342::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.355322). Check your callbacks.
2020-12-21 07:47:00,964::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.355322). Check your callbacks.
2020-12-21 07:47:05,748::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.341309). Check your callbacks.
2020-12-21 07:47:11,299::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.326796). Check your callbacks.
2020-12-21 07:47:11,387::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.294267). Check your callbacks.
2020-12-21 07:47:11,471::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.132120). Check your callbacks.
2020-12-21 07:47:13,858::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:47:21,134::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:47:55,061::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.245 - Accuracy: 65.5% 
2020-12-21 07:48:08,941::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:48:29,138::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.293266). Check your callbacks.
2020-12-21 07:48:32,887::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.266242). Check your callbacks.
2020-12-21 07:48:33,282::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.259235). Check your callbacks.
2020-12-21 07:48:33,805::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.266242). Check your callbacks.
2020-12-21 07:48:34,346::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.279754). Check your callbacks.
2020-12-21 07:48:34,945::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.293266). Check your callbacks.
2020-12-21 07:48:35,522::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.314285). Check your callbacks.
2020-12-21 07:48:48,036::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.337806). Check your callbacks.
2020-12-21 07:48:52,404::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.337806). Check your callbacks.
2020-12-21 07:48:52,810::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.337806). Check your callbacks.
2020-12-21 07:48:53,285::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.320791). Check your callbacks.
2020-12-21 07:48:53,828::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.316287). Check your callbacks.
2020-12-21 07:48:54,448::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.316287). Check your callbacks.
2020-12-21 07:49:00,717::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.335804). Check your callbacks.
2020-12-21 07:49:06,643::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.316287). Check your callbacks.
2020-12-21 07:49:06,983::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.316287). Check your callbacks.
2020-12-21 07:49:09,160::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.270746). Check your callbacks.
2020-12-21 07:49:09,400::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.198180). Check your callbacks.
2020-12-21 07:49:12,366::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:49:20,245::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:49:52,632::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.239 - Accuracy: 65.6% 
2020-12-21 07:50:07,139::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:50:31,869::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.177161). Check your callbacks.
2020-12-21 07:50:32,207::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.196178). Check your callbacks.
2020-12-21 07:50:32,569::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.214194). Check your callbacks.
2020-12-21 07:50:33,055::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.214695). Check your callbacks.
2020-12-21 07:50:33,543::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.215195). Check your callbacks.
2020-12-21 07:50:34,070::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.244221). Check your callbacks.
2020-12-21 07:50:34,617::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.273248). Check your callbacks.
2020-12-21 07:50:35,226::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.288261). Check your callbacks.
2020-12-21 07:50:37,165::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.316787). Check your callbacks.
2020-12-21 07:50:37,746::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.328798). Check your callbacks.
2020-12-21 07:50:50,915::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.358325). Check your callbacks.
2020-12-21 07:50:51,469::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.365331). Check your callbacks.
2020-12-21 07:50:52,031::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.365331). Check your callbacks.
2020-12-21 07:50:52,586::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.365331). Check your callbacks.
2020-12-21 07:51:00,583::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.359826). Check your callbacks.
2020-12-21 07:51:01,099::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.359826). Check your callbacks.
2020-12-21 07:51:02,540::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.351318). Check your callbacks.
2020-12-21 07:51:02,919::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.343812). Check your callbacks.
2020-12-21 07:51:07,280::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.240718). Check your callbacks.
2020-12-21 07:51:11,038::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:51:18,247::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:51:54,325::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.235 - Accuracy: 65.7% 
2020-12-21 07:52:06,551::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:52:29,791::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.253730). Check your callbacks.
2020-12-21 07:52:30,206::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.245223). Check your callbacks.
2020-12-21 07:52:30,681::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.257233). Check your callbacks.
2020-12-21 07:52:31,253::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.269244). Check your callbacks.
2020-12-21 07:52:31,874::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.284258). Check your callbacks.
2020-12-21 07:52:34,917::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.295768). Check your callbacks.
2020-12-21 07:52:35,506::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.305777). Check your callbacks.
2020-12-21 07:52:46,575::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.350818). Check your callbacks.
2020-12-21 07:52:48,754::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.356824). Check your callbacks.
2020-12-21 07:52:49,279::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.356824). Check your callbacks.
2020-12-21 07:52:49,772::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.344813). Check your callbacks.
2020-12-21 07:52:50,394::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.344813). Check your callbacks.
2020-12-21 07:52:57,075::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.344813). Check your callbacks.
2020-12-21 07:52:57,659::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.344813). Check your callbacks.
2020-12-21 07:53:00,575::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.337306). Check your callbacks.
2020-12-21 07:53:07,281::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.310782). Check your callbacks.
2020-12-21 07:53:08,055::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.283257). Check your callbacks.
2020-12-21 07:53:08,139::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.133121). Check your callbacks.
2020-12-21 07:53:10,130::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:53:17,314::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:53:50,164::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.233 - Accuracy: 65.6% 
2020-12-21 07:54:05,282::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:54:29,611::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.241219). Check your callbacks.
2020-12-21 07:54:30,069::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.261237). Check your callbacks.
2020-12-21 07:54:30,522::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.281255). Check your callbacks.
2020-12-21 07:54:30,990::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.286760). Check your callbacks.
2020-12-21 07:54:31,507::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.292265). Check your callbacks.
2020-12-21 07:54:32,096::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.297770). Check your callbacks.
2020-12-21 07:54:32,686::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.312784). Check your callbacks.
2020-12-21 07:54:33,277::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.312784). Check your callbacks.
2020-12-21 07:54:46,998::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.348316). Check your callbacks.
2020-12-21 07:54:48,972::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.375340). Check your callbacks.
2020-12-21 07:54:49,571::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.375340). Check your callbacks.
2020-12-21 07:54:50,196::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.377342). Check your callbacks.
2020-12-21 07:54:56,959::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.375841). Check your callbacks.
2020-12-21 07:54:57,460::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.365331). Check your callbacks.
2020-12-21 07:54:58,665::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.353320). Check your callbacks.
2020-12-21 07:54:59,063::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.346314). Check your callbacks.
2020-12-21 07:55:05,375::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.243220). Check your callbacks.
2020-12-21 07:55:05,458::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.224704). Check your callbacks.
2020-12-21 07:55:05,542::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.192675). Check your callbacks.
2020-12-21 07:55:06,602::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:55:13,901::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:55:46,328::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.228 - Accuracy: 65.9% 
2020-12-21 07:56:00,031::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:56:24,130::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.248225). Check your callbacks.
2020-12-21 07:56:24,588::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.253230). Check your callbacks.
2020-12-21 07:56:25,094::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.268744). Check your callbacks.
2020-12-21 07:56:25,589::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.284258). Check your callbacks.
2020-12-21 07:56:26,148::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.289763). Check your callbacks.
2020-12-21 07:56:26,736::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.295268). Check your callbacks.
2020-12-21 07:56:31,787::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.312783). Check your callbacks.
2020-12-21 07:56:32,382::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.335304). Check your callbacks.
2020-12-21 07:56:43,306::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.355823). Check your callbacks.
2020-12-21 07:56:43,911::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.372338). Check your callbacks.
2020-12-21 07:56:44,624::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.383848). Check your callbacks.
2020-12-21 07:56:52,264::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.374340). Check your callbacks.
2020-12-21 07:56:52,489::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.374340). Check your callbacks.
2020-12-21 07:56:55,813::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.302274). Check your callbacks.
2020-12-21 07:56:56,145::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.256733). Check your callbacks.
2020-12-21 07:56:59,124::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.161647). Check your callbacks.
2020-12-21 07:57:02,466::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:57:09,646::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:57:42,216::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.227 - Accuracy: 65.7% 
2020-12-21 07:57:57,669::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:58:22,820::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.261737). Check your callbacks.
2020-12-21 07:58:23,247::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.262238). Check your callbacks.
2020-12-21 07:58:23,711::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.272247). Check your callbacks.
2020-12-21 07:58:24,205::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.282256). Check your callbacks.
2020-12-21 07:58:24,704::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.288762). Check your callbacks.
2020-12-21 07:58:25,260::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.295268). Check your callbacks.
2020-12-21 07:58:25,825::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.298771). Check your callbacks.
2020-12-21 07:58:26,419::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.307279). Check your callbacks.
2020-12-21 07:58:31,059::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.327797). Check your callbacks.
2020-12-21 07:58:41,889::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.366332). Check your callbacks.
2020-12-21 07:58:42,599::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.366332). Check your callbacks.
2020-12-21 07:58:43,178::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.373338). Check your callbacks.
2020-12-21 07:58:50,516::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.373338). Check your callbacks.
2020-12-21 07:58:51,060::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.360827). Check your callbacks.
2020-12-21 07:58:51,555::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.360827). Check your callbacks.
2020-12-21 07:58:51,981::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.342310). Check your callbacks.
2020-12-21 07:58:52,394::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.329799). Check your callbacks.
2020-12-21 07:58:55,141::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.297770). Check your callbacks.
2020-12-21 07:59:01,365::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:59:11,570::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 07:59:42,503::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.226 - Accuracy: 65.9% 
2020-12-21 07:59:57,185::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:00:21,703::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.167152). Check your callbacks.
2020-12-21 08:00:22,007::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.169654). Check your callbacks.
2020-12-21 08:00:22,406::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.172156). Check your callbacks.
2020-12-21 08:00:22,906::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.203184). Check your callbacks.
2020-12-21 08:00:23,446::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.234212). Check your callbacks.
2020-12-21 08:00:24,035::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.266742). Check your callbacks.
2020-12-21 08:00:24,591::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.299271). Check your callbacks.
2020-12-21 08:00:25,131::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.302274). Check your callbacks.
2020-12-21 08:00:25,736::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.317788). Check your callbacks.
2020-12-21 08:00:28,241::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.343311). Check your callbacks.
2020-12-21 08:00:41,089::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.351819). Check your callbacks.
2020-12-21 08:00:41,625::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.351819). Check your callbacks.
2020-12-21 08:00:42,179::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.351819). Check your callbacks.
2020-12-21 08:00:42,759::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.351819). Check your callbacks.
2020-12-21 08:00:49,858::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.354822). Check your callbacks.
2020-12-21 08:00:50,448::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.350818). Check your callbacks.
2020-12-21 08:00:50,947::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.350818). Check your callbacks.
2020-12-21 08:00:51,449::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.347315). Check your callbacks.
2020-12-21 08:00:51,876::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.339308). Check your callbacks.
2020-12-21 08:00:57,100::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.285759). Check your callbacks.
2020-12-21 08:00:57,268::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.261237). Check your callbacks.
2020-12-21 08:00:57,798::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.190172). Check your callbacks.
2020-12-21 08:01:00,854::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:01:08,010::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:01:40,350::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.224 - Accuracy: 65.8% 
2020-12-21 08:01:54,919::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:02:27,485::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.175159). Check your callbacks.
2020-12-21 08:02:39,307::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.362829). Check your callbacks.
2020-12-21 08:02:39,804::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.362829). Check your callbacks.
2020-12-21 08:02:40,404::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.377342). Check your callbacks.
2020-12-21 08:02:45,781::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.377342). Check your callbacks.
2020-12-21 08:02:50,238::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.307779). Check your callbacks.
2020-12-21 08:02:55,097::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.239217). Check your callbacks.
2020-12-21 08:02:58,528::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:03:07,485::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:03:38,049::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.223 - Accuracy: 65.8% 
2020-12-21 08:03:52,468::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:04:16,702::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.150136). Check your callbacks.
2020-12-21 08:04:17,416::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.150136). Check your callbacks.
2020-12-21 08:04:17,995::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.150136). Check your callbacks.
2020-12-21 08:04:18,535::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.159645). Check your callbacks.
2020-12-21 08:04:19,086::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.169154). Check your callbacks.
2020-12-21 08:04:19,701::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.233212). Check your callbacks.
2020-12-21 08:04:20,286::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.234713). Check your callbacks.
2020-12-21 08:04:35,809::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.362329). Check your callbacks.
2020-12-21 08:04:36,285::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.362329). Check your callbacks.
2020-12-21 08:04:36,791::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.362329). Check your callbacks.
2020-12-21 08:04:37,346::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.368834). Check your callbacks.
2020-12-21 08:04:44,061::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.375340). Check your callbacks.
2020-12-21 08:04:44,655::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.375841). Check your callbacks.
2020-12-21 08:04:45,182::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.368834). Check your callbacks.
2020-12-21 08:04:45,715::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.352820). Check your callbacks.
2020-12-21 08:04:52,313::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.310782). Check your callbacks.
2020-12-21 08:04:52,576::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.266742). Check your callbacks.
2020-12-21 08:04:52,778::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.224703). Check your callbacks.
2020-12-21 08:04:56,393::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:05:03,651::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:05:35,314::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.222 - Accuracy: 65.9% 
2020-12-21 08:05:49,941::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:06:11,487::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.332301). Check your callbacks.
2020-12-21 08:06:15,254::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.290263). Check your callbacks.
2020-12-21 08:06:15,697::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.287761). Check your callbacks.
2020-12-21 08:06:16,202::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.290263). Check your callbacks.
2020-12-21 08:06:16,778::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.311282). Check your callbacks.
2020-12-21 08:06:17,402::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.332301). Check your callbacks.
2020-12-21 08:06:18,169::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.336305). Check your callbacks.
2020-12-21 08:06:20,110::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.349317). Check your callbacks.
2020-12-21 08:06:31,624::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.349317). Check your callbacks.
2020-12-21 08:06:32,223::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.369335). Check your callbacks.
2020-12-21 08:06:34,449::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.381346). Check your callbacks.
2020-12-21 08:06:34,993::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.373839). Check your callbacks.
2020-12-21 08:06:35,572::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.371837). Check your callbacks.
2020-12-21 08:06:43,817::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.369835). Check your callbacks.
2020-12-21 08:06:45,141::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.369835). Check your callbacks.
2020-12-21 08:06:49,283::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.352319). Check your callbacks.
2020-12-21 08:06:51,745::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.279253). Check your callbacks.
2020-12-21 08:06:51,829::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.209190). Check your callbacks.
2020-12-21 08:06:53,863::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:07:01,010::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:07:34,156::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.221 - Accuracy: 66.3% 
2020-12-21 08:07:48,546::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:08:11,985::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.193175). Check your callbacks.
2020-12-21 08:08:12,324::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.179163). Check your callbacks.
2020-12-21 08:08:12,754::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.193175). Check your callbacks.
2020-12-21 08:08:13,285::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.207188). Check your callbacks.
2020-12-21 08:08:13,874::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.221200). Check your callbacks.
2020-12-21 08:08:25,518::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.300773). Check your callbacks.
2020-12-21 08:08:30,404::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.333802). Check your callbacks.
2020-12-21 08:08:30,912::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.335304). Check your callbacks.
2020-12-21 08:08:31,505::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.357324). Check your callbacks.
2020-12-21 08:08:38,868::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.369335). Check your callbacks.
2020-12-21 08:08:39,371::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.367833). Check your callbacks.
2020-12-21 08:08:39,923::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.356323). Check your callbacks.
2020-12-21 08:08:40,545::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.356323). Check your callbacks.
2020-12-21 08:08:47,353::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.335805). Check your callbacks.
2020-12-21 08:08:47,676::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.335805). Check your callbacks.
2020-12-21 08:08:47,851::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.319790). Check your callbacks.
2020-12-21 08:08:47,985::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.266742). Check your callbacks.
2020-12-21 08:08:52,545::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:08:59,644::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:09:32,382::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.222 - Accuracy: 65.9% 
2020-12-21 08:09:47,383::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:10:12,283::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.120109). Check your callbacks.
2020-12-21 08:10:12,890::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.179163). Check your callbacks.
2020-12-21 08:10:28,121::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.371337). Check your callbacks.
2020-12-21 08:10:30,651::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.378844). Check your callbacks.
2020-12-21 08:10:31,227::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.378844). Check your callbacks.
2020-12-21 08:10:37,814::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.378844). Check your callbacks.
2020-12-21 08:10:38,386::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.375841). Check your callbacks.
2020-12-21 08:10:39,009::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.375841). Check your callbacks.
2020-12-21 08:10:48,523::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.359326). Check your callbacks.
2020-12-21 08:10:48,607::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.280755). Check your callbacks.
2020-12-21 08:10:48,692::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.118107). Check your callbacks.
2020-12-21 08:10:52,019::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:10:59,450::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:11:32,709::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.22 - Accuracy: 66.1% 
2020-12-21 08:11:46,658::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:12:05,130::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.342311). Check your callbacks.
2020-12-21 08:12:09,136::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.306278). Check your callbacks.
2020-12-21 08:12:09,332::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.288262). Check your callbacks.
2020-12-21 08:12:09,839::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.306278). Check your callbacks.
2020-12-21 08:12:23,827::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.324294). Check your callbacks.
2020-12-21 08:12:23,951::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.271246). Check your callbacks.
2020-12-21 08:12:24,364::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.262738). Check your callbacks.
2020-12-21 08:12:24,900::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.297770). Check your callbacks.
2020-12-21 08:12:25,497::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.311783). Check your callbacks.
2020-12-21 08:12:34,717::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.345814). Check your callbacks.
2020-12-21 08:12:35,356::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.345814). Check your callbacks.
2020-12-21 08:12:43,393::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.382847). Check your callbacks.
2020-12-21 08:12:43,666::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.382847). Check your callbacks.
2020-12-21 08:12:43,824::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.369836). Check your callbacks.
2020-12-21 08:12:44,047::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.315286). Check your callbacks.
2020-12-21 08:12:46,662::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.190172). Check your callbacks.
2020-12-21 08:12:49,835::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:12:59,047::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:13:32,376::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.22 - Accuracy: 66.2% 
2020-12-21 08:13:44,081::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:14:07,616::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.266241). Check your callbacks.
2020-12-21 08:14:08,046::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.262238). Check your callbacks.
2020-12-21 08:14:08,231::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.256733). Check your callbacks.
2020-12-21 08:14:08,697::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.262238). Check your callbacks.
2020-12-21 08:14:08,929::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.256733). Check your callbacks.
2020-12-21 08:14:13,224::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.301774). Check your callbacks.
2020-12-21 08:14:21,384::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.342310). Check your callbacks.
2020-12-21 08:14:21,966::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.345814). Check your callbacks.
2020-12-21 08:14:26,989::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.356323). Check your callbacks.
2020-12-21 08:14:34,204::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.356323). Check your callbacks.
2020-12-21 08:14:34,670::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.352319). Check your callbacks.
2020-12-21 08:14:35,222::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.350318). Check your callbacks.
2020-12-21 08:14:36,551::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.353320). Check your callbacks.
2020-12-21 08:14:39,974::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.315286). Check your callbacks.
2020-12-21 08:14:40,261::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.309781). Check your callbacks.
2020-12-21 08:14:42,759::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.281756). Check your callbacks.
2020-12-21 08:14:46,755::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:14:54,040::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:15:28,120::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.221 - Accuracy: 65.9% 
2020-12-21 08:15:39,629::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:16:03,319::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.121110). Check your callbacks.
2020-12-21 08:16:04,709::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.238716). Check your callbacks.
2020-12-21 08:16:05,206::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.246223). Check your callbacks.
2020-12-21 08:16:05,773::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.249727). Check your callbacks.
2020-12-21 08:16:06,394::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.253230). Check your callbacks.
2020-12-21 08:16:10,014::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.283257). Check your callbacks.
2020-12-21 08:16:15,207::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.363329). Check your callbacks.
2020-12-21 08:16:22,150::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.363329). Check your callbacks.
2020-12-21 08:16:22,740::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.380845). Check your callbacks.
2020-12-21 08:16:23,373::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.385850). Check your callbacks.
2020-12-21 08:16:23,981::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.389854). Check your callbacks.
2020-12-21 08:16:32,064::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.373839). Check your callbacks.
2020-12-21 08:16:32,624::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.362329). Check your callbacks.
2020-12-21 08:16:39,119::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.359326). Check your callbacks.
2020-12-21 08:16:39,406::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.350318). Check your callbacks.
2020-12-21 08:16:39,664::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.325295). Check your callbacks.
2020-12-21 08:16:39,933::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.269745). Check your callbacks.
2020-12-21 08:16:40,144::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.210191). Check your callbacks.
2020-12-21 08:16:43,731::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:16:50,912::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:17:26,690::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.219 - Accuracy: 66.2% 
2020-12-21 08:17:38,949::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:18:02,988::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.196678). Check your callbacks.
2020-12-21 08:18:03,311::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.197179). Check your callbacks.
2020-12-21 08:18:03,661::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.198680). Check your callbacks.
2020-12-21 08:18:04,051::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.200182). Check your callbacks.
2020-12-21 08:18:04,518::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.205686). Check your callbacks.
2020-12-21 08:18:05,054::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.211191). Check your callbacks.
2020-12-21 08:18:05,624::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.235213). Check your callbacks.
2020-12-21 08:18:06,152::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.259735). Check your callbacks.
2020-12-21 08:18:06,683::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.259735). Check your callbacks.
2020-12-21 08:18:07,315::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.312283). Check your callbacks.
2020-12-21 08:18:22,164::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.345814). Check your callbacks.
2020-12-21 08:18:22,715::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.350318). Check your callbacks.
2020-12-21 08:18:23,241::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.350318). Check your callbacks.
2020-12-21 08:18:23,846::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.353320). Check your callbacks.
2020-12-21 08:18:30,550::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.353821). Check your callbacks.
2020-12-21 08:18:31,044::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.353821). Check your callbacks.
2020-12-21 08:18:31,660::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.348816). Check your callbacks.
2020-12-21 08:18:31,833::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.336805). Check your callbacks.
2020-12-21 08:18:32,156::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.322292). Check your callbacks.
2020-12-21 08:18:38,643::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.279253). Check your callbacks.
2020-12-21 08:18:38,727::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.239217). Check your callbacks.
2020-12-21 08:18:38,810::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.127115). Check your callbacks.
2020-12-21 08:18:40,297::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:18:47,401::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:19:18,739::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.22 - Accuracy: 66.0% 
2020-12-21 08:19:32,797::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:19:51,813::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.325295). Check your callbacks.
2020-12-21 08:19:52,430::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.348316). Check your callbacks.
2020-12-21 08:19:56,803::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.328298). Check your callbacks.
2020-12-21 08:19:57,431::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.331300). Check your callbacks.
2020-12-21 08:19:58,048::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.351318). Check your callbacks.
2020-12-21 08:20:03,097::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.354321). Check your callbacks.
2020-12-21 08:20:03,695::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.368334). Check your callbacks.
2020-12-21 08:20:07,328::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.376842). Check your callbacks.
2020-12-21 08:20:10,654::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.382347). Check your callbacks.
2020-12-21 08:20:11,406::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.382347). Check your callbacks.
2020-12-21 08:20:16,538::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.382347). Check your callbacks.
2020-12-21 08:20:29,008::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.384349). Check your callbacks.
2020-12-21 08:20:29,375::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.384349). Check your callbacks.
2020-12-21 08:20:30,613::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.348816). Check your callbacks.
2020-12-21 08:20:30,718::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.311783). Check your callbacks.
2020-12-21 08:20:30,828::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.231210). Check your callbacks.
2020-12-21 08:20:35,502::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:20:42,708::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:21:15,865::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.216 - Accuracy: 66.5% 
2020-12-21 08:21:29,112::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:21:53,700::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.239217). Check your callbacks.
2020-12-21 08:21:54,818::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.239217). Check your callbacks.
2020-12-21 08:21:55,340::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.266742). Check your callbacks.
2020-12-21 08:21:55,861::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.294267). Check your callbacks.
2020-12-21 08:21:56,421::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.304777). Check your callbacks.
2020-12-21 08:21:56,949::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.318289). Check your callbacks.
2020-12-21 08:21:57,576::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.318289). Check your callbacks.
2020-12-21 08:22:09,807::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.337306). Check your callbacks.
2020-12-21 08:22:12,719::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.360327). Check your callbacks.
2020-12-21 08:22:13,505::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.372838). Check your callbacks.
2020-12-21 08:22:14,105::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.380345). Check your callbacks.
2020-12-21 08:22:21,390::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.380345). Check your callbacks.
2020-12-21 08:22:21,844::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.372838). Check your callbacks.
2020-12-21 08:22:22,305::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.358325). Check your callbacks.
2020-12-21 08:22:22,824::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.358325). Check your callbacks.
2020-12-21 08:22:23,194::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.340809). Check your callbacks.
2020-12-21 08:22:28,880::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.236214). Check your callbacks.
2020-12-21 08:22:28,967::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.211192). Check your callbacks.
2020-12-21 08:22:29,052::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.155641). Check your callbacks.
2020-12-21 08:22:30,730::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:22:37,909::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:23:10,677::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.217 - Accuracy: 66.4% 
2020-12-21 08:23:25,210::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:23:47,673::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.149136). Check your callbacks.
2020-12-21 08:23:47,991::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.176661). Check your callbacks.
2020-12-21 08:23:48,395::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.204185). Check your callbacks.
2020-12-21 08:23:48,862::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.221701). Check your callbacks.
2020-12-21 08:23:49,365::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.239217). Check your callbacks.
2020-12-21 08:23:49,959::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.266241). Check your callbacks.
2020-12-21 08:23:51,549::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.303775). Check your callbacks.
2020-12-21 08:24:01,827::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.307279). Check your callbacks.
2020-12-21 08:24:02,422::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.325295). Check your callbacks.
2020-12-21 08:24:06,603::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.333803). Check your callbacks.
2020-12-21 08:24:07,184::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.349817). Check your callbacks.
2020-12-21 08:24:07,738::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.360327). Check your callbacks.
2020-12-21 08:24:14,902::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.361828). Check your callbacks.
2020-12-21 08:24:15,476::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.361828). Check your callbacks.
2020-12-21 08:24:17,005::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.365832). Check your callbacks.
2020-12-21 08:24:24,037::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.362829). Check your callbacks.
2020-12-21 08:24:24,829::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.361328). Check your callbacks.
2020-12-21 08:24:24,919::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.253230). Check your callbacks.
2020-12-21 08:24:28,420::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:24:35,555::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:25:07,975::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.217 - Accuracy: 66.5% 
2020-12-21 08:25:22,276::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:25:44,125::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.196178). Check your callbacks.
2020-12-21 08:25:44,388::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.151137). Check your callbacks.
2020-12-21 08:25:45,584::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.217197). Check your callbacks.
2020-12-21 08:25:46,083::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.238216). Check your callbacks.
2020-12-21 08:25:46,655::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.246223). Check your callbacks.
2020-12-21 08:25:47,259::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.254230). Check your callbacks.
2020-12-21 08:25:56,184::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.281255). Check your callbacks.
2020-12-21 08:26:01,431::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.346814). Check your callbacks.
2020-12-21 08:26:02,074::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.357324). Check your callbacks.
2020-12-21 08:26:07,701::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.357324). Check your callbacks.
2020-12-21 08:26:08,229::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.357324). Check your callbacks.
2020-12-21 08:26:08,827::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.365831). Check your callbacks.
2020-12-21 08:26:09,572::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.365831). Check your callbacks.
2020-12-21 08:26:10,175::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.381346). Check your callbacks.
2020-12-21 08:26:10,882::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.381346). Check your callbacks.
2020-12-21 08:26:18,931::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.336305). Check your callbacks.
2020-12-21 08:26:21,602::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.336305). Check your callbacks.
2020-12-21 08:26:22,837::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.204185). Check your callbacks.
2020-12-21 08:26:24,859::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.119108). Check your callbacks.
2020-12-21 08:26:24,969::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:26:32,209::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:27:04,487::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.217 - Accuracy: 66.4% 
2020-12-21 08:27:19,138::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:27:43,621::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.151137). Check your callbacks.
2020-12-21 08:27:44,027::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.192675). Check your callbacks.
2020-12-21 08:27:44,207::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.151137). Check your callbacks.
2020-12-21 08:27:44,568::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.192675). Check your callbacks.
2020-12-21 08:27:45,094::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.234213). Check your callbacks.
2020-12-21 08:27:45,699::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.243721). Check your callbacks.
2020-12-21 08:27:46,408::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.253230). Check your callbacks.
2020-12-21 08:27:46,989::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.275750). Check your callbacks.
2020-12-21 08:27:50,421::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.319290). Check your callbacks.
2020-12-21 08:27:51,023::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.355322). Check your callbacks.
2020-12-21 08:28:02,726::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.362328). Check your callbacks.
2020-12-21 08:28:03,265::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.362328). Check your callbacks.
2020-12-21 08:28:03,748::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.362328). Check your callbacks.
2020-12-21 08:28:04,327::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.362328). Check your callbacks.
2020-12-21 08:28:11,210::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.339808). Check your callbacks.
2020-12-21 08:28:11,742::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.345814). Check your callbacks.
2020-12-21 08:28:12,244::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.338307). Check your callbacks.
2020-12-21 08:28:12,740::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.325795). Check your callbacks.
2020-12-21 08:28:15,781::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.305277). Check your callbacks.
2020-12-21 08:28:19,032::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.299271). Check your callbacks.
2020-12-21 08:28:19,262::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.282756). Check your callbacks.
2020-12-21 08:28:19,447::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.230208). Check your callbacks.
2020-12-21 08:28:22,875::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:28:30,045::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:29:06,077::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.217 - Accuracy: 66.6% 
2020-12-21 08:29:17,830::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:29:42,036::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.245723). Check your callbacks.
2020-12-21 08:29:42,403::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.224203). Check your callbacks.
2020-12-21 08:29:42,880::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.259735). Check your callbacks.
2020-12-21 08:29:43,400::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.295268). Check your callbacks.
2020-12-21 08:29:44,026::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.304776). Check your callbacks.
2020-12-21 08:29:49,487::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.328298). Check your callbacks.
2020-12-21 08:29:50,212::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.345814). Check your callbacks.
2020-12-21 08:29:50,827::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.345814). Check your callbacks.
2020-12-21 08:30:01,258::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.376341). Check your callbacks.
2020-12-21 08:30:01,840::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.376341). Check your callbacks.
2020-12-21 08:30:02,414::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.376341). Check your callbacks.
2020-12-21 08:30:09,622::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.371337). Check your callbacks.
2020-12-21 08:30:10,217::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.376341). Check your callbacks.
2020-12-21 08:30:15,527::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.367834). Check your callbacks.
2020-12-21 08:30:16,025::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.359826). Check your callbacks.
2020-12-21 08:30:16,405::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.350317). Check your callbacks.
2020-12-21 08:30:16,693::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.334804). Check your callbacks.
2020-12-21 08:30:18,354::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.189672). Check your callbacks.
2020-12-21 08:30:21,903::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:30:29,797::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:31:01,386::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.216 - Accuracy: 66.5% 
2020-12-21 08:31:16,350::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:31:34,640::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.263739). Check your callbacks.
2020-12-21 08:31:35,099::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.270245). Check your callbacks.
2020-12-21 08:31:35,500::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.252729). Check your callbacks.
2020-12-21 08:31:35,953::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.270245). Check your callbacks.
2020-12-21 08:31:39,753::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.273248). Check your callbacks.
2020-12-21 08:31:40,360::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.278753). Check your callbacks.
2020-12-21 08:31:49,012::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.288261). Check your callbacks.
2020-12-21 08:31:55,849::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.278753). Check your callbacks.
2020-12-21 08:31:56,166::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.278753). Check your callbacks.
2020-12-21 08:31:56,625::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.292265). Check your callbacks.
2020-12-21 08:31:56,848::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.252229). Check your callbacks.
2020-12-21 08:31:57,300::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.252229). Check your callbacks.
2020-12-21 08:31:57,896::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.252229). Check your callbacks.
2020-12-21 08:32:12,970::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.332301). Check your callbacks.
2020-12-21 08:32:13,440::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.332301). Check your callbacks.
2020-12-21 08:32:14,953::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.332301). Check your callbacks.
2020-12-21 08:32:15,174::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.332301). Check your callbacks.
2020-12-21 08:32:15,313::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.310281). Check your callbacks.
2020-12-21 08:32:17,231::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.184667). Check your callbacks.
2020-12-21 08:32:17,318::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.141628). Check your callbacks.
2020-12-21 08:32:19,771::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:32:26,826::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:32:59,523::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.216 - Accuracy: 66.7% 
2020-12-21 08:33:15,043::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:33:38,378::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.109599). Check your callbacks.
2020-12-21 08:33:38,799::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.200181). Check your callbacks.
2020-12-21 08:33:39,284::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.228707). Check your callbacks.
2020-12-21 08:33:39,729::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.242220). Check your callbacks.
2020-12-21 08:33:40,318::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.249726). Check your callbacks.
2020-12-21 08:33:55,273::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.297270). Check your callbacks.
2020-12-21 08:33:55,873::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.326296). Check your callbacks.
2020-12-21 08:33:56,386::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.335304). Check your callbacks.
2020-12-21 08:33:56,874::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.335304). Check your callbacks.
2020-12-21 08:33:57,422::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.335304). Check your callbacks.
2020-12-21 08:33:57,985::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.356824). Check your callbacks.
2020-12-21 08:34:05,408::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.346314). Check your callbacks.
2020-12-21 08:34:05,999::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.346314). Check your callbacks.
2020-12-21 08:34:14,156::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.352319). Check your callbacks.
2020-12-21 08:34:16,733::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.352319). Check your callbacks.
2020-12-21 08:34:16,821::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.297269). Check your callbacks.
2020-12-21 08:34:16,905::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.135623). Check your callbacks.
2020-12-21 08:34:19,542::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:34:26,779::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:35:00,051::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.216 - Accuracy: 66.5% 
2020-12-21 08:35:14,706::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:35:37,649::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.220200). Check your callbacks.
2020-12-21 08:35:38,029::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.234713). Check your callbacks.
2020-12-21 08:35:38,459::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.249226). Check your callbacks.
2020-12-21 08:35:38,937::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.258735). Check your callbacks.
2020-12-21 08:35:39,351::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.249226). Check your callbacks.
2020-12-21 08:35:39,972::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.258735). Check your callbacks.
2020-12-21 08:35:45,993::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.324294). Check your callbacks.
2020-12-21 08:35:56,843::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.375841). Check your callbacks.
2020-12-21 08:35:57,424::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.385850). Check your callbacks.
2020-12-21 08:35:58,028::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.385850). Check your callbacks.
2020-12-21 08:36:05,885::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.368834). Check your callbacks.
2020-12-21 08:36:06,547::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.368834). Check your callbacks.
2020-12-21 08:36:07,085::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.360327). Check your callbacks.
2020-12-21 08:36:10,776::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.353821). Check your callbacks.
2020-12-21 08:36:11,143::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.347815). Check your callbacks.
2020-12-21 08:36:13,629::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.287761). Check your callbacks.
2020-12-21 08:36:17,962::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:36:26,498::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:36:56,204::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.215 - Accuracy: 66.5% 
2020-12-21 08:37:10,963::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:37:34,569::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.256733). Check your callbacks.
2020-12-21 08:37:35,005::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.250227). Check your callbacks.
2020-12-21 08:37:35,508::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.256733). Check your callbacks.
2020-12-21 08:37:35,726::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.250227). Check your callbacks.
2020-12-21 08:37:36,252::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.256733). Check your callbacks.
2020-12-21 08:37:42,633::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.333302). Check your callbacks.
2020-12-21 08:37:48,516::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.369335). Check your callbacks.
2020-12-21 08:37:53,910::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.385850). Check your callbacks.
2020-12-21 08:37:54,501::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.385850). Check your callbacks.
2020-12-21 08:38:01,924::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.383848). Check your callbacks.
2020-12-21 08:38:02,467::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.383848). Check your callbacks.
2020-12-21 08:38:03,071::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.383848). Check your callbacks.
2020-12-21 08:38:10,210::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.315286). Check your callbacks.
2020-12-21 08:38:10,399::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.275750). Check your callbacks.
2020-12-21 08:38:10,552::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.234713). Check your callbacks.
2020-12-21 08:38:10,685::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.162647). Check your callbacks.
2020-12-21 08:38:14,670::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:38:21,849::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:38:54,438::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.214 - Accuracy: 66.7% 
2020-12-21 08:39:09,477::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:39:34,222::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.162147). Check your callbacks.
2020-12-21 08:39:34,364::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.144131). Check your callbacks.
2020-12-21 08:39:34,711::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.162147). Check your callbacks.
2020-12-21 08:39:35,185::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.206187). Check your callbacks.
2020-12-21 08:39:35,396::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.162147). Check your callbacks.
2020-12-21 08:39:35,872::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.206187). Check your callbacks.
2020-12-21 08:39:36,470::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.250227). Check your callbacks.
2020-12-21 08:39:37,080::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.268243). Check your callbacks.
2020-12-21 08:39:37,716::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.270746). Check your callbacks.
2020-12-21 08:39:40,565::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.369836). Check your callbacks.
2020-12-21 08:39:53,629::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.379845). Check your callbacks.
2020-12-21 08:39:54,154::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.379845). Check your callbacks.
2020-12-21 08:39:54,669::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.379845). Check your callbacks.
2020-12-21 08:39:55,233::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.379845). Check your callbacks.
2020-12-21 08:40:01,664::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.368834). Check your callbacks.
2020-12-21 08:40:02,928::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.351319). Check your callbacks.
2020-12-21 08:40:03,368::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.339808). Check your callbacks.
2020-12-21 08:40:04,960::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.321291). Check your callbacks.
2020-12-21 08:40:09,864::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.252729). Check your callbacks.
2020-12-21 08:40:10,014::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.228707). Check your callbacks.
2020-12-21 08:40:13,313::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:40:20,542::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:40:51,771::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.214 - Accuracy: 66.7% 
2020-12-21 08:41:06,917::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:41:32,817::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.238716). Check your callbacks.
2020-12-21 08:41:33,204::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.243220). Check your callbacks.
2020-12-21 08:41:33,664::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.264740). Check your callbacks.
2020-12-21 08:41:34,187::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.286260). Check your callbacks.
2020-12-21 08:41:34,669::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.287761). Check your callbacks.
2020-12-21 08:41:35,149::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.289262). Check your callbacks.
2020-12-21 08:41:35,643::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.292765). Check your callbacks.
2020-12-21 08:41:36,185::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.304276). Check your callbacks.
2020-12-21 08:41:39,304::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.314285). Check your callbacks.
2020-12-21 08:41:51,941::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.348816). Check your callbacks.
2020-12-21 08:41:52,540::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.358325). Check your callbacks.
2020-12-21 08:41:53,106::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.368834). Check your callbacks.
2020-12-21 08:42:00,719::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.368834). Check your callbacks.
2020-12-21 08:42:01,241::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.368834). Check your callbacks.
2020-12-21 08:42:01,735::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.357324). Check your callbacks.
2020-12-21 08:42:04,310::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.320791). Check your callbacks.
2020-12-21 08:42:07,425::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.283257). Check your callbacks.
2020-12-21 08:42:11,066::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:42:19,488::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:42:51,660::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.216 - Accuracy: 66.7% 
2020-12-21 08:43:06,124::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:43:29,273::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.276250). Check your callbacks.
2020-12-21 08:43:29,673::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.259235). Check your callbacks.
2020-12-21 08:43:29,896::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.248726). Check your callbacks.
2020-12-21 08:43:30,251::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.238216). Check your callbacks.
2020-12-21 08:43:30,875::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.248726). Check your callbacks.
2020-12-21 08:43:40,170::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.303275). Check your callbacks.
2020-12-21 08:43:43,481::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.366332). Check your callbacks.
2020-12-21 08:43:48,758::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.374339). Check your callbacks.
2020-12-21 08:43:49,341::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.374840). Check your callbacks.
2020-12-21 08:43:56,268::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.374840). Check your callbacks.
2020-12-21 08:43:56,876::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.376341). Check your callbacks.
2020-12-21 08:43:58,308::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.374840). Check your callbacks.
2020-12-21 08:44:04,181::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.369835). Check your callbacks.
2020-12-21 08:44:04,447::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.360827). Check your callbacks.
2020-12-21 08:44:04,699::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.324294). Check your callbacks.
2020-12-21 08:44:09,029::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:44:16,206::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:44:49,692::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.212 - Accuracy: 66.9% 
2020-12-21 08:45:04,087::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:45:25,509::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.327297). Check your callbacks.
2020-12-21 08:45:29,714::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.223202). Check your callbacks.
2020-12-21 08:45:30,105::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.256232). Check your callbacks.
2020-12-21 08:45:30,574::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.272747). Check your callbacks.
2020-12-21 08:45:31,062::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.289262). Check your callbacks.
2020-12-21 08:45:31,630::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.293266). Check your callbacks.
2020-12-21 08:45:32,227::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.297270). Check your callbacks.
2020-12-21 08:45:42,445::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.365832). Check your callbacks.
2020-12-21 08:45:43,049::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.378343). Check your callbacks.
2020-12-21 08:45:49,356::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.378343). Check your callbacks.
2020-12-21 08:45:49,935::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.378343). Check your callbacks.
2020-12-21 08:45:50,524::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.378343). Check your callbacks.
2020-12-21 08:45:58,363::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.378343). Check your callbacks.
2020-12-21 08:46:05,349::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.361828). Check your callbacks.
2020-12-21 08:46:05,506::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.351819). Check your callbacks.
2020-12-21 08:46:05,606::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.268744). Check your callbacks.
2020-12-21 08:46:09,637::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:46:16,830::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:46:49,366::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.215 - Accuracy: 66.8% 
2020-12-21 08:47:05,600::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:47:28,568::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.135623). Check your callbacks.
2020-12-21 08:47:28,932::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.167151). Check your callbacks.
2020-12-21 08:47:29,337::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.188671). Check your callbacks.
2020-12-21 08:47:29,703::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.206187). Check your callbacks.
2020-12-21 08:47:30,244::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.208189). Check your callbacks.
2020-12-21 08:47:30,840::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.210191). Check your callbacks.
2020-12-21 08:47:42,800::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.331801). Check your callbacks.
2020-12-21 08:47:47,590::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.358826). Check your callbacks.
2020-12-21 08:47:48,265::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.370336). Check your callbacks.
2020-12-21 08:47:55,781::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.356323). Check your callbacks.
2020-12-21 08:47:56,309::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.342310). Check your callbacks.
2020-12-21 08:47:56,885::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.342310). Check your callbacks.
2020-12-21 08:48:02,858::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.340309). Check your callbacks.
2020-12-21 08:48:04,286::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.336805). Check your callbacks.
2020-12-21 08:48:04,405::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.290263). Check your callbacks.
2020-12-21 08:48:04,516::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.240218). Check your callbacks.
2020-12-21 08:48:08,553::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:48:15,809::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:48:52,563::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.213 - Accuracy: 66.9% 
2020-12-21 08:49:04,082::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:49:29,027::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.177161). Check your callbacks.
2020-12-21 08:49:29,403::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.199681). Check your callbacks.
2020-12-21 08:49:29,847::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.222202). Check your callbacks.
2020-12-21 08:49:30,238::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.214695). Check your callbacks.
2020-12-21 08:49:30,668::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.222202). Check your callbacks.
2020-12-21 08:49:31,125::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.242720). Check your callbacks.
2020-12-21 08:49:31,655::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.263239). Check your callbacks.
2020-12-21 08:49:32,175::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.266742). Check your callbacks.
2020-12-21 08:49:34,003::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.284758). Check your callbacks.
2020-12-21 08:49:34,578::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.317288). Check your callbacks.
2020-12-21 08:49:48,023::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.342811). Check your callbacks.
2020-12-21 08:49:48,611::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.350318). Check your callbacks.
2020-12-21 08:49:49,154::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.350819). Check your callbacks.
2020-12-21 08:49:49,731::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.363830). Check your callbacks.
2020-12-21 08:49:56,835::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.363830). Check your callbacks.
2020-12-21 08:49:57,336::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.363830). Check your callbacks.
2020-12-21 08:49:57,852::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.357324). Check your callbacks.
2020-12-21 08:49:58,363::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.333802). Check your callbacks.
2020-12-21 08:49:59,788::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.311783). Check your callbacks.
2020-12-21 08:50:04,017::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.299772). Check your callbacks.
2020-12-21 08:50:04,571::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.241719). Check your callbacks.
2020-12-21 08:50:08,034::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:50:15,148::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:50:48,252::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.215 - Accuracy: 66.6% 
2020-12-21 08:51:02,948::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:51:28,724::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.260236). Check your callbacks.
2020-12-21 08:51:29,128::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.243221). Check your callbacks.
2020-12-21 08:51:29,550::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.247224). Check your callbacks.
2020-12-21 08:51:30,022::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.251228). Check your callbacks.
2020-12-21 08:51:30,580::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.272247). Check your callbacks.
2020-12-21 08:51:31,101::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.293266). Check your callbacks.
2020-12-21 08:51:31,621::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.296769). Check your callbacks.
2020-12-21 08:51:32,204::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.309280). Check your callbacks.
2020-12-21 08:51:33,652::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.328298). Check your callbacks.
2020-12-21 08:51:48,027::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.350818). Check your callbacks.
2020-12-21 08:51:48,583::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.361828). Check your callbacks.
2020-12-21 08:51:49,191::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.369835). Check your callbacks.
2020-12-21 08:51:55,862::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.369835). Check your callbacks.
2020-12-21 08:51:56,491::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.369835). Check your callbacks.
2020-12-21 08:51:57,066::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.369835). Check your callbacks.
2020-12-21 08:51:57,800::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.367333). Check your callbacks.
2020-12-21 08:51:58,323::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.357324). Check your callbacks.
2020-12-21 08:51:58,693::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.349317). Check your callbacks.
2020-12-21 08:52:03,527::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.209190). Check your callbacks.
2020-12-21 08:52:06,951::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:52:14,053::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:52:47,736::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.211 - Accuracy: 67.0% 
2020-12-21 08:53:01,181::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:53:22,533::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.325295). Check your callbacks.
2020-12-21 08:53:23,090::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.340809). Check your callbacks.
2020-12-21 08:53:28,060::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.331300). Check your callbacks.
2020-12-21 08:53:28,640::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.337306). Check your callbacks.
2020-12-21 08:53:29,236::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.346815). Check your callbacks.
2020-12-21 08:53:34,020::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.344813). Check your callbacks.
2020-12-21 08:53:34,529::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.344813). Check your callbacks.
2020-12-21 08:53:35,082::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.344813). Check your callbacks.
2020-12-21 08:53:35,687::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.352320). Check your callbacks.
2020-12-21 08:53:41,534::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.373338). Check your callbacks.
2020-12-21 08:53:47,213::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.376842). Check your callbacks.
2020-12-21 08:53:54,682::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.376842). Check your callbacks.
2020-12-21 08:53:55,321::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.377843). Check your callbacks.
2020-12-21 08:53:59,711::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.376842). Check your callbacks.
2020-12-21 08:54:00,503::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.348316). Check your callbacks.
2020-12-21 08:54:00,625::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.317288). Check your callbacks.
2020-12-21 08:54:00,716::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.169154). Check your callbacks.
2020-12-21 08:54:05,678::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:54:12,827::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:54:45,978::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.215 - Accuracy: 66.6% 
2020-12-21 08:55:00,607::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:55:26,385::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.254230). Check your callbacks.
2020-12-21 08:55:26,772::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.232211). Check your callbacks.
2020-12-21 08:55:27,209::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.242220). Check your callbacks.
2020-12-21 08:55:27,741::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.252228). Check your callbacks.
2020-12-21 08:55:28,221::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.266241). Check your callbacks.
2020-12-21 08:55:28,676::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.280254). Check your callbacks.
2020-12-21 08:55:29,194::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.289262). Check your callbacks.
2020-12-21 08:55:32,168::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.310782). Check your callbacks.
2020-12-21 08:55:45,461::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.357824). Check your callbacks.
2020-12-21 08:55:46,176::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.371337). Check your callbacks.
2020-12-21 08:55:46,788::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.377342). Check your callbacks.
2020-12-21 08:55:53,864::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.377342). Check your callbacks.
2020-12-21 08:55:54,455::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.377342). Check your callbacks.
2020-12-21 08:55:54,935::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.377342). Check your callbacks.
2020-12-21 08:55:55,433::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.363330). Check your callbacks.
2020-12-21 08:55:57,177::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.340809). Check your callbacks.
2020-12-21 08:56:04,714::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:56:12,469::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:56:44,761::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.213 - Accuracy: 66.9% 
2020-12-21 08:57:00,099::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:57:24,104::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.212192). Check your callbacks.
2020-12-21 08:57:24,388::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.164149). Check your callbacks.
2020-12-21 08:57:24,760::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.198680). Check your callbacks.
2020-12-21 08:57:25,179::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.233212). Check your callbacks.
2020-12-21 08:57:25,678::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.242220). Check your callbacks.
2020-12-21 08:57:26,210::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.251228). Check your callbacks.
2020-12-21 08:57:26,717::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.255732). Check your callbacks.
2020-12-21 08:57:27,247::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.272747). Check your callbacks.
2020-12-21 08:57:29,815::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.309281). Check your callbacks.
2020-12-21 08:57:43,153::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.339308). Check your callbacks.
2020-12-21 08:57:43,680::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.339308). Check your callbacks.
2020-12-21 08:57:44,230::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.344813). Check your callbacks.
2020-12-21 08:57:44,800::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.352319). Check your callbacks.
2020-12-21 08:57:51,329::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.354321). Check your callbacks.
2020-12-21 08:57:52,612::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.351318). Check your callbacks.
2020-12-21 08:57:53,053::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.340309). Check your callbacks.
2020-12-21 08:57:59,870::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.295768). Check your callbacks.
2020-12-21 08:57:59,959::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.271246). Check your callbacks.
2020-12-21 08:58:00,042::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.144631). Check your callbacks.
2020-12-21 08:58:01,380::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:58:11,299::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:58:41,108::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.214 - Accuracy: 66.8% 
2020-12-21 08:58:55,245::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 08:59:17,016::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.318289). Check your callbacks.
2020-12-21 08:59:20,672::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.291264). Check your callbacks.
2020-12-21 08:59:21,128::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.286760). Check your callbacks.
2020-12-21 08:59:21,643::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.291264). Check your callbacks.
2020-12-21 08:59:22,097::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.289262). Check your callbacks.
2020-12-21 08:59:22,636::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.291264). Check your callbacks.
2020-12-21 08:59:23,235::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.291264). Check your callbacks.
2020-12-21 08:59:25,910::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.304776). Check your callbacks.
2020-12-21 08:59:35,582::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.316787). Check your callbacks.
2020-12-21 08:59:36,218::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.344813). Check your callbacks.
2020-12-21 08:59:40,128::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.379845). Check your callbacks.
2020-12-21 08:59:40,710::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.379845). Check your callbacks.
2020-12-21 08:59:41,306::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.380345). Check your callbacks.
2020-12-21 08:59:49,479::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.372338). Check your callbacks.
2020-12-21 08:59:53,796::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.355823). Check your callbacks.
2020-12-21 08:59:56,615::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.289263). Check your callbacks.
2020-12-21 08:59:56,699::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.227206). Check your callbacks.
2020-12-21 08:59:56,784::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.107097). Check your callbacks.
2020-12-21 08:59:59,259::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:00:09,683::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:00:39,449::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.212 - Accuracy: 66.9% 
2020-12-21 09:00:54,228::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:01:16,154::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.382347). Check your callbacks.
2020-12-21 09:01:20,081::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.294267). Check your callbacks.
2020-12-21 09:01:20,492::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.270745). Check your callbacks.
2020-12-21 09:01:20,900::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.265241). Check your callbacks.
2020-12-21 09:01:21,365::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.279754). Check your callbacks.
2020-12-21 09:01:21,930::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.294267). Check your callbacks.
2020-12-21 09:01:22,487::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.299271). Check your callbacks.
2020-12-21 09:01:23,057::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.323794). Check your callbacks.
2020-12-21 09:01:23,674::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.323794). Check your callbacks.
2020-12-21 09:01:36,079::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.314785). Check your callbacks.
2020-12-21 09:01:36,697::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.334303). Check your callbacks.
2020-12-21 09:01:38,937::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.358325). Check your callbacks.
2020-12-21 09:01:39,495::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.361828). Check your callbacks.
2020-12-21 09:01:40,053::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.364330). Check your callbacks.
2020-12-21 09:01:47,827::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.366833). Check your callbacks.
2020-12-21 09:01:48,286::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.366833). Check your callbacks.
2020-12-21 09:01:53,575::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.343812). Check your callbacks.
2020-12-21 09:01:56,051::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.263239). Check your callbacks.
2020-12-21 09:01:56,140::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.210691). Check your callbacks.
2020-12-21 09:01:56,223::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.144631). Check your callbacks.
2020-12-21 09:01:57,964::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:02:05,264::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:02:37,214::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.214 - Accuracy: 66.6% 
2020-12-21 09:02:51,983::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:03:13,224::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.274749). Check your callbacks.
2020-12-21 09:03:13,738::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.291264). Check your callbacks.
2020-12-21 09:03:17,336::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.258234). Check your callbacks.
2020-12-21 09:03:17,801::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.274749). Check your callbacks.
2020-12-21 09:03:18,311::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.291264). Check your callbacks.
2020-12-21 09:03:18,859::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.293266). Check your callbacks.
2020-12-21 09:03:19,462::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.295268). Check your callbacks.
2020-12-21 09:03:20,067::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.295268). Check your callbacks.
2020-12-21 09:03:20,668::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.306278). Check your callbacks.
2020-12-21 09:03:35,575::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.321291). Check your callbacks.
2020-12-21 09:03:36,024::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.321291). Check your callbacks.
2020-12-21 09:03:36,459::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.321291). Check your callbacks.
2020-12-21 09:03:36,905::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.317288). Check your callbacks.
2020-12-21 09:03:37,435::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.306778). Check your callbacks.
2020-12-21 09:03:38,034::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.306778). Check your callbacks.
2020-12-21 09:03:44,870::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.306778). Check your callbacks.
2020-12-21 09:03:45,581::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.317788). Check your callbacks.
2020-12-21 09:03:46,176::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.317788). Check your callbacks.
2020-12-21 09:03:52,118::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.317788). Check your callbacks.
2020-12-21 09:03:54,257::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.268744). Check your callbacks.
2020-12-21 09:03:54,342::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.223703). Check your callbacks.
2020-12-21 09:03:54,425::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.190172). Check your callbacks.
2020-12-21 09:03:55,868::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:04:02,935::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:04:39,210::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.212 - Accuracy: 66.9% 
2020-12-21 09:04:51,323::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:05:16,811::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.118107). Check your callbacks.
2020-12-21 09:05:17,099::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.134122). Check your callbacks.
2020-12-21 09:05:17,503::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.160646). Check your callbacks.
2020-12-21 09:05:17,937::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.187170). Check your callbacks.
2020-12-21 09:05:18,412::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.225204). Check your callbacks.
2020-12-21 09:05:18,878::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.263239). Check your callbacks.
2020-12-21 09:05:19,360::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.268744). Check your callbacks.
2020-12-21 09:05:19,882::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.268744). Check your callbacks.
2020-12-21 09:05:21,567::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.299271). Check your callbacks.
2020-12-21 09:05:35,591::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.319790). Check your callbacks.
2020-12-21 09:05:36,121::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.333803). Check your callbacks.
2020-12-21 09:05:36,652::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.338307). Check your callbacks.
2020-12-21 09:05:37,215::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.344312). Check your callbacks.
2020-12-21 09:05:43,579::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.351318). Check your callbacks.
2020-12-21 09:05:44,914::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.348315). Check your callbacks.
2020-12-21 09:05:45,447::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.339808). Check your callbacks.
2020-12-21 09:05:46,002::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.336805). Check your callbacks.
2020-12-21 09:05:46,646::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.327797). Check your callbacks.
2020-12-21 09:05:51,315::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.299271). Check your callbacks.
2020-12-21 09:05:51,852::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.248225). Check your callbacks.
2020-12-21 09:05:55,180::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:06:04,478::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:06:37,533::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.211 - Accuracy: 66.9% 
2020-12-21 09:06:50,070::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:07:13,786::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.226205). Check your callbacks.
2020-12-21 09:07:14,128::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.200181). Check your callbacks.
2020-12-21 09:07:14,547::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.229208). Check your callbacks.
2020-12-21 09:07:15,003::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.258234). Check your callbacks.
2020-12-21 09:07:15,513::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.260236). Check your callbacks.
2020-12-21 09:07:16,132::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.262238). Check your callbacks.
2020-12-21 09:07:16,703::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.281755). Check your callbacks.
2020-12-21 09:07:17,346::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.317788). Check your callbacks.
2020-12-21 09:07:20,359::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.335805). Check your callbacks.
2020-12-21 09:07:32,875::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.370836). Check your callbacks.
2020-12-21 09:07:33,519::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.383848). Check your callbacks.
2020-12-21 09:07:34,108::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.384849). Check your callbacks.
2020-12-21 09:07:34,689::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.373339). Check your callbacks.
2020-12-21 09:07:42,549::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.372338). Check your callbacks.
2020-12-21 09:07:43,101::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.370836). Check your callbacks.
2020-12-21 09:07:43,540::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.360327). Check your callbacks.
2020-12-21 09:07:49,983::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.291764). Check your callbacks.
2020-12-21 09:07:50,067::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.270245). Check your callbacks.
2020-12-21 09:07:50,151::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.226205). Check your callbacks.
2020-12-21 09:07:51,713::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:07:58,817::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:08:32,029::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.213 - Accuracy: 66.8% 
2020-12-21 09:08:46,544::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:09:09,249::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.234212). Check your callbacks.
2020-12-21 09:09:09,771::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.235213). Check your callbacks.
2020-12-21 09:09:10,265::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.242720). Check your callbacks.
2020-12-21 09:09:10,809::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.250227). Check your callbacks.
2020-12-21 09:09:11,413::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.290764). Check your callbacks.
2020-12-21 09:09:14,455::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.337806). Check your callbacks.
2020-12-21 09:09:25,678::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.349817). Check your callbacks.
2020-12-21 09:09:29,541::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.349817). Check your callbacks.
2020-12-21 09:09:29,986::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.349817). Check your callbacks.
2020-12-21 09:09:30,540::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.342811). Check your callbacks.
2020-12-21 09:09:31,116::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.342811). Check your callbacks.
2020-12-21 09:09:36,708::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.344312). Check your callbacks.
2020-12-21 09:09:44,028::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.344312). Check your callbacks.
2020-12-21 09:09:46,964::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.344312). Check your callbacks.
2020-12-21 09:09:47,060::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.305277). Check your callbacks.
2020-12-21 09:09:47,177::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.255732). Check your callbacks.
2020-12-21 09:09:50,002::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:09:57,108::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:10:30,915::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.213 - Accuracy: 66.8% 
2020-12-21 09:10:45,415::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:11:11,171::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.244221). Check your callbacks.
2020-12-21 09:11:11,612::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.251228). Check your callbacks.
2020-12-21 09:11:12,088::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.258234). Check your callbacks.
2020-12-21 09:11:12,590::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.270746). Check your callbacks.
2020-12-21 09:11:13,152::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.283257). Check your callbacks.
2020-12-21 09:11:13,731::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.283758). Check your callbacks.
2020-12-21 09:11:14,347::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.291765). Check your callbacks.
2020-12-21 09:11:17,170::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.323293). Check your callbacks.
2020-12-21 09:11:30,801::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.374840). Check your callbacks.
2020-12-21 09:11:31,369::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.374840). Check your callbacks.
2020-12-21 09:11:38,455::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.372338). Check your callbacks.
2020-12-21 09:11:38,973::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.364831). Check your callbacks.
2020-12-21 09:11:39,466::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.364831). Check your callbacks.
2020-12-21 09:11:39,969::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.354321). Check your callbacks.
2020-12-21 09:11:40,397::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.346314). Check your callbacks.
2020-12-21 09:11:45,569::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.269244). Check your callbacks.
2020-12-21 09:11:46,156::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.186169). Check your callbacks.
2020-12-21 09:11:49,178::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:11:56,325::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:12:28,248::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.211 - Accuracy: 66.9% 
2020-12-21 09:12:42,052::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:13:07,652::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.255732). Check your callbacks.
2020-12-21 09:13:08,111::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.282256). Check your callbacks.
2020-12-21 09:13:08,637::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.289262). Check your callbacks.
2020-12-21 09:13:09,221::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.296269). Check your callbacks.
2020-12-21 09:13:09,914::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.320291). Check your callbacks.
2020-12-21 09:13:10,519::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.344312). Check your callbacks.
2020-12-21 09:13:14,627::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.352820). Check your callbacks.
2020-12-21 09:13:15,245::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.368834). Check your callbacks.
2020-12-21 09:13:27,251::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.378343). Check your callbacks.
2020-12-21 09:13:27,831::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.376341). Check your callbacks.
2020-12-21 09:13:28,401::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.374340). Check your callbacks.
2020-12-21 09:13:36,443::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.367333). Check your callbacks.
2020-12-21 09:13:38,167::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.363330). Check your callbacks.
2020-12-21 09:13:40,088::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.340309). Check your callbacks.
2020-12-21 09:13:40,370::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.317288). Check your callbacks.
2020-12-21 09:13:43,171::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.277752). Check your callbacks.
2020-12-21 09:13:46,982::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:13:54,168::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:14:26,910::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.212 - Accuracy: 66.9% 
2020-12-21 09:14:41,718::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:15:05,785::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.142129). Check your callbacks.
2020-12-21 09:15:06,094::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.173157). Check your callbacks.
2020-12-21 09:15:06,421::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.202183). Check your callbacks.
2020-12-21 09:15:06,825::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.203184). Check your callbacks.
2020-12-21 09:15:07,294::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.204185). Check your callbacks.
2020-12-21 09:15:07,846::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.231210). Check your callbacks.
2020-12-21 09:15:08,461::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.258234). Check your callbacks.
2020-12-21 09:15:13,243::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.321792). Check your callbacks.
2020-12-21 09:15:25,260::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.342310). Check your callbacks.
2020-12-21 09:15:25,743::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.342310). Check your callbacks.
2020-12-21 09:15:26,254::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.342310). Check your callbacks.
2020-12-21 09:15:26,844::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.342310). Check your callbacks.
2020-12-21 09:15:33,328::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.340809). Check your callbacks.
2020-12-21 09:15:33,900::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.342811). Check your callbacks.
2020-12-21 09:15:34,478::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.342811). Check your callbacks.
2020-12-21 09:15:41,815::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.306778). Check your callbacks.
2020-12-21 09:15:42,128::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.283757). Check your callbacks.
2020-12-21 09:15:42,325::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.243221). Check your callbacks.
2020-12-21 09:15:45,545::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:15:55,677::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:16:25,089::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.211 - Accuracy: 66.8% 
2020-12-21 09:16:39,875::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:17:02,523::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.242220). Check your callbacks.
2020-12-21 09:17:02,932::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.258234). Check your callbacks.
2020-12-21 09:17:03,349::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.259235). Check your callbacks.
2020-12-21 09:17:03,837::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.260236). Check your callbacks.
2020-12-21 09:17:04,038::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.259235). Check your callbacks.
2020-12-21 09:17:04,567::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.260236). Check your callbacks.
2020-12-21 09:17:19,145::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.294767). Check your callbacks.
2020-12-21 09:17:19,736::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.323794). Check your callbacks.
2020-12-21 09:17:21,568::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.350818). Check your callbacks.
2020-12-21 09:17:22,142::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.365832). Check your callbacks.
2020-12-21 09:17:22,717::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.370336). Check your callbacks.
2020-12-21 09:17:30,293::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.362829). Check your callbacks.
2020-12-21 09:17:30,883::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.365832). Check your callbacks.
2020-12-21 09:17:39,467::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.362829). Check your callbacks.
2020-12-21 09:17:39,572::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.351819). Check your callbacks.
2020-12-21 09:17:40,817::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.195177). Check your callbacks.
2020-12-21 09:17:43,568::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:17:51,646::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:18:23,266::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.209 - Accuracy: 67.0% 
2020-12-21 09:18:38,214::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:19:02,305::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.245222). Check your callbacks.
2020-12-21 09:19:02,652::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.195177). Check your callbacks.
2020-12-21 09:19:03,046::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.223703). Check your callbacks.
2020-12-21 09:19:03,527::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.252229). Check your callbacks.
2020-12-21 09:19:04,099::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.273748). Check your callbacks.
2020-12-21 09:19:04,737::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.295268). Check your callbacks.
2020-12-21 09:19:15,110::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.322793). Check your callbacks.
2020-12-21 09:19:16,795::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.355823). Check your callbacks.
2020-12-21 09:19:21,689::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.361828). Check your callbacks.
2020-12-21 09:19:22,287::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.368334). Check your callbacks.
2020-12-21 09:19:22,853::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.369835). Check your callbacks.
2020-12-21 09:19:23,469::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.369835). Check your callbacks.
2020-12-21 09:19:34,629::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.369835). Check your callbacks.
2020-12-21 09:19:39,074::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.363330). Check your callbacks.
2020-12-21 09:19:39,741::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.308279). Check your callbacks.
2020-12-21 09:19:39,827::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.188171). Check your callbacks.
2020-12-21 09:19:42,313::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:19:49,494::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:20:25,624::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.21 - Accuracy: 67.1% 
2020-12-21 09:20:37,588::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:21:01,661::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.188170). Check your callbacks.
2020-12-21 09:21:02,010::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.199681). Check your callbacks.
2020-12-21 09:21:02,407::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.211192). Check your callbacks.
2020-12-21 09:21:02,887::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.224704). Check your callbacks.
2020-12-21 09:21:03,405::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.238216). Check your callbacks.
2020-12-21 09:21:03,955::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.266742). Check your callbacks.
2020-12-21 09:21:04,501::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.295268). Check your callbacks.
2020-12-21 09:21:08,778::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.307279). Check your callbacks.
2020-12-21 09:21:09,395::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.315786). Check your callbacks.
2020-12-21 09:21:10,098::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.330800). Check your callbacks.
2020-12-21 09:21:20,692::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.355322). Check your callbacks.
2020-12-21 09:21:21,244::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.355322). Check your callbacks.
2020-12-21 09:21:21,817::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.365331). Check your callbacks.
2020-12-21 09:21:22,416::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.374339). Check your callbacks.
2020-12-21 09:21:29,234::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.374339). Check your callbacks.
2020-12-21 09:21:29,918::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.374339). Check your callbacks.
2020-12-21 09:21:30,481::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.366833). Check your callbacks.
2020-12-21 09:21:34,348::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.355823). Check your callbacks.
2020-12-21 09:21:34,739::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.348316). Check your callbacks.
2020-12-21 09:21:37,565::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.315286). Check your callbacks.
2020-12-21 09:21:37,845::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.281755). Check your callbacks.
2020-12-21 09:21:38,083::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.239217). Check your callbacks.
2020-12-21 09:21:38,247::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.172657). Check your callbacks.
2020-12-21 09:21:41,498::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:21:50,347::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:22:19,742::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.212 - Accuracy: 66.9% 
2020-12-21 09:22:34,692::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:22:56,715::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.258234). Check your callbacks.
2020-12-21 09:22:57,140::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.265240). Check your callbacks.
2020-12-21 09:22:57,510::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.254731). Check your callbacks.
2020-12-21 09:22:58,044::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.265240). Check your callbacks.
2020-12-21 09:22:58,622::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.268744). Check your callbacks.
2020-12-21 09:23:08,414::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.352820). Check your callbacks.
2020-12-21 09:23:14,907::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.305777). Check your callbacks.
2020-12-21 09:23:15,379::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.317788). Check your callbacks.
2020-12-21 09:23:15,577::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.317788). Check your callbacks.
2020-12-21 09:23:16,016::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.331300). Check your callbacks.
2020-12-21 09:23:21,732::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.326796). Check your callbacks.
2020-12-21 09:23:22,289::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.326796). Check your callbacks.
2020-12-21 09:23:22,887::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.326796). Check your callbacks.
2020-12-21 09:23:26,155::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.334303). Check your callbacks.
2020-12-21 09:23:32,117::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.334303). Check your callbacks.
2020-12-21 09:23:32,237::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.334303). Check your callbacks.
2020-12-21 09:23:35,204::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.282256). Check your callbacks.
2020-12-21 09:23:37,386::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:23:44,424::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:24:16,197::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.212 - Accuracy: 66.8% 
2020-12-21 09:24:30,280::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:24:47,422::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.319290). Check your callbacks.
2020-12-21 09:24:54,017::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.271246). Check your callbacks.
2020-12-21 09:24:54,479::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.286760). Check your callbacks.
2020-12-21 09:24:54,676::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.271246). Check your callbacks.
2020-12-21 09:24:55,185::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.286760). Check your callbacks.
2020-12-21 09:25:10,308::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.356323). Check your callbacks.
2020-12-21 09:25:10,902::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.372337). Check your callbacks.
2020-12-21 09:25:12,803::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.377843). Check your callbacks.
2020-12-21 09:25:19,828::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.365832). Check your callbacks.
2020-12-21 09:25:20,433::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.369335). Check your callbacks.
2020-12-21 09:25:27,143::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.354321). Check your callbacks.
2020-12-21 09:25:27,457::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.344312). Check your callbacks.
2020-12-21 09:25:27,789::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.294267). Check your callbacks.
2020-12-21 09:25:30,102::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.238716). Check your callbacks.
2020-12-21 09:25:30,187::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.199181). Check your callbacks.
2020-12-21 09:25:32,752::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:25:39,861::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:26:11,963::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.212 - Accuracy: 67.0% 
2020-12-21 09:26:25,930::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:26:49,742::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.263739). Check your callbacks.
2020-12-21 09:26:50,250::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.286260). Check your callbacks.
2020-12-21 09:26:50,845::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.312784). Check your callbacks.
2020-12-21 09:26:52,167::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.351819). Check your callbacks.
2020-12-21 09:27:06,485::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.376842). Check your callbacks.
2020-12-21 09:27:08,500::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.383347). Check your callbacks.
2020-12-21 09:27:09,127::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.383347). Check your callbacks.
2020-12-21 09:27:16,510::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.374339). Check your callbacks.
2020-12-21 09:27:17,070::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.367333). Check your callbacks.
2020-12-21 09:27:17,509::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.357324). Check your callbacks.
2020-12-21 09:27:23,886::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.348316). Check your callbacks.
2020-12-21 09:27:24,130::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.324795). Check your callbacks.
2020-12-21 09:27:25,751::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.239717). Check your callbacks.
2020-12-21 09:27:25,836::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.186169). Check your callbacks.
2020-12-21 09:27:28,021::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:27:35,100::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:28:07,686::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.211 - Accuracy: 66.8% 
2020-12-21 09:28:21,718::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:28:47,736::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.214695). Check your callbacks.
2020-12-21 09:28:48,075::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.237215). Check your callbacks.
2020-12-21 09:28:48,563::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.260736). Check your callbacks.
2020-12-21 09:28:49,076::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.284258). Check your callbacks.
2020-12-21 09:28:49,618::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.288762). Check your callbacks.
2020-12-21 09:28:50,148::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.293266). Check your callbacks.
2020-12-21 09:28:50,786::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.297770). Check your callbacks.
2020-12-21 09:28:54,459::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.312783). Check your callbacks.
2020-12-21 09:28:55,064::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.326296). Check your callbacks.
2020-12-21 09:29:07,117::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.346815). Check your callbacks.
2020-12-21 09:29:07,692::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.348816). Check your callbacks.
2020-12-21 09:29:08,261::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.352319). Check your callbacks.
2020-12-21 09:29:15,503::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.353320). Check your callbacks.
2020-12-21 09:29:16,063::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.354321). Check your callbacks.
2020-12-21 09:29:19,080::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.346814). Check your callbacks.
2020-12-21 09:29:19,332::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.339808). Check your callbacks.
2020-12-21 09:29:19,632::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.329799). Check your callbacks.
2020-12-21 09:29:22,708::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.242220). Check your callbacks.
2020-12-21 09:29:26,255::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:29:33,465::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:30:04,392::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.21 - Accuracy: 67.0% 
2020-12-21 09:30:19,164::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:30:36,271::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.323293). Check your callbacks.
2020-12-21 09:30:41,899::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.258234). Check your callbacks.
2020-12-21 09:30:42,265::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.235714). Check your callbacks.
2020-12-21 09:30:42,683::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.258234). Check your callbacks.
2020-12-21 09:30:43,077::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.240218). Check your callbacks.
2020-12-21 09:30:43,609::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.258234). Check your callbacks.
2020-12-21 09:30:44,216::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.260736). Check your callbacks.
2020-12-21 09:30:58,567::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.286760). Check your callbacks.
2020-12-21 09:30:59,148::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.315786). Check your callbacks.
2020-12-21 09:30:59,700::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.341309). Check your callbacks.
2020-12-21 09:31:00,256::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.353821). Check your callbacks.
2020-12-21 09:31:00,792::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.365331). Check your callbacks.
2020-12-21 09:31:07,892::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.365331). Check your callbacks.
2020-12-21 09:31:08,474::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.367333). Check your callbacks.
2020-12-21 09:31:09,092::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.367333). Check your callbacks.
2020-12-21 09:31:18,285::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.294267). Check your callbacks.
2020-12-21 09:31:18,373::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.248726). Check your callbacks.
2020-12-21 09:31:18,457::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.204686). Check your callbacks.
2020-12-21 09:31:20,686::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:31:27,732::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:32:03,399::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.21 - Accuracy: 67.0% 
2020-12-21 09:32:15,690::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:32:40,170::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.146633). Check your callbacks.
2020-12-21 09:32:44,124::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.189672). Check your callbacks.
2020-12-21 09:32:57,155::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.363329). Check your callbacks.
2020-12-21 09:32:59,865::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.363329). Check your callbacks.
2020-12-21 09:33:00,305::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.363329). Check your callbacks.
2020-12-21 09:33:00,803::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.346314). Check your callbacks.
2020-12-21 09:33:01,395::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.346314). Check your callbacks.
2020-12-21 09:33:09,715::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.338807). Check your callbacks.
2020-12-21 09:33:17,363::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.316287). Check your callbacks.
2020-12-21 09:33:17,454::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.283257). Check your callbacks.
2020-12-21 09:33:17,537::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.236214). Check your callbacks.
2020-12-21 09:33:17,622::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.102093). Check your callbacks.
2020-12-21 09:33:19,225::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:33:26,325::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:33:59,442::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.208 - Accuracy: 67.2% 
2020-12-21 09:34:14,378::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:34:36,104::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.342310). Check your callbacks.
2020-12-21 09:34:39,823::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.285258). Check your callbacks.
2020-12-21 09:34:40,282::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.278752). Check your callbacks.
2020-12-21 09:34:40,923::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.285258). Check your callbacks.
2020-12-21 09:34:41,499::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.299772). Check your callbacks.
2020-12-21 09:34:42,129::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.314285). Check your callbacks.
2020-12-21 09:34:43,475::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.341309). Check your callbacks.
2020-12-21 09:34:44,106::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.341309). Check your callbacks.
2020-12-21 09:34:55,776::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.338807). Check your callbacks.
2020-12-21 09:34:56,378::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.352319). Check your callbacks.
2020-12-21 09:34:58,861::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.372338). Check your callbacks.
2020-12-21 09:34:59,439::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.372338). Check your callbacks.
2020-12-21 09:35:00,153::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.372338). Check your callbacks.
2020-12-21 09:35:08,399::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.377843). Check your callbacks.
2020-12-21 09:35:09,143::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.377843). Check your callbacks.
2020-12-21 09:35:09,587::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.377843). Check your callbacks.
2020-12-21 09:35:13,462::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.367834). Check your callbacks.
2020-12-21 09:35:15,996::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.287260). Check your callbacks.
2020-12-21 09:35:16,081::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.242220). Check your callbacks.
2020-12-21 09:35:16,166::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.167152). Check your callbacks.
2020-12-21 09:35:18,151::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:35:25,382::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:35:57,338::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.21 - Accuracy: 66.9% 
2020-12-21 09:36:11,316::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:36:34,932::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.223202). Check your callbacks.
2020-12-21 09:36:35,078::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.199181). Check your callbacks.
2020-12-21 09:36:35,414::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.216196). Check your callbacks.
2020-12-21 09:36:35,874::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.233212). Check your callbacks.
2020-12-21 09:36:36,348::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.240218). Check your callbacks.
2020-12-21 09:36:36,843::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.247224). Check your callbacks.
2020-12-21 09:36:37,410::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.259736). Check your callbacks.
2020-12-21 09:36:38,014::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.286760). Check your callbacks.
2020-12-21 09:36:54,423::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.367333). Check your callbacks.
2020-12-21 09:36:54,957::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.367333). Check your callbacks.
2020-12-21 09:36:55,469::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.367333). Check your callbacks.
2020-12-21 09:36:56,072::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.379344). Check your callbacks.
2020-12-21 09:37:03,379::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.361328). Check your callbacks.
2020-12-21 09:37:03,806::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.338307). Check your callbacks.
2020-12-21 09:37:04,203::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.324795). Check your callbacks.
2020-12-21 09:37:04,560::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.312283). Check your callbacks.
2020-12-21 09:37:10,828::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.255232). Check your callbacks.
2020-12-21 09:37:10,912::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.227206). Check your callbacks.
2020-12-21 09:37:10,995::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.198180). Check your callbacks.
2020-12-21 09:37:12,768::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:37:19,855::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:37:53,537::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.21 - Accuracy: 67.0% 
2020-12-21 09:38:08,021::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:38:33,960::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.233212). Check your callbacks.
2020-12-21 09:38:34,435::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.262238). Check your callbacks.
2020-12-21 09:38:34,949::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.291264). Check your callbacks.
2020-12-21 09:38:35,485::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.292765). Check your callbacks.
2020-12-21 09:38:36,024::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.294267). Check your callbacks.
2020-12-21 09:38:36,561::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.307279). Check your callbacks.
2020-12-21 09:38:39,764::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.330800). Check your callbacks.
2020-12-21 09:38:53,338::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.361828). Check your callbacks.
2020-12-21 09:38:53,931::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.373839). Check your callbacks.
2020-12-21 09:39:01,012::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.373839). Check your callbacks.
2020-12-21 09:39:01,533::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.373839). Check your callbacks.
2020-12-21 09:39:01,981::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.373839). Check your callbacks.
2020-12-21 09:39:02,463::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.357324). Check your callbacks.
2020-12-21 09:39:04,823::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.332802). Check your callbacks.
2020-12-21 09:39:05,169::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.318789). Check your callbacks.
2020-12-21 09:39:08,450::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.245222). Check your callbacks.
2020-12-21 09:39:11,941::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:39:19,906::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:39:50,379::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.209 - Accuracy: 67.1% 
2020-12-21 09:40:04,650::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:40:23,357::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.371337). Check your callbacks.
2020-12-21 09:40:23,915::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.360827). Check your callbacks.
2020-12-21 09:40:24,459::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.352319). Check your callbacks.
2020-12-21 09:40:25,032::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.353821). Check your callbacks.
2020-12-21 09:40:29,870::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.353821). Check your callbacks.
2020-12-21 09:40:34,094::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.353821). Check your callbacks.
2020-12-21 09:40:44,078::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.351319). Check your callbacks.
2020-12-21 09:40:44,473::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.349817). Check your callbacks.
2020-12-21 09:40:44,941::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.348816). Check your callbacks.
2020-12-21 09:40:45,458::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.341310). Check your callbacks.
2020-12-21 09:40:46,060::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.341310). Check your callbacks.
2020-12-21 09:40:52,033::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.272747). Check your callbacks.
2020-12-21 09:40:52,496::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.272747). Check your callbacks.
2020-12-21 09:40:53,092::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.272747). Check your callbacks.
2020-12-21 09:41:02,414::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.337306). Check your callbacks.
2020-12-21 09:41:02,591::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.314285). Check your callbacks.
2020-12-21 09:41:03,286::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.247725). Check your callbacks.
2020-12-21 09:41:07,748::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:41:14,838::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:41:51,419::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.211 - Accuracy: 67.0% 
2020-12-21 09:42:02,716::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:42:28,777::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.234212). Check your callbacks.
2020-12-21 09:42:29,234::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.259735). Check your callbacks.
2020-12-21 09:42:29,721::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.285259). Check your callbacks.
2020-12-21 09:42:30,291::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.293766). Check your callbacks.
2020-12-21 09:42:30,858::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.302274). Check your callbacks.
2020-12-21 09:42:31,413::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.302274). Check your callbacks.
2020-12-21 09:42:32,134::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.323794). Check your callbacks.
2020-12-21 09:42:35,521::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.350318). Check your callbacks.
2020-12-21 09:42:47,694::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.365332). Check your callbacks.
2020-12-21 09:42:48,256::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.371837). Check your callbacks.
2020-12-21 09:42:48,845::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.371837). Check your callbacks.
2020-12-21 09:42:55,656::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.371837). Check your callbacks.
2020-12-21 09:42:56,218::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.371837). Check your callbacks.
2020-12-21 09:42:56,776::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.371837). Check your callbacks.
2020-12-21 09:42:57,267::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.368835). Check your callbacks.
2020-12-21 09:42:59,730::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.344813). Check your callbacks.
2020-12-21 09:42:59,906::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.342310). Check your callbacks.
2020-12-21 09:43:03,128::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.273248). Check your callbacks.
2020-12-21 09:43:06,821::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:43:13,837::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:43:48,590::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.208 - Accuracy: 67.2% 
2020-12-21 09:44:01,822::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:44:22,943::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.286760). Check your callbacks.
2020-12-21 09:44:23,384::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.264240). Check your callbacks.
2020-12-21 09:44:27,089::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.252229). Check your callbacks.
2020-12-21 09:44:27,421::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.247224). Check your callbacks.
2020-12-21 09:44:27,871::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.252229). Check your callbacks.
2020-12-21 09:44:28,416::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.258234). Check your callbacks.
2020-12-21 09:44:28,998::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.264240). Check your callbacks.
2020-12-21 09:44:29,593::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.278252). Check your callbacks.
2020-12-21 09:44:45,309::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.317788). Check your callbacks.
2020-12-21 09:44:45,701::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.317788). Check your callbacks.
2020-12-21 09:44:46,114::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.317788). Check your callbacks.
2020-12-21 09:44:46,549::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.311783). Check your callbacks.
2020-12-21 09:44:47,052::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.303776). Check your callbacks.
2020-12-21 09:44:47,633::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.303776). Check your callbacks.
2020-12-21 09:44:53,519::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.303776). Check your callbacks.
2020-12-21 09:44:54,162::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.303776). Check your callbacks.
2020-12-21 09:44:54,731::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.314785). Check your callbacks.
2020-12-21 09:44:55,351::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.314785). Check your callbacks.
2020-12-21 09:45:01,653::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.314785). Check your callbacks.
2020-12-21 09:45:03,779::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.282256). Check your callbacks.
2020-12-21 09:45:03,866::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.225204). Check your callbacks.
2020-12-21 09:45:03,951::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.159144). Check your callbacks.
2020-12-21 09:45:05,419::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:45:13,195::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:45:48,380::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.21 - Accuracy: 66.8% 
2020-12-21 09:46:00,405::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:46:25,530::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.167152). Check your callbacks.
2020-12-21 09:46:25,829::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.139126). Check your callbacks.
2020-12-21 09:46:26,238::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.167152). Check your callbacks.
2020-12-21 09:46:26,661::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.206187). Check your callbacks.
2020-12-21 09:46:27,147::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.245223). Check your callbacks.
2020-12-21 09:46:27,705::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.246224). Check your callbacks.
2020-12-21 09:46:28,189::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.247224). Check your callbacks.
2020-12-21 09:46:28,675::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.264239). Check your callbacks.
2020-12-21 09:46:29,207::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.268744). Check your callbacks.
2020-12-21 09:46:31,239::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.305277). Check your callbacks.
2020-12-21 09:46:44,674::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.327297). Check your callbacks.
2020-12-21 09:46:45,220::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.327297). Check your callbacks.
2020-12-21 09:46:45,763::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.333803). Check your callbacks.
2020-12-21 09:46:46,335::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.333803). Check your callbacks.
2020-12-21 09:46:52,916::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.336805). Check your callbacks.
2020-12-21 09:46:53,450::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.335805). Check your callbacks.
2020-12-21 09:46:53,942::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.333803). Check your callbacks.
2020-12-21 09:46:54,440::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.327297). Check your callbacks.
2020-12-21 09:47:00,409::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.304276). Check your callbacks.
2020-12-21 09:47:00,953::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.196178). Check your callbacks.
2020-12-21 09:47:04,348::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:47:11,414::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:47:43,224::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.209 - Accuracy: 67.1% 
2020-12-21 09:47:57,812::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:48:18,172::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.324795). Check your callbacks.
2020-12-21 09:48:18,659::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.294267). Check your callbacks.
2020-12-21 09:48:23,217::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.294267). Check your callbacks.
2020-12-21 09:48:23,766::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.299772). Check your callbacks.
2020-12-21 09:48:24,382::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.305277). Check your callbacks.
2020-12-21 09:48:24,988::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.325295). Check your callbacks.
2020-12-21 09:48:32,260::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.342811). Check your callbacks.
2020-12-21 09:48:38,660::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.342811). Check your callbacks.
2020-12-21 09:48:39,210::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.345814). Check your callbacks.
2020-12-21 09:48:39,790::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.363329). Check your callbacks.
2020-12-21 09:48:42,034::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.378343). Check your callbacks.
2020-12-21 09:48:50,173::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.381846). Check your callbacks.
2020-12-21 09:48:52,888::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.362328). Check your callbacks.
2020-12-21 09:48:55,606::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.362328). Check your callbacks.
2020-12-21 09:48:55,872::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.307279). Check your callbacks.
2020-12-21 09:48:56,142::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.258234). Check your callbacks.
2020-12-21 09:48:57,899::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.135123). Check your callbacks.
2020-12-21 09:48:59,873::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:49:06,890::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:49:38,691::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.211 - Accuracy: 66.7% 
2020-12-21 09:49:53,655::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:50:15,951::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.125614). Check your callbacks.
2020-12-21 09:50:16,407::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.207188). Check your callbacks.
2020-12-21 09:50:16,826::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.226205). Check your callbacks.
2020-12-21 09:50:17,267::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.245222). Check your callbacks.
2020-12-21 09:50:17,793::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.255231). Check your callbacks.
2020-12-21 09:50:18,398::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.265240). Check your callbacks.
2020-12-21 09:50:25,341::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.268243). Check your callbacks.
2020-12-21 09:50:30,282::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.333302). Check your callbacks.
2020-12-21 09:50:39,450::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.333302). Check your callbacks.
2020-12-21 09:50:39,993::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.335304). Check your callbacks.
2020-12-21 09:50:40,543::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.338807). Check your callbacks.
2020-12-21 09:50:41,073::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.338807). Check your callbacks.
2020-12-21 09:50:41,594::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.338807). Check your callbacks.
2020-12-21 09:50:42,136::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.338307). Check your callbacks.
2020-12-21 09:50:42,701::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.338307). Check your callbacks.
2020-12-21 09:50:43,260::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.343812). Check your callbacks.
2020-12-21 09:50:48,248::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.338307). Check your callbacks.
2020-12-21 09:50:48,591::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.338307). Check your callbacks.
2020-12-21 09:50:53,690::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.276751). Check your callbacks.
2020-12-21 09:50:53,927::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.199181). Check your callbacks.
2020-12-21 09:50:55,654::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.155641). Check your callbacks.
2020-12-21 09:50:55,923::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:51:03,039::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:51:34,982::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.212 - Accuracy: 66.7% 
2020-12-21 09:51:49,389::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:52:13,998::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.243202). Check your callbacks.
2020-12-21 09:52:14,326::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.222201). Check your callbacks.
2020-12-21 09:52:14,782::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.242720). Check your callbacks.
2020-12-21 09:52:15,244::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.263239). Check your callbacks.
2020-12-21 09:52:15,736::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.272747). Check your callbacks.
2020-12-21 09:52:16,282::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.282256). Check your callbacks.
2020-12-21 09:52:16,814::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.285240). Check your callbacks.
2020-12-21 09:52:17,413::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.288261). Check your callbacks.
2020-12-21 09:52:29,406::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.338307). Check your callbacks.
2020-12-21 09:52:32,928::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.354822). Check your callbacks.
2020-12-21 09:52:33,416::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.354822). Check your callbacks.
2020-12-21 09:52:33,983::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.359826). Check your callbacks.
2020-12-21 09:52:41,588::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.364330). Check your callbacks.
2020-12-21 09:52:42,137::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.360327). Check your callbacks.
2020-12-21 09:52:42,650::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.360327). Check your callbacks.
2020-12-21 09:52:49,487::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.332301). Check your callbacks.
2020-12-21 09:52:49,581::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.285759). Check your callbacks.
2020-12-21 09:52:49,666::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.236715). Check your callbacks.
2020-12-21 09:52:49,750::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.108598). Check your callbacks.
2020-12-21 09:52:53,021::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:53:00,127::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:53:35,416::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.211 - Accuracy: 66.8% 
2020-12-21 09:53:48,090::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:54:11,256::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.105096). Check your callbacks.
2020-12-21 09:54:11,629::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.161647). Check your callbacks.
2020-12-21 09:54:12,026::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.218198). Check your callbacks.
2020-12-21 09:54:12,504::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.236214). Check your callbacks.
2020-12-21 09:54:12,990::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.254230). Check your callbacks.
2020-12-21 09:54:13,522::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.262738). Check your callbacks.
2020-12-21 09:54:14,118::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.271246). Check your callbacks.
2020-12-21 09:54:22,346::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.331300). Check your callbacks.
2020-12-21 09:54:30,413::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.353821). Check your callbacks.
2020-12-21 09:54:30,989::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.364330). Check your callbacks.
2020-12-21 09:54:31,533::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.365331). Check your callbacks.
2020-12-21 09:54:32,112::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.375841). Check your callbacks.
2020-12-21 09:54:39,507::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.367333). Check your callbacks.
2020-12-21 09:54:39,977::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.367333). Check your callbacks.
2020-12-21 09:54:46,824::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.329298). Check your callbacks.
2020-12-21 09:54:47,739::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.268744). Check your callbacks.
2020-12-21 09:54:48,013::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.235213). Check your callbacks.
2020-12-21 09:54:48,217::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.198180). Check your callbacks.
2020-12-21 09:54:51,838::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:54:58,872::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:55:30,485::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.209 - Accuracy: 67.1% 
2020-12-21 09:55:45,291::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:56:10,304::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.123112). Check your callbacks.
2020-12-21 09:56:10,712::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.186669). Check your callbacks.
2020-12-21 09:56:11,128::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.239217). Check your callbacks.
2020-12-21 09:56:11,543::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.240718). Check your callbacks.
2020-12-21 09:56:12,018::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.242219). Check your callbacks.
2020-12-21 09:56:12,460::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.246223). Check your callbacks.
2020-12-21 09:56:12,937::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.250227). Check your callbacks.
2020-12-21 09:56:13,430::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.257233). Check your callbacks.
2020-12-21 09:56:13,969::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.257233). Check your callbacks.
2020-12-21 09:56:16,101::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.297269). Check your callbacks.
2020-12-21 09:56:29,438::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.321291). Check your callbacks.
2020-12-21 09:56:29,973::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.335804). Check your callbacks.
2020-12-21 09:56:30,533::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.342811). Check your callbacks.
2020-12-21 09:56:31,106::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.351819). Check your callbacks.
2020-12-21 09:56:38,004::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.351819). Check your callbacks.
2020-12-21 09:56:38,539::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.353320). Check your callbacks.
2020-12-21 09:56:39,043::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.344813). Check your callbacks.
2020-12-21 09:56:39,560::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.338307). Check your callbacks.
2020-12-21 09:56:39,994::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.331300). Check your callbacks.
2020-12-21 09:56:45,544::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.275750). Check your callbacks.
2020-12-21 09:56:45,772::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.243721). Check your callbacks.
2020-12-21 09:56:49,298::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:56:56,418::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:57:29,272::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.21 - Accuracy: 67.0% 
2020-12-21 09:57:43,918::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:58:09,534::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.245223). Check your callbacks.
2020-12-21 09:58:09,979::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.264240). Check your callbacks.
2020-12-21 09:58:10,445::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.265241). Check your callbacks.
2020-12-21 09:58:10,993::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.266242). Check your callbacks.
2020-12-21 09:58:11,559::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.278252). Check your callbacks.
2020-12-21 09:58:12,053::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.290263). Check your callbacks.
2020-12-21 09:58:12,565::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.301273). Check your callbacks.
2020-12-21 09:58:15,497::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.350318). Check your callbacks.
2020-12-21 09:58:28,949::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.355823). Check your callbacks.
2020-12-21 09:58:29,508::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.355823). Check your callbacks.
2020-12-21 09:58:30,107::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.362829). Check your callbacks.
2020-12-21 09:58:37,332::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.360327). Check your callbacks.
2020-12-21 09:58:37,891::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.351819). Check your callbacks.
2020-12-21 09:58:40,268::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.339808). Check your callbacks.
2020-12-21 09:58:44,420::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.247224). Check your callbacks.
2020-12-21 09:58:47,884::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:58:54,904::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 09:59:28,048::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.209 - Accuracy: 67.1% 
2020-12-21 09:59:42,702::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:00:03,462::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.345814). Check your callbacks.
2020-12-21 10:00:07,777::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.295768). Check your callbacks.
2020-12-21 10:00:08,245::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.298156). Check your callbacks.
2020-12-21 10:00:08,779::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.318231). Check your callbacks.
2020-12-21 10:00:09,363::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.338307). Check your callbacks.
2020-12-21 10:00:24,224::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.364831). Check your callbacks.
2020-12-21 10:00:24,849::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.378844). Check your callbacks.
2020-12-21 10:00:26,870::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.384349). Check your callbacks.
2020-12-21 10:00:27,491::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.383348). Check your callbacks.
2020-12-21 10:00:34,550::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.383348). Check your callbacks.
2020-12-21 10:00:35,258::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.357824). Check your callbacks.
2020-12-21 10:00:36,576::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.331801). Check your callbacks.
2020-12-21 10:00:36,959::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.329799). Check your callbacks.
2020-12-21 10:00:40,809::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.284758). Check your callbacks.
2020-12-21 10:00:42,854::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.209190). Check your callbacks.
2020-12-21 10:00:42,948::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.165150). Check your callbacks.
2020-12-21 10:00:44,306::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:00:51,343::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:01:23,606::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.209 - Accuracy: 67.1% 
2020-12-21 10:01:38,398::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:02:01,966::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.257233). Check your callbacks.
2020-12-21 10:02:02,475::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.244722). Check your callbacks.
2020-12-21 10:02:02,871::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.234212). Check your callbacks.
2020-12-21 10:02:03,344::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.245723). Check your callbacks.
2020-12-21 10:02:03,874::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.257233). Check your callbacks.
2020-12-21 10:02:04,435::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.273748). Check your callbacks.
2020-12-21 10:02:05,015::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.311783). Check your callbacks.
2020-12-21 10:02:05,797::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.311783). Check your callbacks.
2020-12-21 10:02:20,041::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.328798). Check your callbacks.
2020-12-21 10:02:20,515::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.328798). Check your callbacks.
2020-12-21 10:02:21,000::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.328798). Check your callbacks.
2020-12-21 10:02:21,495::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.329799). Check your callbacks.
2020-12-21 10:02:22,069::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.329799). Check your callbacks.
2020-12-21 10:02:28,813::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.329799). Check your callbacks.
2020-12-21 10:02:29,368::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.329799). Check your callbacks.
2020-12-21 10:02:29,840::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.329799). Check your callbacks.
2020-12-21 10:02:30,301::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.329799). Check your callbacks.
2020-12-21 10:02:38,188::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.312283). Check your callbacks.
2020-12-21 10:02:38,274::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.270245). Check your callbacks.
2020-12-21 10:02:38,358::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.221701). Check your callbacks.
2020-12-21 10:02:40,018::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:02:46,985::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:03:20,590::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.209 - Accuracy: 67.1% 
2020-12-21 10:03:34,996::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:04:00,673::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.170655). Check your callbacks.
2020-12-21 10:04:01,022::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.198180). Check your callbacks.
2020-12-21 10:04:01,431::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.205186). Check your callbacks.
2020-12-21 10:04:01,853::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.212193). Check your callbacks.
2020-12-21 10:04:02,276::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.232211). Check your callbacks.
2020-12-21 10:04:02,757::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.252229). Check your callbacks.
2020-12-21 10:04:03,201::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.251728). Check your callbacks.
2020-12-21 10:04:03,666::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.251728). Check your callbacks.
2020-12-21 10:04:04,218::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.252729). Check your callbacks.
2020-12-21 10:04:04,812::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.256733). Check your callbacks.
2020-12-21 10:04:19,661::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.324794). Check your callbacks.
2020-12-21 10:04:20,223::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.354321). Check your callbacks.
2020-12-21 10:04:20,802::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.362329). Check your callbacks.
2020-12-21 10:04:27,348::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.362329). Check your callbacks.
2020-12-21 10:04:28,637::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.362329). Check your callbacks.
2020-12-21 10:04:29,119::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.354822). Check your callbacks.
2020-12-21 10:04:29,539::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.346815). Check your callbacks.
2020-12-21 10:04:30,066::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.333803). Check your callbacks.
2020-12-21 10:04:35,364::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.240718). Check your callbacks.
2020-12-21 10:04:38,753::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:04:50,026::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:05:22,190::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.208 - Accuracy: 66.9% 
2020-12-21 10:05:35,056::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:05:57,755::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.142129). Check your callbacks.
2020-12-21 10:05:58,061::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.173658). Check your callbacks.
2020-12-21 10:05:58,466::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.205186). Check your callbacks.
2020-12-21 10:05:58,635::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.173658). Check your callbacks.
2020-12-21 10:05:59,114::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.205186). Check your callbacks.
2020-12-21 10:05:59,691::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.228708). Check your callbacks.
2020-12-21 10:06:00,258::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.252229). Check your callbacks.
2020-12-21 10:06:00,849::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.265741). Check your callbacks.
2020-12-21 10:06:01,440::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.302775). Check your callbacks.
2020-12-21 10:06:16,249::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.345814). Check your callbacks.
2020-12-21 10:06:16,725::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.345814). Check your callbacks.
2020-12-21 10:06:17,226::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.345814). Check your callbacks.
2020-12-21 10:06:17,723::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.345814). Check your callbacks.
2020-12-21 10:06:23,147::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.324294). Check your callbacks.
2020-12-21 10:06:23,683::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.324294). Check your callbacks.
2020-12-21 10:06:24,191::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.324294). Check your callbacks.
2020-12-21 10:06:24,706::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.317788). Check your callbacks.
2020-12-21 10:06:25,221::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.315786). Check your callbacks.
2020-12-21 10:06:25,714::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.315786). Check your callbacks.
2020-12-21 10:06:35,075::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.310282). Check your callbacks.
2020-12-21 10:06:35,195::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.310282). Check your callbacks.
2020-12-21 10:06:35,311::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.290263). Check your callbacks.
2020-12-21 10:06:37,693::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:06:45,011::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:07:17,076::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.21 - Accuracy: 67.1% 
2020-12-21 10:07:31,063::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:07:56,925::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.258234). Check your callbacks.
2020-12-21 10:07:57,387::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.281255). Check your callbacks.
2020-12-21 10:07:58,829::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.295268). Check your callbacks.
2020-12-21 10:07:59,345::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.303775). Check your callbacks.
2020-12-21 10:07:59,859::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.312283). Check your callbacks.
2020-12-21 10:08:04,307::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.339308). Check your callbacks.
2020-12-21 10:08:16,058::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.359826). Check your callbacks.
2020-12-21 10:08:16,837::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.366833). Check your callbacks.
2020-12-21 10:08:17,567::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.372338). Check your callbacks.
2020-12-21 10:08:25,477::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.375841). Check your callbacks.
2020-12-21 10:08:28,102::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.364831). Check your callbacks.
2020-12-21 10:08:29,052::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.339808). Check your callbacks.
2020-12-21 10:08:35,819::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:08:46,520::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:09:15,129::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.207 - Accuracy: 67.1% 
2020-12-21 10:09:29,732::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:09:54,336::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.191173). Check your callbacks.
2020-12-21 10:09:54,764::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.211692). Check your callbacks.
2020-12-21 10:09:55,248::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.232211). Check your callbacks.
2020-12-21 10:09:55,761::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.245222). Check your callbacks.
2020-12-21 10:09:56,313::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.258234). Check your callbacks.
2020-12-21 10:09:56,904::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.263239). Check your callbacks.
2020-12-21 10:10:12,532::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.372838). Check your callbacks.
2020-12-21 10:10:13,143::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.372838). Check your callbacks.
2020-12-21 10:10:13,676::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.372838). Check your callbacks.
2020-12-21 10:10:14,273::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.377342). Check your callbacks.
2020-12-21 10:10:21,972::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.376341). Check your callbacks.
2020-12-21 10:10:22,588::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.371337). Check your callbacks.
2020-12-21 10:10:29,570::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.350318). Check your callbacks.
2020-12-21 10:10:29,670::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.322292). Check your callbacks.
2020-12-21 10:10:29,766::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.275750). Check your callbacks.
2020-12-21 10:10:29,914::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.173157). Check your callbacks.
2020-12-21 10:10:33,654::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:10:42,546::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:11:13,438::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.209 - Accuracy: 67.2% 
2020-12-21 10:11:28,435::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:11:47,137::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.369835). Check your callbacks.
2020-12-21 10:11:51,958::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.316287). Check your callbacks.
2020-12-21 10:11:52,444::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.305277). Check your callbacks.
2020-12-21 10:11:52,872::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.285759). Check your callbacks.
2020-12-21 10:11:53,474::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.305277). Check your callbacks.
2020-12-21 10:11:58,338::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.361828). Check your callbacks.
2020-12-21 10:12:07,502::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.285759). Check your callbacks.
2020-12-21 10:12:08,055::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.314785). Check your callbacks.
2020-12-21 10:12:08,648::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.337806). Check your callbacks.
2020-12-21 10:12:10,510::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.365331). Check your callbacks.
2020-12-21 10:12:17,992::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.350818). Check your callbacks.
2020-12-21 10:12:18,545::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.350818). Check your callbacks.
2020-12-21 10:12:19,115::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.351819). Check your callbacks.
2020-12-21 10:12:25,092::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.332802). Check your callbacks.
2020-12-21 10:12:27,897::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.212192). Check your callbacks.
2020-12-21 10:12:27,981::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.119108). Check your callbacks.
2020-12-21 10:12:30,019::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:12:37,129::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:13:10,093::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.209 - Accuracy: 67.1% 
2020-12-21 10:13:24,893::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:13:49,248::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.134122). Check your callbacks.
2020-12-21 10:13:49,651::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.217197). Check your callbacks.
2020-12-21 10:13:50,122::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.234713). Check your callbacks.
2020-12-21 10:13:50,676::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.252229). Check your callbacks.
2020-12-21 10:13:51,298::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.263739). Check your callbacks.
2020-12-21 10:13:51,902::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.275250). Check your callbacks.
2020-12-21 10:13:57,561::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.353320). Check your callbacks.
2020-12-21 10:14:08,219::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.358825). Check your callbacks.
2020-12-21 10:14:08,773::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.358825). Check your callbacks.
2020-12-21 10:14:09,340::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.358825). Check your callbacks.
2020-12-21 10:14:09,909::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.358825). Check your callbacks.
2020-12-21 10:14:17,304::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.354821). Check your callbacks.
2020-12-21 10:14:17,862::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.353320). Check your callbacks.
2020-12-21 10:14:21,758::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.340809). Check your callbacks.
2020-12-21 10:14:24,704::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.318289). Check your callbacks.
2020-12-21 10:14:24,923::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.287761). Check your callbacks.
2020-12-21 10:14:25,160::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.241219). Check your callbacks.
2020-12-21 10:14:28,581::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:14:35,724::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:15:08,409::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.208 - Accuracy: 67.1% 
2020-12-21 10:15:23,034::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:15:46,507::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.148635). Check your callbacks.
2020-12-21 10:15:46,891::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.210191). Check your callbacks.
2020-12-21 10:15:47,361::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.227707). Check your callbacks.
2020-12-21 10:15:47,902::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.245223). Check your callbacks.
2020-12-21 10:15:48,500::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.258735). Check your callbacks.
2020-12-21 10:15:56,527::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.341309). Check your callbacks.
2020-12-21 10:16:05,330::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.363830). Check your callbacks.
2020-12-21 10:16:05,827::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.363830). Check your callbacks.
2020-12-21 10:16:06,366::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.357324). Check your callbacks.
2020-12-21 10:16:06,965::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.357324). Check your callbacks.
2020-12-21 10:16:16,129::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.345814). Check your callbacks.
2020-12-21 10:16:21,267::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.336805). Check your callbacks.
2020-12-21 10:16:22,937::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.325295). Check your callbacks.
2020-12-21 10:16:23,073::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.315286). Check your callbacks.
2020-12-21 10:16:23,169::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.282756). Check your callbacks.
2020-12-21 10:16:23,286::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.177661). Check your callbacks.
2020-12-21 10:16:26,903::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:16:34,000::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:17:06,979::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.208 - Accuracy: 67.1% 
2020-12-21 10:17:21,826::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:17:42,622::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.270245). Check your callbacks.
2020-12-21 10:17:43,011::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.262238). Check your callbacks.
2020-12-21 10:17:46,719::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.254230). Check your callbacks.
2020-12-21 10:17:47,260::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.254230). Check your callbacks.
2020-12-21 10:17:47,781::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.262238). Check your callbacks.
2020-12-21 10:17:48,344::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.270245). Check your callbacks.
2020-12-21 10:17:48,954::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.280755). Check your callbacks.
2020-12-21 10:17:52,828::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.335804). Check your callbacks.
2020-12-21 10:18:05,091::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.335804). Check your callbacks.
2020-12-21 10:18:05,504::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.335804). Check your callbacks.
2020-12-21 10:18:05,947::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.333302). Check your callbacks.
2020-12-21 10:18:06,443::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.334303). Check your callbacks.
2020-12-21 10:18:06,992::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.334303). Check your callbacks.
2020-12-21 10:18:12,174::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.325295). Check your callbacks.
2020-12-21 10:18:12,657::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.312784). Check your callbacks.
2020-12-21 10:18:13,141::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.309280). Check your callbacks.
2020-12-21 10:18:15,924::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.309280). Check your callbacks.
2020-12-21 10:18:20,483::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.309280). Check your callbacks.
2020-12-21 10:18:22,395::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.246724). Check your callbacks.
2020-12-21 10:18:22,478::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.194676). Check your callbacks.
2020-12-21 10:18:23,105::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:18:30,078::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:19:02,883::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.21 - Accuracy: 67.0% 
2020-12-21 10:19:17,745::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:19:42,453::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.126115). Check your callbacks.
2020-12-21 10:19:42,635::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.117607). Check your callbacks.
2020-12-21 10:19:42,981::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.126115). Check your callbacks.
2020-12-21 10:19:43,409::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.187170). Check your callbacks.
2020-12-21 10:19:43,855::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.248225). Check your callbacks.
2020-12-21 10:19:44,069::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.187170). Check your callbacks.
2020-12-21 10:19:44,539::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.248225). Check your callbacks.
2020-12-21 10:19:45,152::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.253730). Check your callbacks.
2020-12-21 10:20:01,908::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.346314). Check your callbacks.
2020-12-21 10:20:02,403::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.346314). Check your callbacks.
2020-12-21 10:20:02,930::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.346314). Check your callbacks.
2020-12-21 10:20:03,537::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.366332). Check your callbacks.
2020-12-21 10:20:09,966::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.338807). Check your callbacks.
2020-12-21 10:20:10,502::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.338807). Check your callbacks.
2020-12-21 10:20:11,035::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.327797). Check your callbacks.
2020-12-21 10:20:11,421::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.321291). Check your callbacks.
2020-12-21 10:20:12,812::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.317288). Check your callbacks.
2020-12-21 10:20:17,636::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.268243). Check your callbacks.
2020-12-21 10:20:17,901::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.224203). Check your callbacks.
2020-12-21 10:20:18,307::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.184167). Check your callbacks.
2020-12-21 10:20:21,494::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:20:28,546::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:21:01,795::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.208 - Accuracy: 67.1% 
2020-12-21 10:21:16,452::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:21:41,005::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.121110). Check your callbacks.
2020-12-21 10:21:41,276::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.145131). Check your callbacks.
2020-12-21 10:21:41,641::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.169153). Check your callbacks.
2020-12-21 10:21:42,032::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.188171). Check your callbacks.
2020-12-21 10:21:42,533::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.207188). Check your callbacks.
2020-12-21 10:21:43,078::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.212693). Check your callbacks.
2020-12-21 10:21:43,667::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.218199). Check your callbacks.
2020-12-21 10:21:48,718::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.335805). Check your callbacks.
2020-12-21 10:22:00,022::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.349817). Check your callbacks.
2020-12-21 10:22:00,548::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.349817). Check your callbacks.
2020-12-21 10:22:01,067::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.349817). Check your callbacks.
2020-12-21 10:22:01,639::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.356323). Check your callbacks.
2020-12-21 10:22:08,436::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.351319). Check your callbacks.
2020-12-21 10:22:08,969::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.349817). Check your callbacks.
2020-12-21 10:22:09,554::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.349817). Check your callbacks.
2020-12-21 10:22:13,252::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.338307). Check your callbacks.
2020-12-21 10:22:16,304::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.323794). Check your callbacks.
2020-12-21 10:22:16,568::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.289263). Check your callbacks.
2020-12-21 10:22:16,820::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.247725). Check your callbacks.
2020-12-21 10:22:20,218::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:22:30,242::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:23:01,003::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.209 - Accuracy: 67.0% 
2020-12-21 10:23:13,971::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:23:37,645::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.124113). Check your callbacks.
2020-12-21 10:23:37,971::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.143630). Check your callbacks.
2020-12-21 10:23:38,282::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.163148). Check your callbacks.
2020-12-21 10:23:38,693::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.169654). Check your callbacks.
2020-12-21 10:23:39,187::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.176160). Check your callbacks.
2020-12-21 10:23:39,755::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.219199). Check your callbacks.
2020-12-21 10:23:40,346::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.262238). Check your callbacks.
2020-12-21 10:23:46,573::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.307779). Check your callbacks.
2020-12-21 10:23:47,174::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.324795). Check your callbacks.
2020-12-21 10:23:56,783::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.354321). Check your callbacks.
2020-12-21 10:23:57,320::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.354321). Check your callbacks.
2020-12-21 10:23:57,858::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.354321). Check your callbacks.
2020-12-21 10:23:58,477::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.354321). Check your callbacks.
2020-12-21 10:24:05,948::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.354321). Check your callbacks.
2020-12-21 10:24:06,506::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.354321). Check your callbacks.
2020-12-21 10:24:11,236::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.353320). Check your callbacks.
2020-12-21 10:24:11,880::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.348816). Check your callbacks.
2020-12-21 10:24:13,884::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.319289). Check your callbacks.
2020-12-21 10:24:14,142::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.276250). Check your callbacks.
2020-12-21 10:24:14,593::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.180664). Check your callbacks.
2020-12-21 10:24:17,653::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:24:24,773::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:24:57,200::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.207 - Accuracy: 67.2% 
2020-12-21 10:25:11,898::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:25:34,244::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.221201). Check your callbacks.
2020-12-21 10:25:34,711::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.243221). Check your callbacks.
2020-12-21 10:25:35,360::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.263739). Check your callbacks.
2020-12-21 10:25:35,925::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.284258). Check your callbacks.
2020-12-21 10:25:36,541::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.302274). Check your callbacks.
2020-12-21 10:25:52,481::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.339808). Check your callbacks.
2020-12-21 10:25:52,899::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.339808). Check your callbacks.
2020-12-21 10:25:53,347::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.339808). Check your callbacks.
2020-12-21 10:25:53,857::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.347815). Check your callbacks.
2020-12-21 10:25:54,419::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.350818). Check your callbacks.
2020-12-21 10:26:00,219::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.338807). Check your callbacks.
2020-12-21 10:26:01,592::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.338807). Check your callbacks.
2020-12-21 10:26:09,878::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.344813). Check your callbacks.
2020-12-21 10:26:12,541::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.247725). Check your callbacks.
2020-12-21 10:26:12,625::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.107598). Check your callbacks.
2020-12-21 10:26:14,855::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:26:21,815::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:26:54,576::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.207 - Accuracy: 67.4% 
2020-12-21 10:27:09,629::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:27:35,462::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.124112). Check your callbacks.
2020-12-21 10:27:35,797::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.139126). Check your callbacks.
2020-12-21 10:27:36,220::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.169153). Check your callbacks.
2020-12-21 10:27:36,661::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.199181). Check your callbacks.
2020-12-21 10:27:37,138::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.232711). Check your callbacks.
2020-12-21 10:27:37,696::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.266241). Check your callbacks.
2020-12-21 10:27:38,254::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.266742). Check your callbacks.
2020-12-21 10:27:38,858::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.266742). Check your callbacks.
2020-12-21 10:27:54,767::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.350818). Check your callbacks.
2020-12-21 10:27:55,329::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.358825). Check your callbacks.
2020-12-21 10:27:55,895::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.375841). Check your callbacks.
2020-12-21 10:28:03,094::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.387351). Check your callbacks.
2020-12-21 10:28:03,753::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.383848). Check your callbacks.
2020-12-21 10:28:04,306::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.374339). Check your callbacks.
2020-12-21 10:28:04,863::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.363830). Check your callbacks.
2020-12-21 10:28:08,076::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.355823). Check your callbacks.
2020-12-21 10:28:11,058::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.259235). Check your callbacks.
2020-12-21 10:28:11,250::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.206687). Check your callbacks.
2020-12-21 10:28:14,886::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:28:25,145::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:28:52,498::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.208 - Accuracy: 66.9% 
2020-12-21 10:29:06,472::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:29:33,300::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.236715). Check your callbacks.
2020-12-21 10:29:33,723::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.257233). Check your callbacks.
2020-12-21 10:29:34,206::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.273748). Check your callbacks.
2020-12-21 10:29:34,730::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.290263). Check your callbacks.
2020-12-21 10:29:35,237::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.298271). Check your callbacks.
2020-12-21 10:29:35,771::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.306278). Check your callbacks.
2020-12-21 10:29:36,336::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.308279). Check your callbacks.
2020-12-21 10:29:40,934::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.321792). Check your callbacks.
2020-12-21 10:29:41,543::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.335304). Check your callbacks.
2020-12-21 10:29:52,397::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.361328). Check your callbacks.
2020-12-21 10:29:53,014::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.367333). Check your callbacks.
2020-12-21 10:29:53,611::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.376341). Check your callbacks.
2020-12-21 10:30:00,291::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.376341). Check your callbacks.
2020-12-21 10:30:01,813::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.374340). Check your callbacks.
2020-12-21 10:30:05,488::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.357324). Check your callbacks.
2020-12-21 10:30:05,816::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.353320). Check your callbacks.
2020-12-21 10:30:06,077::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.351819). Check your callbacks.
2020-12-21 10:30:08,309::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.220200). Check your callbacks.
2020-12-21 10:30:12,051::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:30:19,138::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:30:53,035::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.208 - Accuracy: 67.0% 
2020-12-21 10:31:07,093::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:31:26,153::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.286760). Check your callbacks.
2020-12-21 10:31:26,598::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.246223). Check your callbacks.
2020-12-21 10:31:29,967::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.241219). Check your callbacks.
2020-12-21 10:31:30,387::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.243721). Check your callbacks.
2020-12-21 10:31:30,892::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.246223). Check your callbacks.
2020-12-21 10:31:31,108::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.243721). Check your callbacks.
2020-12-21 10:31:31,618::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.246223). Check your callbacks.
2020-12-21 10:31:46,659::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.247224). Check your callbacks.
2020-12-21 10:31:47,123::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.252229). Check your callbacks.
2020-12-21 10:31:47,633::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.271746). Check your callbacks.
2020-12-21 10:31:48,129::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.292765). Check your callbacks.
2020-12-21 10:31:48,594::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.292765). Check your callbacks.
2020-12-21 10:31:49,092::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.292765). Check your callbacks.
2020-12-21 10:31:49,676::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.304276). Check your callbacks.
2020-12-21 10:31:55,990::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.304276). Check your callbacks.
2020-12-21 10:31:56,590::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.313284). Check your callbacks.
2020-12-21 10:32:05,085::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.320791). Check your callbacks.
2020-12-21 10:32:05,511::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.320791). Check your callbacks.
2020-12-21 10:32:08,057::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.311282). Check your callbacks.
2020-12-21 10:32:08,142::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.269244). Check your callbacks.
2020-12-21 10:32:08,227::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.211692). Check your callbacks.
2020-12-21 10:32:10,198::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:32:19,338::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:32:53,605::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.207 - Accuracy: 67.3% 
2020-12-21 10:33:06,036::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:33:31,103::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.142129). Check your callbacks.
2020-12-21 10:33:31,363::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.146132). Check your callbacks.
2020-12-21 10:33:31,754::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.150136). Check your callbacks.
2020-12-21 10:33:32,177::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.186669). Check your callbacks.
2020-12-21 10:33:32,657::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.223202). Check your callbacks.
2020-12-21 10:33:33,240::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.244221). Check your callbacks.
2020-12-21 10:33:33,663::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.250227). Check your callbacks.
2020-12-21 10:33:33,866::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.236715). Check your callbacks.
2020-12-21 10:33:34,271::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.236715). Check your callbacks.
2020-12-21 10:33:34,808::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.257734). Check your callbacks.
2020-12-21 10:33:35,422::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.285259). Check your callbacks.
2020-12-21 10:33:50,156::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.325295). Check your callbacks.
2020-12-21 10:33:50,697::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.342811). Check your callbacks.
2020-12-21 10:33:51,243::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.346815). Check your callbacks.
2020-12-21 10:33:51,832::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.346815). Check your callbacks.
2020-12-21 10:33:58,472::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.349817). Check your callbacks.
2020-12-21 10:33:59,060::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.349817). Check your callbacks.
2020-12-21 10:33:59,496::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.348316). Check your callbacks.
2020-12-21 10:33:59,953::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.342811). Check your callbacks.
2020-12-21 10:34:00,375::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.332802). Check your callbacks.
2020-12-21 10:34:00,556::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.307779). Check your callbacks.
2020-12-21 10:34:05,798::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.267242). Check your callbacks.
2020-12-21 10:34:06,068::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.247224). Check your callbacks.
2020-12-21 10:34:09,718::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:34:17,373::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:34:47,569::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.209 - Accuracy: 67.1% 
2020-12-21 10:35:02,307::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:35:27,670::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.160146). Check your callbacks.
2020-12-21 10:35:28,067::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.195177). Check your callbacks.
2020-12-21 10:35:28,475::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.211192). Check your callbacks.
2020-12-21 10:35:28,958::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.227206). Check your callbacks.
2020-12-21 10:35:29,497::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.238216). Check your callbacks.
2020-12-21 10:35:30,025::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.249226). Check your callbacks.
2020-12-21 10:35:30,524::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.257734). Check your callbacks.
2020-12-21 10:35:31,064::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.279253). Check your callbacks.
2020-12-21 10:35:32,750::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.324294). Check your callbacks.
2020-12-21 10:35:46,957::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.359326). Check your callbacks.
2020-12-21 10:35:47,552::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.361828). Check your callbacks.
2020-12-21 10:35:48,134::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.372838). Check your callbacks.
2020-12-21 10:35:54,981::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.372838). Check your callbacks.
2020-12-21 10:35:56,280::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.357824). Check your callbacks.
2020-12-21 10:35:57,810::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.320791). Check your callbacks.
2020-12-21 10:36:02,581::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.285259). Check your callbacks.
2020-12-21 10:36:02,808::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.242220). Check your callbacks.
2020-12-21 10:36:05,938::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:36:13,015::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:36:46,003::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.209 - Accuracy: 67.1% 
2020-12-21 10:37:00,708::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:37:24,605::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.250227). Check your callbacks.
2020-12-21 10:37:24,989::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.228207). Check your callbacks.
2020-12-21 10:37:25,420::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.249726). Check your callbacks.
2020-12-21 10:37:25,911::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.271246). Check your callbacks.
2020-12-21 10:37:26,471::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.271747). Check your callbacks.
2020-12-21 10:37:27,075::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.272247). Check your callbacks.
2020-12-21 10:37:31,860::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.335304). Check your callbacks.
2020-12-21 10:37:39,791::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.350818). Check your callbacks.
2020-12-21 10:37:43,553::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.363830). Check your callbacks.
2020-12-21 10:37:44,088::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.363830). Check your callbacks.
2020-12-21 10:37:44,683::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.372338). Check your callbacks.
2020-12-21 10:37:52,635::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.355322). Check your callbacks.
2020-12-21 10:37:53,185::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.355322). Check your callbacks.
2020-12-21 10:37:57,298::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.348816). Check your callbacks.
2020-12-21 10:38:01,429::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.338307). Check your callbacks.
2020-12-21 10:38:01,520::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.303776). Check your callbacks.
2020-12-21 10:38:01,604::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.255732). Check your callbacks.
2020-12-21 10:38:01,687::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.128617). Check your callbacks.
2020-12-21 10:38:04,515::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:38:14,675::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:38:45,075::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.206 - Accuracy: 67.3% 
2020-12-21 10:38:59,973::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:39:22,413::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.201182). Check your callbacks.
2020-12-21 10:39:22,779::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.204185). Check your callbacks.
2020-12-21 10:39:23,202::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.207188). Check your callbacks.
2020-12-21 10:39:23,658::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.230709). Check your callbacks.
2020-12-21 10:39:24,155::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.254230). Check your callbacks.
2020-12-21 10:39:24,741::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.258735). Check your callbacks.
2020-12-21 10:39:25,346::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.263239). Check your callbacks.
2020-12-21 10:39:30,192::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.299772). Check your callbacks.
2020-12-21 10:39:38,625::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.341310). Check your callbacks.
2020-12-21 10:39:41,321::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.370836). Check your callbacks.
2020-12-21 10:39:41,887::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.376842). Check your callbacks.
2020-12-21 10:39:42,473::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.380345). Check your callbacks.
2020-12-21 10:39:50,263::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.374339). Check your callbacks.
2020-12-21 10:39:50,902::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.365832). Check your callbacks.
2020-12-21 10:39:51,467::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.365832). Check your callbacks.
2020-12-21 10:39:59,970::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.331300). Check your callbacks.
2020-12-21 10:40:00,054::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.282256). Check your callbacks.
2020-12-21 10:40:00,139::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.141128). Check your callbacks.
2020-12-21 10:40:00,223::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.127115). Check your callbacks.
2020-12-21 10:40:02,981::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:40:13,002::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:40:42,825::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.206 - Accuracy: 67.5% 
2020-12-21 10:40:57,593::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:41:22,017::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.268744). Check your callbacks.
2020-12-21 10:41:22,490::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.289262). Check your callbacks.
2020-12-21 10:41:22,679::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.261737). Check your callbacks.
2020-12-21 10:41:23,148::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.289262). Check your callbacks.
2020-12-21 10:41:23,728::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.296269). Check your callbacks.
2020-12-21 10:41:29,727::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.339808). Check your callbacks.
2020-12-21 10:41:41,442::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.367833). Check your callbacks.
2020-12-21 10:41:41,997::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.367833). Check your callbacks.
2020-12-21 10:41:42,594::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.367833). Check your callbacks.
2020-12-21 10:41:50,005::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.372838). Check your callbacks.
2020-12-21 10:41:54,903::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.344813). Check your callbacks.
2020-12-21 10:41:56,980::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.336305). Check your callbacks.
2020-12-21 10:42:01,663::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:42:10,782::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:42:44,878::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.208 - Accuracy: 67.0% 
2020-12-21 10:42:56,898::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:43:20,020::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.232711). Check your callbacks.
2020-12-21 10:43:20,486::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.236214). Check your callbacks.
2020-12-21 10:43:20,967::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.257233). Check your callbacks.
2020-12-21 10:43:21,447::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.278252). Check your callbacks.
2020-12-21 10:43:22,005::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.278753). Check your callbacks.
2020-12-21 10:43:22,601::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.279253). Check your callbacks.
2020-12-21 10:43:32,783::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.320791). Check your callbacks.
2020-12-21 10:43:34,452::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.328298). Check your callbacks.
2020-12-21 10:43:35,046::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.341810). Check your callbacks.
2020-12-21 10:43:38,719::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.366833). Check your callbacks.
2020-12-21 10:43:39,282::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.374840). Check your callbacks.
2020-12-21 10:43:39,903::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.379344). Check your callbacks.
2020-12-21 10:43:48,226::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.382347). Check your callbacks.
2020-12-21 10:43:56,917::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.379344). Check your callbacks.
2020-12-21 10:43:57,170::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.371837). Check your callbacks.
2020-12-21 10:43:57,489::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.350818). Check your callbacks.
2020-12-21 10:43:57,579::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.229208). Check your callbacks.
2020-12-21 10:44:00,902::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:44:07,936::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:44:41,443::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.207 - Accuracy: 67.3% 
2020-12-21 10:44:56,018::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:45:20,940::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.227706). Check your callbacks.
2020-12-21 10:45:21,103::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.182165). Check your callbacks.
2020-12-21 10:45:21,517::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.227706). Check your callbacks.
2020-12-21 10:45:21,978::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.273248). Check your callbacks.
2020-12-21 10:45:22,452::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.290764). Check your callbacks.
2020-12-21 10:45:22,999::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.308279). Check your callbacks.
2020-12-21 10:45:23,589::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.311282). Check your callbacks.
2020-12-21 10:45:35,463::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.332302). Check your callbacks.
2020-12-21 10:45:40,012::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.352820). Check your callbacks.
2020-12-21 10:45:40,503::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.352820). Check your callbacks.
2020-12-21 10:45:41,053::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.357825). Check your callbacks.
2020-12-21 10:45:48,407::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.358825). Check your callbacks.
2020-12-21 10:45:48,956::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.357825). Check your callbacks.
2020-12-21 10:45:55,918::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.320290). Check your callbacks.
2020-12-21 10:45:56,042::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.292265). Check your callbacks.
2020-12-21 10:45:56,181::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.240718). Check your callbacks.
2020-12-21 10:45:59,760::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:46:06,802::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:46:44,464::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.207 - Accuracy: 67.3% 
2020-12-21 10:46:53,124::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:47:18,091::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.140627). Check your callbacks.
2020-12-21 10:47:18,464::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.194176). Check your callbacks.
2020-12-21 10:47:18,769::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.189172). Check your callbacks.
2020-12-21 10:47:19,204::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.194176). Check your callbacks.
2020-12-21 10:47:19,691::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.215696). Check your callbacks.
2020-12-21 10:47:20,281::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.237215). Check your callbacks.
2020-12-21 10:47:20,872::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.253730). Check your callbacks.
2020-12-21 10:47:22,429::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.285259). Check your callbacks.
2020-12-21 10:47:37,347::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.353321). Check your callbacks.
2020-12-21 10:47:37,861::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.353321). Check your callbacks.
2020-12-21 10:47:38,380::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.356824). Check your callbacks.
2020-12-21 10:47:38,947::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.374840). Check your callbacks.
2020-12-21 10:47:45,555::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.334804). Check your callbacks.
2020-12-21 10:47:46,090::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.334804). Check your callbacks.
2020-12-21 10:47:46,540::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.328298). Check your callbacks.
2020-12-21 10:47:46,982::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.319290). Check your callbacks.
2020-12-21 10:47:48,007::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.308780). Check your callbacks.
2020-12-21 10:47:53,267::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.240718). Check your callbacks.
2020-12-21 10:47:53,417::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.224203). Check your callbacks.
2020-12-21 10:47:56,985::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:48:04,051::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:48:37,685::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.208 - Accuracy: 67.2% 
2020-12-21 10:48:51,811::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:49:11,930::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.297770). Check your callbacks.
2020-12-21 10:49:12,412::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.286260). Check your callbacks.
2020-12-21 10:49:15,874::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.255231). Check your callbacks.
2020-12-21 10:49:16,266::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.247725). Check your callbacks.
2020-12-21 10:49:16,745::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.255231). Check your callbacks.
2020-12-21 10:49:17,305::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.270746). Check your callbacks.
2020-12-21 10:49:17,910::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.286260). Check your callbacks.
2020-12-21 10:49:33,832::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.339808). Check your callbacks.
2020-12-21 10:49:34,335::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.339808). Check your callbacks.
2020-12-21 10:49:34,853::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.339808). Check your callbacks.
2020-12-21 10:49:35,339::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.339808). Check your callbacks.
2020-12-21 10:49:35,869::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.336805). Check your callbacks.
2020-12-21 10:49:36,437::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.336805). Check your callbacks.
2020-12-21 10:49:51,822::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.330800). Check your callbacks.
2020-12-21 10:49:51,990::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.314785). Check your callbacks.
2020-12-21 10:49:53,694::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.233712). Check your callbacks.
2020-12-21 10:49:53,777::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.153639). Check your callbacks.
2020-12-21 10:49:55,461::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:50:02,563::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:50:36,905::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.209 - Accuracy: 67.1% 
2020-12-21 10:50:49,686::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:51:10,063::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.286260). Check your callbacks.
2020-12-21 10:51:10,569::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.296268). Check your callbacks.
2020-12-21 10:51:13,964::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.260236). Check your callbacks.
2020-12-21 10:51:14,436::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.274749). Check your callbacks.
2020-12-21 10:51:14,899::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.288261). Check your callbacks.
2020-12-21 10:51:15,440::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.288762). Check your callbacks.
2020-12-21 10:51:16,036::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.289262). Check your callbacks.
2020-12-21 10:51:32,416::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.321792). Check your callbacks.
2020-12-21 10:51:32,824::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.321792). Check your callbacks.
2020-12-21 10:51:33,221::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.321291). Check your callbacks.
2020-12-21 10:51:33,650::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.314285). Check your callbacks.
2020-12-21 10:51:34,163::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.302274). Check your callbacks.
2020-12-21 10:51:34,789::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.302274). Check your callbacks.
2020-12-21 10:51:49,377::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.321291). Check your callbacks.
2020-12-21 10:51:51,646::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.228707). Check your callbacks.
2020-12-21 10:51:51,734::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.105095). Check your callbacks.
2020-12-21 10:51:53,062::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:52:02,686::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:52:33,084::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.208 - Accuracy: 67.1% 
2020-12-21 10:52:47,980::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:53:12,092::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.251228). Check your callbacks.
2020-12-21 10:53:12,492::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.250227). Check your callbacks.
2020-12-21 10:53:12,955::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.251228). Check your callbacks.
2020-12-21 10:53:13,512::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.276251). Check your callbacks.
2020-12-21 10:53:14,077::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.301273). Check your callbacks.
2020-12-21 10:53:14,681::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.325295). Check your callbacks.
2020-12-21 10:53:20,054::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.348316). Check your callbacks.
2020-12-21 10:53:28,096::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.357824). Check your callbacks.
2020-12-21 10:53:31,282::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.383848). Check your callbacks.
2020-12-21 10:53:31,857::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.383848). Check your callbacks.
2020-12-21 10:53:32,487::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.383848). Check your callbacks.
2020-12-21 10:53:39,648::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.378844). Check your callbacks.
2020-12-21 10:53:40,217::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.378844). Check your callbacks.
2020-12-21 10:53:43,161::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.365331). Check your callbacks.
2020-12-21 10:53:47,981::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.269745). Check your callbacks.
2020-12-21 10:53:48,072::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.239217). Check your callbacks.
2020-12-21 10:53:48,155::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.197179). Check your callbacks.
2020-12-21 10:53:49,560::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:53:56,551::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:54:28,790::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.208 - Accuracy: 66.8% 
2020-12-21 10:54:31,920::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 10:54:32,406::DEBUG::root::ML_Identification.py::651::[WARN]  |-> Reached max epoch of 100!
2020-12-21 10:54:33,093::DEBUG::root::ML_Identification.py::651::[TRAIN] V
2020-12-21 10:54:33,461::DEBUG::root::ML_Identification.py::651::[TRAIN] Done!

2020-12-21 10:54:33,711::DEBUG::root::ML_Identification.py::651::[INFO] Training complete after 196 minutes 31 seconds.

2020-12-21 10:54:33,948::DEBUG::root::ML_Identification.py::651::[SAVE] Saving model... 
2020-12-21 10:54:34,315::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 10:54:34,477::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 10:54:34,544::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 10:54:34,589::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 10:54:34,799::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 10:54:35,092::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 10:54:35,255::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 10:54:35,319::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 10:54:35,338::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 10:54:35,585::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 10:54:35,830::DEBUG::root::ML_Identification.py::651::[INFO] Deleting model and freeing GPU memory... 
2020-12-21 10:54:37,488::DEBUG::root::ML_Identification.py::651::[WARN] Model does not exist! Will now train and save.

2020-12-21 10:54:37,725::DEBUG::root::ML_Identification.py::651::[INIT] Initialising dataset... 
2020-12-21 10:54:38,002::DEBUG::root::ML_Identification.py::651::[INIT] Generating model (input shape = (128, 128, 1), classes = 18, optimizer: Adamax)... 
2020-12-21 10:54:38,992::DEBUG::root::ML_Identification.py::651::[TRAIN] Training...
2020-12-21 10:54:38,992::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 10:54:38,993::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Dataset             : Dataset(3, [0, 0, (0, 1), 0], [0], 128, 128, 64, False).
2020-12-21 10:54:38,993::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Success Condition   : A loss of 0.001.
2020-12-21 10:54:38,993::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Terminate Condition : Reaching epoch 100 or 5 consecutive epochs of stagnation.
2020-12-21 10:54:38,994::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 10:54:38,994::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Training 
2020-12-21 10:54:47,869::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:55:12,317::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.101092). Check your callbacks.
2020-12-21 10:55:12,719::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.190173). Check your callbacks.
2020-12-21 10:55:12,897::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.108599). Check your callbacks.
2020-12-21 10:55:13,337::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.190173). Check your callbacks.
2020-12-21 10:55:13,818::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.218198). Check your callbacks.
2020-12-21 10:55:14,389::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.246223). Check your callbacks.
2020-12-21 10:55:14,930::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.274249). Check your callbacks.
2020-12-21 10:55:20,152::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.311282). Check your callbacks.
2020-12-21 10:55:30,928::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.348316). Check your callbacks.
2020-12-21 10:55:31,565::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.348316). Check your callbacks.
2020-12-21 10:55:32,073::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.348316). Check your callbacks.
2020-12-21 10:55:32,649::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.359326). Check your callbacks.
2020-12-21 10:55:39,386::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.360827). Check your callbacks.
2020-12-21 10:55:39,917::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.360827). Check your callbacks.
2020-12-21 10:55:40,475::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.350318). Check your callbacks.
2020-12-21 10:55:41,083::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.350318). Check your callbacks.
2020-12-21 10:55:52,587::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.346314). Check your callbacks.
2020-12-21 10:55:52,932::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.346314). Check your callbacks.
2020-12-21 10:55:53,358::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.334303). Check your callbacks.
2020-12-21 10:55:53,876::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.334303). Check your callbacks.
2020-12-21 10:55:54,459::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.340309). Check your callbacks.
2020-12-21 10:56:02,979::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.338307). Check your callbacks.
2020-12-21 10:56:03,594::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.338307). Check your callbacks.
2020-12-21 10:56:04,209::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.338307). Check your callbacks.
2020-12-21 10:56:11,738::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.365331). Check your callbacks.
2020-12-21 10:56:12,301::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.370836). Check your callbacks.
2020-12-21 10:56:12,864::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.354822). Check your callbacks.
2020-12-21 10:56:13,437::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.369835). Check your callbacks.
2020-12-21 10:56:29,826::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.369335). Check your callbacks.
2020-12-21 10:56:30,393::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.354822). Check your callbacks.
2020-12-21 10:56:30,988::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.354822). Check your callbacks.
2020-12-21 10:56:33,927::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.352820). Check your callbacks.
2020-12-21 10:56:34,235::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.349317). Check your callbacks.
2020-12-21 10:56:34,690::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.328798). Check your callbacks.
2020-12-21 10:56:35,215::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.321291). Check your callbacks.
2020-12-21 10:56:35,826::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.321291). Check your callbacks.
2020-12-21 10:56:42,704::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.293766). Check your callbacks.
2020-12-21 10:56:49,391::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.245723). Check your callbacks.
2020-12-21 10:56:49,639::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.245723). Check your callbacks.
2020-12-21 10:56:49,761::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.245723). Check your callbacks.
2020-12-21 10:56:51,013::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.163648). Check your callbacks.
2020-12-21 10:56:51,096::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.110100). Check your callbacks.
2020-12-21 10:56:51,199::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:56:59,222::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:57:31,825::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.327 - Accuracy: 51.9% 
2020-12-21 10:57:46,236::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:58:10,110::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.253229). Check your callbacks.
2020-12-21 10:58:10,504::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.242220). Check your callbacks.
2020-12-21 10:58:10,977::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.261737). Check your callbacks.
2020-12-21 10:58:11,502::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.281255). Check your callbacks.
2020-12-21 10:58:12,128::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.290263). Check your callbacks.
2020-12-21 10:58:21,949::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.354321). Check your callbacks.
2020-12-21 10:58:29,309::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.380846). Check your callbacks.
2020-12-21 10:58:29,916::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.385850). Check your callbacks.
2020-12-21 10:58:30,516::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.383348). Check your callbacks.
2020-12-21 10:58:37,637::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.379845). Check your callbacks.
2020-12-21 10:58:38,184::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.379845). Check your callbacks.
2020-12-21 10:58:38,793::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.383348). Check your callbacks.
2020-12-21 10:58:47,480::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.362829). Check your callbacks.
2020-12-21 10:58:47,993::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.348817). Check your callbacks.
2020-12-21 10:58:48,508::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.336806). Check your callbacks.
2020-12-21 10:58:49,030::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.333803). Check your callbacks.
2020-12-21 10:58:49,538::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.328798). Check your callbacks.
2020-12-21 10:58:50,138::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.333803). Check your callbacks.
2020-12-21 10:59:02,243::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.328798). Check your callbacks.
2020-12-21 10:59:02,856::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.331301). Check your callbacks.
2020-12-21 10:59:03,511::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.331801). Check your callbacks.
2020-12-21 10:59:04,057::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.335304). Check your callbacks.
2020-12-21 10:59:10,808::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.334303). Check your callbacks.
2020-12-21 10:59:11,075::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.334303). Check your callbacks.
2020-12-21 10:59:11,206::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.334303). Check your callbacks.
2020-12-21 10:59:11,624::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.317788). Check your callbacks.
2020-12-21 10:59:12,190::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.327797). Check your callbacks.
2020-12-21 10:59:12,789::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.327797). Check your callbacks.
2020-12-21 10:59:26,431::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.324795). Check your callbacks.
2020-12-21 10:59:26,981::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.344312). Check your callbacks.
2020-12-21 10:59:27,583::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.352820). Check your callbacks.
2020-12-21 10:59:29,865::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.358826). Check your callbacks.
2020-12-21 10:59:30,373::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.358826). Check your callbacks.
2020-12-21 10:59:30,970::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.362829). Check your callbacks.
2020-12-21 10:59:38,274::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.365332). Check your callbacks.
2020-12-21 10:59:38,762::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.365332). Check your callbacks.
2020-12-21 10:59:47,357::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.311282). Check your callbacks.
2020-12-21 10:59:47,599::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.311282). Check your callbacks.
2020-12-21 10:59:47,684::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.161146). Check your callbacks.
2020-12-21 10:59:49,655::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 10:59:56,904::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:00:29,868::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.265 - Accuracy: 62.8% 
2020-12-21 11:00:44,653::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:01:10,478::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.144130). Check your callbacks.
2020-12-21 11:01:10,803::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.176660). Check your callbacks.
2020-12-21 11:01:11,190::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.209190). Check your callbacks.
2020-12-21 11:01:11,649::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.227706). Check your callbacks.
2020-12-21 11:01:12,128::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.246223). Check your callbacks.
2020-12-21 11:01:12,699::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.267242). Check your callbacks.
2020-12-21 11:01:13,277::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.288261). Check your callbacks.
2020-12-21 11:01:13,823::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.290263). Check your callbacks.
2020-12-21 11:01:14,417::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.306278). Check your callbacks.
2020-12-21 11:01:29,700::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.370336). Check your callbacks.
2020-12-21 11:01:30,283::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.378343). Check your callbacks.
2020-12-21 11:01:30,876::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.378343). Check your callbacks.
2020-12-21 11:01:31,479::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.381846). Check your callbacks.
2020-12-21 11:01:39,214::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.391106). Check your callbacks.
2020-12-21 11:01:39,846::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.394858). Check your callbacks.
2020-12-21 11:01:40,454::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.394858). Check your callbacks.
2020-12-21 11:01:41,173::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.397861). Check your callbacks.
2020-12-21 11:01:41,989::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.397861). Check your callbacks.
2020-12-21 11:01:42,589::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.397861). Check your callbacks.
2020-12-21 11:01:49,941::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.395358). Check your callbacks.
2020-12-21 11:01:50,523::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.390354). Check your callbacks.
2020-12-21 11:01:51,158::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.385850). Check your callbacks.
2020-12-21 11:02:06,421::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.371837). Check your callbacks.
2020-12-21 11:02:07,091::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.366833). Check your callbacks.
2020-12-21 11:02:07,616::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.361079). Check your callbacks.
2020-12-21 11:02:08,836::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.346566). Check your callbacks.
2020-12-21 11:02:09,310::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.340060). Check your callbacks.
2020-12-21 11:02:09,816::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.336305). Check your callbacks.
2020-12-21 11:02:10,296::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.333803). Check your callbacks.
2020-12-21 11:02:10,900::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.333803). Check your callbacks.
2020-12-21 11:02:30,498::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.289262). Check your callbacks.
2020-12-21 11:02:31,363::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.235714). Check your callbacks.
2020-12-21 11:02:31,726::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.196178). Check your callbacks.
2020-12-21 11:02:32,805::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.196178). Check your callbacks.
2020-12-21 11:02:33,312::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.196178). Check your callbacks.
2020-12-21 11:02:33,856::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.196178). Check your callbacks.
2020-12-21 11:02:34,415::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.215696). Check your callbacks.
2020-12-21 11:02:46,068::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.250227). Check your callbacks.
2020-12-21 11:02:48,372::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.181164). Check your callbacks.
2020-12-21 11:02:49,019::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:02:56,249::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:03:28,849::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.241 - Accuracy: 65.4% 
2020-12-21 11:03:43,582::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:04:03,722::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.230209). Check your callbacks.
2020-12-21 11:04:04,188::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.230209). Check your callbacks.
2020-12-21 11:04:04,608::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.230209). Check your callbacks.
2020-12-21 11:04:08,722::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.230209). Check your callbacks.
2020-12-21 11:04:09,204::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.230209). Check your callbacks.
2020-12-21 11:04:09,745::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.238717). Check your callbacks.
2020-12-21 11:04:10,331::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.247224). Check your callbacks.
2020-12-21 11:04:26,398::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.293766). Check your callbacks.
2020-12-21 11:04:26,788::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.293766). Check your callbacks.
2020-12-21 11:04:27,155::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.293766). Check your callbacks.
2020-12-21 11:04:27,594::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.276751). Check your callbacks.
2020-12-21 11:04:28,099::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.276751). Check your callbacks.
2020-12-21 11:04:28,676::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.276751). Check your callbacks.
2020-12-21 11:04:34,670::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.276751). Check your callbacks.
2020-12-21 11:04:40,129::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.377342). Check your callbacks.
2020-12-21 11:04:49,143::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.377342). Check your callbacks.
2020-12-21 11:04:49,473::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.377342). Check your callbacks.
2020-12-21 11:04:50,655::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.334804). Check your callbacks.
2020-12-21 11:04:51,190::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.330800). Check your callbacks.
2020-12-21 11:04:51,800::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.330800). Check your callbacks.
2020-12-21 11:04:58,135::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.314785). Check your callbacks.
2020-12-21 11:05:03,288::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.352319). Check your callbacks.
2020-12-21 11:05:08,297::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.352319). Check your callbacks.
2020-12-21 11:05:08,871::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.357824). Check your callbacks.
2020-12-21 11:05:09,420::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.358325). Check your callbacks.
2020-12-21 11:05:10,014::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.358325). Check your callbacks.
2020-12-21 11:05:17,508::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.358325). Check your callbacks.
2020-12-21 11:05:23,248::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.360827). Check your callbacks.
2020-12-21 11:05:28,462::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.360827). Check your callbacks.
2020-12-21 11:05:28,766::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.359326). Check your callbacks.
2020-12-21 11:05:29,150::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.342811). Check your callbacks.
2020-12-21 11:05:29,610::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.304776). Check your callbacks.
2020-12-21 11:05:29,819::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.260736). Check your callbacks.
2020-12-21 11:05:30,346::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.260736). Check your callbacks.
2020-12-21 11:05:39,757::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.260736). Check your callbacks.
2020-12-21 11:05:44,570::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.206187). Check your callbacks.
2020-12-21 11:05:45,630::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.186669). Check your callbacks.
2020-12-21 11:05:45,718::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.100091). Check your callbacks.
2020-12-21 11:05:46,818::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:05:53,994::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:06:27,694::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.233 - Accuracy: 65.8% 
2020-12-21 11:06:42,197::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:07:05,328::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.108598). Check your callbacks.
2020-12-21 11:07:05,737::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.185168). Check your callbacks.
2020-12-21 11:07:06,192::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.216196). Check your callbacks.
2020-12-21 11:07:06,757::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.247224). Check your callbacks.
2020-12-21 11:07:07,362::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.260236). Check your callbacks.
2020-12-21 11:07:08,080::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.273248). Check your callbacks.
2020-12-21 11:07:10,574::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.309281). Check your callbacks.
2020-12-21 11:07:23,968::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.373839). Check your callbacks.
2020-12-21 11:07:24,498::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.373839). Check your callbacks.
2020-12-21 11:07:25,061::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.373839). Check your callbacks.
2020-12-21 11:07:25,591::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.370336). Check your callbacks.
2020-12-21 11:07:26,183::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.364831). Check your callbacks.
2020-12-21 11:07:33,044::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.355322). Check your callbacks.
2020-12-21 11:07:33,750::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.355322). Check your callbacks.
2020-12-21 11:07:34,344::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.355322). Check your callbacks.
2020-12-21 11:07:46,644::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.355322). Check your callbacks.
2020-12-21 11:07:46,977::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.355322). Check your callbacks.
2020-12-21 11:07:47,431::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.313284). Check your callbacks.
2020-12-21 11:07:47,952::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.307779). Check your callbacks.
2020-12-21 11:07:48,578::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.307779). Check your callbacks.
2020-12-21 11:07:57,356::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.307779). Check your callbacks.
2020-12-21 11:07:59,059::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.388352). Check your callbacks.
2020-12-21 11:08:06,511::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.388352). Check your callbacks.
2020-12-21 11:08:11,994::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.377843). Check your callbacks.
2020-12-21 11:08:12,478::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.359326). Check your callbacks.
2020-12-21 11:08:13,004::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.342311). Check your callbacks.
2020-12-21 11:08:13,632::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.342311). Check your callbacks.
2020-12-21 11:08:21,480::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.337306). Check your callbacks.
2020-12-21 11:08:23,060::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.339808). Check your callbacks.
2020-12-21 11:08:23,660::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.339808). Check your callbacks.
2020-12-21 11:08:24,226::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.342811). Check your callbacks.
2020-12-21 11:08:24,812::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.350818). Check your callbacks.
2020-12-21 11:08:31,325::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.370336). Check your callbacks.
2020-12-21 11:08:31,916::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.370336). Check your callbacks.
2020-12-21 11:08:38,734::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.370336). Check your callbacks.
2020-12-21 11:08:43,483::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.360827). Check your callbacks.
2020-12-21 11:08:43,755::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.323794). Check your callbacks.
2020-12-21 11:08:45,032::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:08:52,202::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:09:23,549::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.229 - Accuracy: 65.8% 
2020-12-21 11:09:38,265::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:10:01,785::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.229708). Check your callbacks.
2020-12-21 11:10:02,199::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.249226). Check your callbacks.
2020-12-21 11:10:02,691::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.261737). Check your callbacks.
2020-12-21 11:10:03,246::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.274249). Check your callbacks.
2020-12-21 11:10:03,821::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.292265). Check your callbacks.
2020-12-21 11:10:04,320::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.289262). Check your callbacks.
2020-12-21 11:10:08,127::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.329799). Check your callbacks.
2020-12-21 11:10:16,196::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.325295). Check your callbacks.
2020-12-21 11:10:16,799::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.344813). Check your callbacks.
2020-12-21 11:10:21,010::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.356323). Check your callbacks.
2020-12-21 11:10:21,602::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.366832). Check your callbacks.
2020-12-21 11:10:28,697::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.360827). Check your callbacks.
2020-12-21 11:10:29,334::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.360327). Check your callbacks.
2020-12-21 11:10:29,872::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.352320). Check your callbacks.
2020-12-21 11:10:30,482::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.363329). Check your callbacks.
2020-12-21 11:10:35,592::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.380845). Check your callbacks.
2020-12-21 11:10:42,189::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.352320). Check your callbacks.
2020-12-21 11:10:42,700::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.352320). Check your callbacks.
2020-12-21 11:10:43,311::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.368334). Check your callbacks.
2020-12-21 11:10:55,006::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.341310). Check your callbacks.
2020-12-21 11:10:55,630::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.329299). Check your callbacks.
2020-12-21 11:10:58,364::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.329299). Check your callbacks.
2020-12-21 11:10:58,955::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.341310). Check your callbacks.
2020-12-21 11:11:01,084::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.354322). Check your callbacks.
2020-12-21 11:11:01,664::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.354322). Check your callbacks.
2020-12-21 11:11:09,034::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.367333). Check your callbacks.
2020-12-21 11:11:17,917::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.367333). Check your callbacks.
2020-12-21 11:11:18,517::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.375841). Check your callbacks.
2020-12-21 11:11:22,719::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.309781). Check your callbacks.
2020-12-21 11:11:23,193::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.301273). Check your callbacks.
2020-12-21 11:11:23,740::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.301273). Check your callbacks.
2020-12-21 11:11:24,356::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.301273). Check your callbacks.
2020-12-21 11:11:35,326::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.291264). Check your callbacks.
2020-12-21 11:11:38,921::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.291264). Check your callbacks.
2020-12-21 11:11:39,700::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.257233). Check your callbacks.
2020-12-21 11:11:39,785::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.124113). Check your callbacks.
2020-12-21 11:11:40,686::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:11:47,953::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:12:20,923::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.225 - Accuracy: 65.9% 
2020-12-21 11:12:35,689::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:13:00,216::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.268744). Check your callbacks.
2020-12-21 11:13:00,612::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.256232). Check your callbacks.
2020-12-21 11:13:01,065::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.273248). Check your callbacks.
2020-12-21 11:13:01,625::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.290263). Check your callbacks.
2020-12-21 11:13:02,258::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.294767). Check your callbacks.
2020-12-21 11:13:07,963::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.331801). Check your callbacks.
2020-12-21 11:13:08,565::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.331801). Check your callbacks.
2020-12-21 11:13:19,500::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.379845). Check your callbacks.
2020-12-21 11:13:20,087::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.383848). Check your callbacks.
2020-12-21 11:13:20,645::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.373339). Check your callbacks.
2020-12-21 11:13:27,530::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.373339). Check your callbacks.
2020-12-21 11:13:28,125::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.383348). Check your callbacks.
2020-12-21 11:13:33,735::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.364330). Check your callbacks.
2020-12-21 11:13:34,279::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.360327). Check your callbacks.
2020-12-21 11:13:34,915::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.356323). Check your callbacks.
2020-12-21 11:13:35,506::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.356323). Check your callbacks.
2020-12-21 11:13:39,302::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.364330). Check your callbacks.
2020-12-21 11:13:39,891::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.370836). Check your callbacks.
2020-12-21 11:13:54,633::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.375340). Check your callbacks.
2020-12-21 11:13:59,395::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.370836). Check your callbacks.
2020-12-21 11:13:59,964::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.359826). Check your callbacks.
2020-12-21 11:14:00,312::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.346815). Check your callbacks.
2020-12-21 11:14:00,723::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.303275). Check your callbacks.
2020-12-21 11:14:01,206::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.289262). Check your callbacks.
2020-12-21 11:14:01,748::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.289262). Check your callbacks.
2020-12-21 11:14:02,376::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.289262). Check your callbacks.
2020-12-21 11:14:19,036::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.289262). Check your callbacks.
2020-12-21 11:14:19,404::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.289262). Check your callbacks.
2020-12-21 11:14:19,848::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.303776). Check your callbacks.
2020-12-21 11:14:20,357::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.322793). Check your callbacks.
2020-12-21 11:14:20,954::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.344813). Check your callbacks.
2020-12-21 11:14:26,424::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.332802). Check your callbacks.
2020-12-21 11:14:26,978::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.332802). Check your callbacks.
2020-12-21 11:14:27,597::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.318789). Check your callbacks.
2020-12-21 11:14:28,090::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.322292). Check your callbacks.
2020-12-21 11:14:35,065::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.322292). Check your callbacks.
2020-12-21 11:14:37,272::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.273248). Check your callbacks.
2020-12-21 11:14:37,363::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.215696). Check your callbacks.
2020-12-21 11:14:37,447::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.157143). Check your callbacks.
2020-12-21 11:14:38,874::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:14:49,079::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:15:19,355::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.223 - Accuracy: 65.9% 
2020-12-21 11:15:34,102::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:15:57,810::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.254231). Check your callbacks.
2020-12-21 11:15:57,985::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.225204). Check your callbacks.
2020-12-21 11:15:58,427::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.254231). Check your callbacks.
2020-12-21 11:15:58,960::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.283257). Check your callbacks.
2020-12-21 11:15:59,525::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.300272). Check your callbacks.
2020-12-21 11:16:13,057::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.368334). Check your callbacks.
2020-12-21 11:16:16,806::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.368334). Check your callbacks.
2020-12-21 11:16:17,356::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.368334). Check your callbacks.
2020-12-21 11:16:17,925::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.367834). Check your callbacks.
2020-12-21 11:16:25,111::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.363330). Check your callbacks.
2020-12-21 11:16:34,442::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.364831). Check your callbacks.
2020-12-21 11:16:36,766::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.364831). Check your callbacks.
2020-12-21 11:16:37,211::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.347315). Check your callbacks.
2020-12-21 11:16:37,667::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.333302). Check your callbacks.
2020-12-21 11:16:38,241::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.333302). Check your callbacks.
2020-12-21 11:16:49,929::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.333302). Check your callbacks.
2020-12-21 11:16:55,298::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.303775). Check your callbacks.
2020-12-21 11:16:57,944::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.303775). Check your callbacks.
2020-12-21 11:16:58,391::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.303775). Check your callbacks.
2020-12-21 11:16:58,905::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.303775). Check your callbacks.
2020-12-21 11:17:00,926::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.303775). Check your callbacks.
2020-12-21 11:17:13,386::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.327797). Check your callbacks.
2020-12-21 11:17:18,247::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.327797). Check your callbacks.
2020-12-21 11:17:18,702::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.327797). Check your callbacks.
2020-12-21 11:17:19,236::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.321292). Check your callbacks.
2020-12-21 11:17:19,847::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.321292). Check your callbacks.
2020-12-21 11:17:24,713::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.322293). Check your callbacks.
2020-12-21 11:17:34,303::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.311783). Check your callbacks.
2020-12-21 11:17:34,439::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.311783). Check your callbacks.
2020-12-21 11:17:34,564::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.311783). Check your callbacks.
2020-12-21 11:17:34,680::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.226705). Check your callbacks.
2020-12-21 11:17:37,297::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:17:44,588::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:18:16,756::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.221 - Accuracy: 65.9% 
2020-12-21 11:18:30,982::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:18:55,709::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.241219). Check your callbacks.
2020-12-21 11:18:56,097::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.237215). Check your callbacks.
2020-12-21 11:18:56,581::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.265240). Check your callbacks.
2020-12-21 11:18:57,113::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.293266). Check your callbacks.
2020-12-21 11:18:57,705::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.293266). Check your callbacks.
2020-12-21 11:18:58,302::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.293266). Check your callbacks.
2020-12-21 11:19:05,514::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.351819). Check your callbacks.
2020-12-21 11:19:14,948::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.369335). Check your callbacks.
2020-12-21 11:19:15,527::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.369335). Check your callbacks.
2020-12-21 11:19:16,112::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.369335). Check your callbacks.
2020-12-21 11:19:23,182::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.361328). Check your callbacks.
2020-12-21 11:19:25,887::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.361828). Check your callbacks.
2020-12-21 11:19:31,573::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.361828). Check your callbacks.
2020-12-21 11:19:34,049::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.363329). Check your callbacks.
2020-12-21 11:19:34,641::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.365332). Check your callbacks.
2020-12-21 11:19:35,250::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.374840). Check your callbacks.
2020-12-21 11:19:51,805::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.383848). Check your callbacks.
2020-12-21 11:19:52,403::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.383848). Check your callbacks.
2020-12-21 11:19:55,846::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.368334). Check your callbacks.
2020-12-21 11:19:56,241::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.342811). Check your callbacks.
2020-12-21 11:19:56,700::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.316787). Check your callbacks.
2020-12-21 11:19:57,247::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.316787). Check your callbacks.
2020-12-21 11:19:57,842::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.316787). Check your callbacks.
2020-12-21 11:20:12,926::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.366332). Check your callbacks.
2020-12-21 11:20:15,084::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.336805). Check your callbacks.
2020-12-21 11:20:15,577::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.336805). Check your callbacks.
2020-12-21 11:20:15,973::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.336805). Check your callbacks.
2020-12-21 11:20:16,428::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.336805). Check your callbacks.
2020-12-21 11:20:16,950::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.318789). Check your callbacks.
2020-12-21 11:20:17,543::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.318789). Check your callbacks.
2020-12-21 11:20:22,533::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.303275). Check your callbacks.
2020-12-21 11:20:32,247::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.291264). Check your callbacks.
2020-12-21 11:20:32,943::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.262238). Check your callbacks.
2020-12-21 11:20:33,532::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:20:42,062::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:21:14,912::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.22 - Accuracy: 66.1% 
2020-12-21 11:21:28,883::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:21:49,523::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.336305). Check your callbacks.
2020-12-21 11:21:53,634::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.308780). Check your callbacks.
2020-12-21 11:21:54,223::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.294267). Check your callbacks.
2020-12-21 11:21:54,761::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.312283). Check your callbacks.
2020-12-21 11:21:55,357::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.330299). Check your callbacks.
2020-12-21 11:21:55,964::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.336305). Check your callbacks.
2020-12-21 11:21:58,827::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.347815). Check your callbacks.
2020-12-21 11:22:10,593::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.363329). Check your callbacks.
2020-12-21 11:22:11,192::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.379844). Check your callbacks.
2020-12-21 11:22:12,599::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.379844). Check your callbacks.
2020-12-21 11:22:13,416::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.387351). Check your callbacks.
2020-12-21 11:22:21,363::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.355823). Check your callbacks.
2020-12-21 11:22:24,323::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.355823). Check your callbacks.
2020-12-21 11:22:30,061::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.357824). Check your callbacks.
2020-12-21 11:22:35,888::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.350818). Check your callbacks.
2020-12-21 11:22:36,439::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.350818). Check your callbacks.
2020-12-21 11:22:37,044::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.351819). Check your callbacks.
2020-12-21 11:22:43,654::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.360327). Check your callbacks.
2020-12-21 11:22:47,365::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.360327). Check your callbacks.
2020-12-21 11:22:48,541::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.351819). Check your callbacks.
2020-12-21 11:22:49,177::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.373839). Check your callbacks.
2020-12-21 11:22:54,930::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.366332). Check your callbacks.
2020-12-21 11:22:55,512::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.381346). Check your callbacks.
2020-12-21 11:23:02,799::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.366332). Check your callbacks.
2020-12-21 11:23:12,117::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.354822). Check your callbacks.
2020-12-21 11:23:12,712::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.344813). Check your callbacks.
2020-12-21 11:23:13,265::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.342811). Check your callbacks.
2020-12-21 11:23:14,348::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.296268). Check your callbacks.
2020-12-21 11:23:14,807::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.296268). Check your callbacks.
2020-12-21 11:23:15,041::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.290763). Check your callbacks.
2020-12-21 11:23:24,416::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.273247). Check your callbacks.
2020-12-21 11:23:29,632::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:23:36,760::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:24:11,828::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.218 - Accuracy: 66.3% 
2020-12-21 11:24:24,582::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:24:44,565::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.310282). Check your callbacks.
2020-12-21 11:24:48,018::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.300272). Check your callbacks.
2020-12-21 11:24:48,376::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.269745). Check your callbacks.
2020-12-21 11:24:48,908::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.300272). Check your callbacks.
2020-12-21 11:24:49,499::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.305277). Check your callbacks.
2020-12-21 11:25:01,039::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.358826). Check your callbacks.
2020-12-21 11:25:05,088::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.358826). Check your callbacks.
2020-12-21 11:25:05,666::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.369335). Check your callbacks.
2020-12-21 11:25:06,279::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.369335). Check your callbacks.
2020-12-21 11:25:06,815::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.369335). Check your callbacks.
2020-12-21 11:25:07,406::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.360827). Check your callbacks.
2020-12-21 11:25:25,842::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.349317). Check your callbacks.
2020-12-21 11:25:26,219::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.349317). Check your callbacks.
2020-12-21 11:25:29,362::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.277752). Check your callbacks.
2020-12-21 11:25:29,867::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.277752). Check your callbacks.
2020-12-21 11:25:30,456::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.277752). Check your callbacks.
2020-12-21 11:25:45,918::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.292265). Check your callbacks.
2020-12-21 11:25:46,433::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.321291). Check your callbacks.
2020-12-21 11:25:48,860::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.321291). Check your callbacks.
2020-12-21 11:25:52,444::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.306779). Check your callbacks.
2020-12-21 11:25:53,035::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.306779). Check your callbacks.
2020-12-21 11:25:53,616::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.306779). Check your callbacks.
2020-12-21 11:26:03,506::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.367834). Check your callbacks.
2020-12-21 11:26:04,286::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.375340). Check your callbacks.
2020-12-21 11:26:04,835::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.375340). Check your callbacks.
2020-12-21 11:26:12,841::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.375340). Check your callbacks.
2020-12-21 11:26:13,422::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.375340). Check your callbacks.
2020-12-21 11:26:18,340::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.362329). Check your callbacks.
2020-12-21 11:26:24,196::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.309280). Check your callbacks.
2020-12-21 11:26:24,311::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.235213). Check your callbacks.
2020-12-21 11:26:28,350::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:26:35,492::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:27:12,213::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.217 - Accuracy: 66.6% 
2020-12-21 11:27:23,975::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:27:49,514::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.240718). Check your callbacks.
2020-12-21 11:27:49,885::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.227206). Check your callbacks.
2020-12-21 11:27:50,274::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.236714). Check your callbacks.
2020-12-21 11:27:50,731::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.246223). Check your callbacks.
2020-12-21 11:27:51,232::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.263239). Check your callbacks.
2020-12-21 11:27:51,796::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.280254). Check your callbacks.
2020-12-21 11:27:52,390::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.283257). Check your callbacks.
2020-12-21 11:27:55,461::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.329299). Check your callbacks.
2020-12-21 11:28:08,790::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.372338). Check your callbacks.
2020-12-21 11:28:09,354::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.372338). Check your callbacks.
2020-12-21 11:28:09,968::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.379844). Check your callbacks.
2020-12-21 11:28:17,019::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.372338). Check your callbacks.
2020-12-21 11:28:17,513::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.361328). Check your callbacks.
2020-12-21 11:28:18,051::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.361328). Check your callbacks.
2020-12-21 11:28:18,704::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.351318). Check your callbacks.
2020-12-21 11:28:19,324::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.351318). Check your callbacks.
2020-12-21 11:28:28,123::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.360327). Check your callbacks.
2020-12-21 11:28:28,820::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.370836). Check your callbacks.
2020-12-21 11:28:29,418::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.372338). Check your callbacks.
2020-12-21 11:28:43,527::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.373839). Check your callbacks.
2020-12-21 11:28:44,188::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.372338). Check your callbacks.
2020-12-21 11:28:44,711::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.370836). Check your callbacks.
2020-12-21 11:28:45,383::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.370836). Check your callbacks.
2020-12-21 11:28:47,512::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.359826). Check your callbacks.
2020-12-21 11:28:47,980::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.357825). Check your callbacks.
2020-12-21 11:28:48,453::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.354321). Check your callbacks.
2020-12-21 11:28:48,974::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.336805). Check your callbacks.
2020-12-21 11:28:49,584::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.336805). Check your callbacks.
2020-12-21 11:29:09,982::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.278252). Check your callbacks.
2020-12-21 11:29:11,619::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.244722). Check your callbacks.
2020-12-21 11:29:12,175::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.244722). Check your callbacks.
2020-12-21 11:29:12,638::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.241219). Check your callbacks.
2020-12-21 11:29:13,135::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.241219). Check your callbacks.
2020-12-21 11:29:13,615::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.241219). Check your callbacks.
2020-12-21 11:29:14,063::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.254230). Check your callbacks.
2020-12-21 11:29:23,431::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.254230). Check your callbacks.
2020-12-21 11:29:25,949::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.193676). Check your callbacks.
2020-12-21 11:29:26,868::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:29:34,197::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:30:25,646::DEBUG::root::ML_Identification.py::651::[INFO] Optimizing parameter 'steps_per_epoch' across range '[1, 2, 4, 8, 16, 32, 64, 128, 256]'.

2020-12-21 11:30:25,647::DEBUG::root::ML_Identification.py::651::[WARN] Model exists but has not been trained! Will only load history.

2020-12-21 11:30:25,648::DEBUG::root::ML_Identification.py::651::[LOAD] Loading model... 
2020-12-21 11:30:25,673::DEBUG::root::ML_Identification.py::651::[WARN] Model exists but has not been trained! Will only load history.

2020-12-21 11:30:25,673::DEBUG::root::ML_Identification.py::651::[LOAD] Loading model... 
2020-12-21 11:30:25,694::DEBUG::root::ML_Identification.py::651::[WARN] Model exists but has not been trained! Will only load history.

2020-12-21 11:30:25,694::DEBUG::root::ML_Identification.py::651::[LOAD] Loading model... 
2020-12-21 11:30:25,714::DEBUG::root::ML_Identification.py::651::[WARN] Model exists but has not been trained! Will only load history.

2020-12-21 11:30:25,715::DEBUG::root::ML_Identification.py::651::[LOAD] Loading model... 
2020-12-21 11:30:25,736::DEBUG::root::ML_Identification.py::651::[WARN] Model exists but has not been trained! Will only load history.

2020-12-21 11:30:25,736::DEBUG::root::ML_Identification.py::651::[LOAD] Loading model... 
2020-12-21 11:30:25,740::DEBUG::root::ML_Identification.py::651::[WARN] Model exists but has not been trained! Will only load history.

2020-12-21 11:30:25,741::DEBUG::root::ML_Identification.py::651::[LOAD] Loading model... 
2020-12-21 11:30:25,744::DEBUG::root::ML_Identification.py::651::[WARN] Model does not exist! Will now train and save.

2020-12-21 11:30:25,745::DEBUG::root::ML_Identification.py::651::[INIT] Initialising dataset... 
2020-12-21 11:30:25,745::DEBUG::root::ML_Identification.py::651::[INIT] Generating model (input shape = (128, 128, 1), classes = 18, optimizer: Adamax)... 
2020-12-21 11:30:27,832::DEBUG::root::ML_Identification.py::651::[TRAIN] Training...
2020-12-21 11:30:27,833::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 11:30:27,833::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Dataset             : Dataset(3, [0, 0, (0, 1), 0], [0], 128, 128, 64, False).
2020-12-21 11:30:27,833::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Success Condition   : A loss of 0.001.
2020-12-21 11:30:27,834::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Terminate Condition : Reaching epoch 100 or 5 consecutive epochs of stagnation.
2020-12-21 11:30:27,834::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 11:30:27,834::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Training 
2020-12-21 11:30:35,154::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:30:58,351::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.217197). Check your callbacks.
2020-12-21 11:30:58,921::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.247725). Check your callbacks.
2020-12-21 11:30:59,566::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.278253). Check your callbacks.
2020-12-21 11:31:00,331::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.291264). Check your callbacks.
2020-12-21 11:31:04,175::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.291264). Check your callbacks.
2020-12-21 11:31:04,711::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.287261). Check your callbacks.
2020-12-21 11:31:05,344::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.295768). Check your callbacks.
2020-12-21 11:31:06,045::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.296769). Check your callbacks.
2020-12-21 11:31:06,833::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.314285). Check your callbacks.
2020-12-21 11:31:17,701::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.367333). Check your callbacks.
2020-12-21 11:31:18,506::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.367333). Check your callbacks.
2020-12-21 11:31:19,229::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.379344). Check your callbacks.
2020-12-21 11:31:20,015::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.384849). Check your callbacks.
2020-12-21 11:31:30,109::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.384849). Check your callbacks.
2020-12-21 11:31:31,574::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.379344). Check your callbacks.
2020-12-21 11:31:32,296::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.372338). Check your callbacks.
2020-12-21 11:31:32,994::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.366332). Check your callbacks.
2020-12-21 11:31:33,759::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.366332). Check your callbacks.
2020-12-21 11:31:37,472::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.366332). Check your callbacks.
2020-12-21 11:31:38,274::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.366332). Check your callbacks.
2020-12-21 11:31:38,980::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.366332). Check your callbacks.
2020-12-21 11:31:39,756::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.373839). Check your callbacks.
2020-12-21 11:31:58,157::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.379845). Check your callbacks.
2020-12-21 11:31:58,623::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.369335). Check your callbacks.
2020-12-21 11:31:58,852::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.348316). Check your callbacks.
2020-12-21 11:31:59,211::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.313284). Check your callbacks.
2020-12-21 11:31:59,698::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.262738). Check your callbacks.
2020-12-21 11:32:00,290::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.262738). Check your callbacks.
2020-12-21 11:32:00,954::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.262738). Check your callbacks.
2020-12-21 11:32:01,697::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.262738). Check your callbacks.
2020-12-21 11:32:20,516::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.214194). Check your callbacks.
2020-12-21 11:32:20,990::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.236214). Check your callbacks.
2020-12-21 11:32:22,367::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.246724). Check your callbacks.
2020-12-21 11:32:22,926::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.246724). Check your callbacks.
2020-12-21 11:32:23,524::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.246724). Check your callbacks.
2020-12-21 11:32:24,210::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.246724). Check your callbacks.
2020-12-21 11:32:25,423::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.270245). Check your callbacks.
2020-12-21 11:32:26,021::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.292265). Check your callbacks.
2020-12-21 11:32:36,090::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.292265). Check your callbacks.
2020-12-21 11:32:36,353::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.292265). Check your callbacks.
2020-12-21 11:32:38,710::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.157142). Check your callbacks.
2020-12-21 11:32:39,183::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:32:49,028::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:33:21,010::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.338 - Accuracy: 51.1% 
2020-12-21 11:33:35,143::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:33:58,409::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.231210). Check your callbacks.
2020-12-21 11:33:58,957::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.255231). Check your callbacks.
2020-12-21 11:33:59,589::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.279253). Check your callbacks.
2020-12-21 11:34:00,323::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.282757). Check your callbacks.
2020-12-21 11:34:04,343::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.255231). Check your callbacks.
2020-12-21 11:34:04,810::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.231210). Check your callbacks.
2020-12-21 11:34:05,310::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.236214). Check your callbacks.
2020-12-21 11:34:05,889::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.236214). Check your callbacks.
2020-12-21 11:34:18,773::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.353821). Check your callbacks.
2020-12-21 11:34:19,360::WARNING::tensorflow::callbacks.py::304::Method (on_train_batch_end) is slow compared to the batch update (0.353821). Check your callbacks.
2020-12-21 11:35:25,097::DEBUG::root::ML_Identification.py::651::[INFO] Optimizing parameter 'steps_per_epoch' across range '[1, 2, 4, 8, 16, 32, 64, 128, 256]'.

2020-12-21 11:35:25,098::DEBUG::root::ML_Identification.py::651::[WARN] Model does not exist! Will now train and save.

2020-12-21 11:35:25,098::DEBUG::root::ML_Identification.py::651::[INIT] Initialising dataset... 
2020-12-21 11:35:25,099::DEBUG::root::ML_Identification.py::651::[INIT] Generating model (input shape = (128, 128, 1), classes = 18, optimizer: Adamax)... 
2020-12-21 11:35:26,082::DEBUG::root::ML_Identification.py::651::[TRAIN] Training...
2020-12-21 11:35:26,082::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 11:35:26,083::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Dataset             : Dataset(3, [0, 0, (0, 1), 0], [0], 128, 128, 1, False).
2020-12-21 11:35:26,083::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Success Condition   : A loss of 0.001.
2020-12-21 11:35:26,084::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Terminate Condition : Reaching epoch 100 or 5 consecutive epochs of stagnation.
2020-12-21 11:35:26,084::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 11:35:26,085::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Training 
2020-12-21 11:35:33,527::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:35:43,246::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:35:52,940::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:36:05,189::WARNING::tensorflow::data_utils.py::521::multiprocessing can interact badly with TensorFlow, causing nondeterministic deadlocks. For high performance data pipelines tf.data is recommended.
2020-12-21 11:36:12,409::DEBUG::root::ML_Identification.py::651::[INFO] Optimizing parameter 'steps_per_epoch' across range '[1, 2, 4, 8, 16, 32, 64, 128, 256]'.

2020-12-21 11:36:12,410::DEBUG::root::ML_Identification.py::651::[WARN] Model does not exist! Will now train and save.

2020-12-21 11:36:12,410::DEBUG::root::ML_Identification.py::651::[INIT] Initialising dataset... 
2020-12-21 11:36:12,410::DEBUG::root::ML_Identification.py::651::[INIT] Generating model (input shape = (128, 128, 1), classes = 18, optimizer: Adamax)... 
2020-12-21 11:36:13,366::DEBUG::root::ML_Identification.py::651::[TRAIN] Training...
2020-12-21 11:36:13,367::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 11:36:13,367::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Dataset             : Dataset(3, [0, 0, (0, 1), 0], [0], 128, 128, 1, False).
2020-12-21 11:36:13,367::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Success Condition   : A loss of 0.001.
2020-12-21 11:36:13,368::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Terminate Condition : Reaching epoch 100 or 5 consecutive epochs of stagnation.
2020-12-21 11:36:13,368::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 11:36:13,368::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Training 
2020-12-21 11:36:51,787::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.453 - Accuracy: 42.3% 
2020-12-21 11:37:27,300::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.399 - Accuracy: 45.3% 
2020-12-21 11:37:58,399::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.408 - Accuracy: 46.9% 
2020-12-21 11:38:29,863::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.382 - Accuracy: 47.2% 
2020-12-21 11:39:00,746::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.401 - Accuracy: 45.4% 
2020-12-21 11:39:31,982::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.359 - Accuracy: 46.8% 
2020-12-21 11:40:03,186::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.38 - Accuracy: 47.6% 
2020-12-21 11:40:34,370::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.377 - Accuracy: 46.4% 
2020-12-21 11:41:05,390::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.364 - Accuracy: 48.8% 
2020-12-21 11:41:36,671::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.37 - Accuracy: 46.8% 
2020-12-21 11:42:07,618::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.368 - Accuracy: 48.4% 
2020-12-21 11:42:38,530::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.373 - Accuracy: 47.7% 
2020-12-21 11:43:09,346::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.362 - Accuracy: 47.8% 
2020-12-21 11:43:40,352::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.367 - Accuracy: 49.2% 
2020-12-21 11:44:11,461::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.362 - Accuracy: 47.6% 
2020-12-21 11:44:42,399::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.363 - Accuracy: 47.0% 
2020-12-21 11:45:13,357::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.366 - Accuracy: 50.3% 
2020-12-21 11:45:43,933::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.364 - Accuracy: 49.4% 
2020-12-21 11:46:14,924::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.324 - Accuracy: 51.1% 
2020-12-21 11:46:45,622::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.357 - Accuracy: 49.0% 
2020-12-21 11:47:16,198::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.356 - Accuracy: 50.2% 
2020-12-21 11:47:47,170::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.319 - Accuracy: 51.2% 
2020-12-21 11:48:18,109::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.326 - Accuracy: 50.9% 
2020-12-21 11:48:48,868::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.361 - Accuracy: 49.8% 
2020-12-21 11:49:19,900::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.333 - Accuracy: 50.0% 
2020-12-21 11:49:50,637::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.346 - Accuracy: 50.8% 
2020-12-21 11:50:21,178::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.318 - Accuracy: 51.6% 
2020-12-21 11:50:51,975::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.33 - Accuracy: 51.6% 
2020-12-21 11:51:23,049::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.341 - Accuracy: 52.2% 
2020-12-21 11:51:53,977::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.293 - Accuracy: 54.3% 
2020-12-21 11:52:24,826::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.328 - Accuracy: 51.2% 
2020-12-21 11:52:55,852::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.348 - Accuracy: 51.8% 
2020-12-21 11:53:26,967::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.307 - Accuracy: 51.8% 
2020-12-21 11:53:57,674::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.332 - Accuracy: 50.3% 
2020-12-21 11:54:28,504::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.315 - Accuracy: 54.0% 
2020-12-21 11:54:59,404::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.329 - Accuracy: 51.4% 
2020-12-21 11:55:30,127::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.308 - Accuracy: 53.2% 
2020-12-21 11:56:01,153::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.312 - Accuracy: 54.6% 
2020-12-21 11:56:31,956::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.323 - Accuracy: 54.0% 
2020-12-21 11:57:02,814::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.326 - Accuracy: 52.6% 
2020-12-21 11:57:33,566::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.329 - Accuracy: 52.9% 
2020-12-21 11:58:04,666::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.318 - Accuracy: 53.9% 
2020-12-21 11:58:35,585::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.321 - Accuracy: 52.1% 
2020-12-21 11:59:08,182::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.335 - Accuracy: 54.3% 
2020-12-21 11:59:41,415::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.319 - Accuracy: 54.8% 
2020-12-21 11:59:58,847::DEBUG::root::ML_Identification.py::651::[INFO] Optimizing parameter 'steps_per_epoch' across range '[1, 2, 4, 8, 16, 32, 64, 128, 256]'.

2020-12-21 11:59:58,847::DEBUG::root::ML_Identification.py::651::[WARN] Model does not exist! Will now train and save.

2020-12-21 11:59:58,852::DEBUG::root::ML_Identification.py::651::[INIT] Initialising dataset... 
2020-12-21 11:59:58,852::DEBUG::root::ML_Identification.py::651::[INIT] Generating model (input shape = (128, 128, 1), classes = 18, optimizer: Adamax)... 
2020-12-21 11:59:59,802::DEBUG::root::ML_Identification.py::651::[TRAIN] Training...
2020-12-21 11:59:59,802::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 11:59:59,802::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Dataset             : Dataset(3, [0, 0, (0, 1), 0], [0], 128, 128, 1, False).
2020-12-21 11:59:59,802::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Success Condition   : A loss of 0.001.
2020-12-21 11:59:59,802::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Terminate Condition : Reaching epoch 100 or 5 consecutive epochs of stagnation.
2020-12-21 11:59:59,803::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 11:59:59,803::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Training 
2020-12-21 12:00:36,538::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.429 - Accuracy: 43.5% 
2020-12-21 12:01:12,901::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.411 - Accuracy: 45.4% 
2020-12-21 12:01:46,339::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.424 - Accuracy: 45.5% 
2020-12-21 12:02:19,442::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.407 - Accuracy: 45.3% 
2020-12-21 12:02:50,955::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.388 - Accuracy: 46.9% 
2020-12-21 12:03:21,765::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.382 - Accuracy: 44.0% 
2020-12-21 12:03:52,348::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.384 - Accuracy: 46.1% 
2020-12-21 12:04:23,037::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.37 - Accuracy: 46.7% 
2020-12-21 12:04:53,811::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.357 - Accuracy: 46.6% 
2020-12-21 12:05:24,643::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.402 - Accuracy: 46.3% 
2020-12-21 12:05:55,772::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.374 - Accuracy: 47.1% 
2020-12-21 12:06:26,245::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.38 - Accuracy: 47.1% 
2020-12-21 12:06:56,930::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.353 - Accuracy: 47.9% 
2020-12-21 12:07:27,640::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.361 - Accuracy: 48.3% 
2020-12-21 12:07:58,066::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-2[0m Loss: 0.375 - Accuracy: 47.1% 
2020-12-21 12:08:28,908::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.332 - Accuracy: 48.9% 
2020-12-21 12:08:59,325::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-3[0m Loss: 0.357 - Accuracy: 49.1% 
2020-12-21 12:09:32,467::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.356 - Accuracy: 47.7% 
2020-12-21 12:10:03,500::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.346 - Accuracy: 48.3% 
2020-12-21 12:10:34,975::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [91m-4[0m Loss: 0.348 - Accuracy: 49.0% 
2020-12-21 12:10:34,976::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 12:10:34,977::DEBUG::root::ML_Identification.py::651::[WARN]  |-> Learning stagnated at epoch 20.
2020-12-21 12:10:34,977::DEBUG::root::ML_Identification.py::651::[TRAIN] V
2020-12-21 12:10:34,977::DEBUG::root::ML_Identification.py::651::[TRAIN] Done!

2020-12-21 12:10:34,977::DEBUG::root::ML_Identification.py::651::[INFO] Training complete after 10 minutes 36 seconds.

2020-12-21 12:10:34,978::DEBUG::root::ML_Identification.py::651::[SAVE] Saving model... 
2020-12-21 12:10:35,056::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:10:35,062::DEBUG::matplotlib.font_manager::font_manager.py::1334::findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-12-21 12:10:35,063::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-12-21 12:10:35,063::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,063::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,063::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,063::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,063::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,063::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,063::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,063::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,063::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2020-12-21 12:10:35,063::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,063::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-12-21 12:10:35,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2020-12-21 12:10:35,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,064::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-12-21 12:10:35,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2020-12-21 12:10:35,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2020-12-21 12:10:35,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 12:10:35,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT_IV50' (Amgdt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,065::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Blk BT' (swissk.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2020-12-21 12:10:35,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'BankGothic Md BT' (bgothm.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 2' (mtproxy2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,066::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Bold.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2020-12-21 12:10:35,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic_IV25.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 7' (mtproxy7.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT_IV25' (gdt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,067::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicG' (gothicg_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2020-12-21 12:10:35,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2020-12-21 12:10:35,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2020-12-21 12:10:35,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Ex BT' (swisseb.ttf) normal normal 700 expanded>) = 10.535
2020-12-21 12:10:35,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:10:35,068::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vineta BT' (vinet.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkEx BT' (swissek.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 12:10:35,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'EuroRoman' (eurr____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicE' (gothice_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2020-12-21 12:10:35,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkCn BT' (swissck.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,069::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:10:35,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swissc.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2020-12-21 12:10:35,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2020-12-21 12:10:35,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2020-12-21 12:10:35,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:10:35,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,070::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicI' (gothici_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 12:10:35,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:10:35,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,071::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic_IV50.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sansso__.ttf) oblique normal 400 normal>) = 11.05
2020-12-21 12:10:35,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'PanRoman' (panroman.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCTEUR' (isocteur.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,072::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Lt BT' (swissl.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2020-12-21 12:10:35,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CommercialScript BT' (comsc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,073::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 12:10:35,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicE' (gothice_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanC' (romanc__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2020-12-21 12:10:35,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2020-12-21 12:10:35,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2020-12-21 12:10:35,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:10:35,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,074::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Blk BT' (swisski.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 12:10:35,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2020-12-21 12:10:35,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2020-12-21 12:10:35,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2020-12-21 12:10:35,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Stylus BT' (stylu.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2020-12-21 12:10:35,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,075::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 12:10:35,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT' (AMGDT___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'BankGothic Lt BT' (bgothl.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,076::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Regular.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Technic' (technic_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AIGDT' (AIGDT___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,077::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 8' (mtproxy8.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanT' (romant__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:10:35,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,078::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtEx BT' (swissel.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 12:10:35,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SuperFrench' (supef___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CommercialPi BT' (compi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 9' (mtproxy9.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkOul BT' (swissko.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtCn BT' (swisscli.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 12:10:35,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,079::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,080::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCTEUR' (isocteur.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Technic' (technic_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Regular.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,081::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:10:35,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2020-12-21 12:10:35,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT' (gdt_____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2020-12-21 12:10:35,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2020-12-21 12:10:35,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2020-12-21 12:10:35,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2020-12-21 12:10:35,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ItalicT' (italict_.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,082::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2020-12-21 12:10:35,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ItalicT' (italict_.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2020-12-21 12:10:35,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,083::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'TechnicBold' (techb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AmdtSymbols' (AMDT_Symbols.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2020-12-21 12:10:35,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,084::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2020-12-21 12:10:35,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkEx BT' (swissek.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 12:10:35,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BdCnOul BT' (swisscbo.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2020-12-21 12:10:35,085::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CityBlueprint' (cityb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2020-12-21 12:10:35,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2020-12-21 12:10:35,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BdOul BT' (swissbo.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'PanRoman' (panroman.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'UniversalMath1 BT' (umath.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'TechnicLite' (techl___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanT' (romant__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Ex BT' (swisse.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 12:10:35,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,086::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romai___.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2020-12-21 12:10:35,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GOST Common' (GOST Common.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romai___.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romantic.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,087::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:10:35,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2020-12-21 12:10:35,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2020-12-21 12:10:35,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2020-12-21 12:10:35,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCPEUR' (isocpeui.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkCn BT' (swisscki.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 12:10:35,088::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'TechnicBold' (techb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 3' (mtproxy3.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2020-12-21 12:10:35,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2020-12-21 12:10:35,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2020-12-21 12:10:35,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 12:10:35,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2020-12-21 12:10:35,089::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 5' (mtproxy5.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GENISO' (GENISO.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanssbo_.ttf) oblique normal 700 normal>) = 11.335
2020-12-21 12:10:35,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2020-12-21 12:10:35,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,090::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monos.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,091::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkOul BT' (swissko.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCPEUR' (isocpeui.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2020-12-21 12:10:35,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 8' (mtproxy8.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vineta BT' (vinet.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanD' (romand__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,092::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AIGDT' (AIGDT___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AmdtSymbols' (AMDT_Symbols.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT_IV25' (Amgdt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT' (AMGDT___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCTEUR' (isocteui.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2020-12-21 12:10:35,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2020-12-21 12:10:35,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,093::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2020-12-21 12:10:35,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptC' (scriptc_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Lt BT' (swissli.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 12:10:35,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,094::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2020-12-21 12:10:35,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 1' (mtproxy1.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'EuroRoman' (eurro___.ttf) oblique normal 400 normal>) = 11.05
2020-12-21 12:10:35,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicI' (gothici_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkCn BT' (swissck.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swissci.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 12:10:35,095::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Ex BT' (swisseb.ttf) normal normal 700 expanded>) = 10.535
2020-12-21 12:10:35,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'UniversalMath1 BT' (umath.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanss___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ItalicC' (italicc_.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2020-12-21 12:10:35,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,096::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CountryBlueprint' (counb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 12:10:35,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Ex BT' (swisse.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 12:10:35,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'TechnicLite' (techl___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2020-12-21 12:10:35,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 12:10:35,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2020-12-21 12:10:35,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,097::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2020-12-21 12:10:35,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SuperFrench' (supef___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT_IV25' (Amgdt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 12:10:35,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swissci.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 12:10:35,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanssb__.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic_IV50.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2020-12-21 12:10:35,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:10:35,098::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GOST Common' (GOST Common Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Lt BT' (swissl.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 12:10:35,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2020-12-21 12:10:35,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Bold.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,099::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AcadEref' (AcadEref.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CountryBlueprint' (counb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CommercialScript BT' (comsc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic_IV25.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swiss.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,100::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 7' (mtproxy7.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swiss.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutch.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2020-12-21 12:10:35,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2020-12-21 12:10:35,101::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT_IV50' (gdt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanss___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 2' (mtproxy2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanssb__.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtCn BT' (swisscli.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 12:10:35,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 XBd BT' (dutcheb.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkCn BT' (swisscki.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 12:10:35,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 12:10:35,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,102::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCPEUR' (isocpeur.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GOST Common' (GOST Common Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2020-12-21 12:10:35,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutch.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT_IV25' (gdt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCPEUR' (isocpeur.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,103::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2020-12-21 12:10:35,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AcadEref' (AcadEref.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 6' (mtproxy6.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2020-12-21 12:10:35,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,104::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 12:10:35,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'EuroRoman' (eurr____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtCn BT' (swisscl.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2020-12-21 12:10:35,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 9' (mtproxy9.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic__.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,105::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 12:10:35,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romab___.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CityBlueprint' (cityb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,106::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT_IV50' (gdt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 12:10:35,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Stylus BT' (stylu.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2020-12-21 12:10:35,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtEx BT' (swissel.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 12:10:35,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2020-12-21 12:10:35,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 12:10:35,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,107::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,108::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2020-12-21 12:10:35,108::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,108::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 12:10:35,108::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,108::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,108::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swisscbi.ttf) italic normal 700 condensed>) = 11.535
2020-12-21 12:10:35,108::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 12:10:35,108::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,108::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 5' (mtproxy5.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,108::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,108::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,108::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,108::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,108::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2020-12-21 12:10:35,108::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,108::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,108::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,108::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,109::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,109::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,109::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,109::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,109::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,109::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,109::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BdCnOul BT' (swisscbo.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,109::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 12:10:35,109::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2020-12-21 12:10:35,109::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT_IV50' (Amgdt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,109::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,109::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,109::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 XBd BT' (dutcheb.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,109::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,109::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,109::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,109::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 1' (mtproxy1.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,109::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,110::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2020-12-21 12:10:35,110::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,110::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 3' (mtproxy3.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,110::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'BankGothic Md BT' (bgothm.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,110::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,110::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 4' (mtproxy4.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,110::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,110::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,110::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,110::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GOST Common' (GOST Common.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,110::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,110::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,110::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,110::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,110::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,110::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,110::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,110::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,111::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,111::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,111::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2020-12-21 12:10:35,111::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,111::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,111::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,111::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,111::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,111::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,111::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,111::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,111::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,111::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romab___.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,111::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,111::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,111::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,111::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swissc.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,111::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,112::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,112::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,112::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,112::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanD' (romand__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,112::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,112::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,112::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,112::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2020-12-21 12:10:35,112::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,112::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,112::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,112::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'EuroRoman' (eurro___.ttf) oblique normal 400 normal>) = 11.05
2020-12-21 12:10:35,112::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,112::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,112::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,112::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,112::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,112::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,113::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtCn BT' (swisscl.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,113::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,113::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,113::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,113::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,113::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,113::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,113::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,113::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,113::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,113::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,113::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,113::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,113::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,113::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,113::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2020-12-21 12:10:35,113::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Blk BT' (swissk.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,113::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,113::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,114::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,114::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,114::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,114::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,114::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,114::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,114::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,114::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,114::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,114::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,114::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,114::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romantic.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,114::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,114::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,114::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 4' (mtproxy4.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,114::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,114::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,114::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BdOul BT' (swissbo.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,115::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,115::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,115::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,115::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,115::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,115::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2020-12-21 12:10:35,115::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GENISO' (GENISO.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,115::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,115::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,115::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 12:10:35,115::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,115::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,115::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,115::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2020-12-21 12:10:35,115::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,115::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Blk BT' (swisski.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,115::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,116::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,116::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2020-12-21 12:10:35,116::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,116::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,116::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2020-12-21 12:10:35,116::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2020-12-21 12:10:35,116::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCTEUR' (isocteui.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,116::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT' (gdt_____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,116::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,116::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,116::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,116::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,116::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,116::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,116::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,116::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,116::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'BankGothic Lt BT' (bgothl.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,116::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,117::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,117::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,117::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,117::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,117::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,117::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,117::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,117::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,117::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2020-12-21 12:10:35,117::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,117::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,117::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,117::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,117::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,117::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swisscb.ttf) normal normal 700 condensed>) = 10.535
2020-12-21 12:10:35,117::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,117::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,117::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,118::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swisscbi.ttf) italic normal 700 condensed>) = 11.535
2020-12-21 12:10:35,118::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2020-12-21 12:10:35,118::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,118::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,118::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,118::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,118::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,118::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2020-12-21 12:10:35,118::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicG' (gothicg_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,118::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,118::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monos.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,118::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 6' (mtproxy6.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,118::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,118::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,118::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,118::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,118::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,118::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,119::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptC' (scriptc_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,119::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,119::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,119::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CommercialPi BT' (compi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,119::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sansso__.ttf) oblique normal 400 normal>) = 11.05
2020-12-21 12:10:35,119::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,119::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanssbo_.ttf) oblique normal 700 normal>) = 11.335
2020-12-21 12:10:35,119::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Lt BT' (swissli.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,119::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,119::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,119::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,119::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,119::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,119::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,119::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,119::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic__.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,119::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,119::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,120::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanC' (romanc__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,120::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,120::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swisscb.ttf) normal normal 700 condensed>) = 10.535
2020-12-21 12:10:35,120::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,120::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ItalicC' (italicc_.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,120::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:10:35,120::DEBUG::matplotlib.font_manager::font_manager.py::1366::findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\Jake\\miniconda3\\envs\\ML-GPU\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2020-12-21 12:10:35,173::DEBUG::matplotlib.font_manager::font_manager.py::1334::findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2020-12-21 12:10:35,173::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-12-21 12:10:35,173::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,173::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2020-12-21 12:10:35,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,174::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-12-21 12:10:35,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2020-12-21 12:10:35,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-12-21 12:10:35,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2020-12-21 12:10:35,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,175::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2020-12-21 12:10:35,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 12:10:35,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT_IV50' (Amgdt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Blk BT' (swissk.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2020-12-21 12:10:35,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,176::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'BankGothic Md BT' (bgothm.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 2' (mtproxy2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Bold.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2020-12-21 12:10:35,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic_IV25.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 7' (mtproxy7.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,177::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT_IV25' (gdt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicG' (gothicg_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2020-12-21 12:10:35,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2020-12-21 12:10:35,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2020-12-21 12:10:35,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,178::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Ex BT' (swisseb.ttf) normal normal 700 expanded>) = 10.535
2020-12-21 12:10:35,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:10:35,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vineta BT' (vinet.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkEx BT' (swissek.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 12:10:35,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'EuroRoman' (eurr____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicE' (gothice_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2020-12-21 12:10:35,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,179::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkCn BT' (swissck.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:10:35,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swissc.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2020-12-21 12:10:35,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2020-12-21 12:10:35,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2020-12-21 12:10:35,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,180::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:10:35,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicI' (gothici_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 12:10:35,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:10:35,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,181::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic_IV50.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sansso__.ttf) oblique normal 400 normal>) = 11.05
2020-12-21 12:10:35,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'PanRoman' (panroman.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,182::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCTEUR' (isocteur.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Lt BT' (swissl.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2020-12-21 12:10:35,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CommercialScript BT' (comsc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,183::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 12:10:35,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicE' (gothice_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanC' (romanc__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2020-12-21 12:10:35,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2020-12-21 12:10:35,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2020-12-21 12:10:35,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:10:35,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Blk BT' (swisski.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,184::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 12:10:35,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2020-12-21 12:10:35,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2020-12-21 12:10:35,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2020-12-21 12:10:35,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Stylus BT' (stylu.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2020-12-21 12:10:35,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,185::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 12:10:35,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT' (AMGDT___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'BankGothic Lt BT' (bgothl.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,186::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Regular.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Technic' (technic_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AIGDT' (AIGDT___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 8' (mtproxy8.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,187::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanT' (romant__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:10:35,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtEx BT' (swissel.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 12:10:35,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SuperFrench' (supef___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,188::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CommercialPi BT' (compi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 9' (mtproxy9.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkOul BT' (swissko.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtCn BT' (swisscli.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 12:10:35,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,189::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCTEUR' (isocteur.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,190::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Technic' (technic_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Regular.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:10:35,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2020-12-21 12:10:35,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT' (gdt_____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2020-12-21 12:10:35,191::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2020-12-21 12:10:35,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2020-12-21 12:10:35,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2020-12-21 12:10:35,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ItalicT' (italict_.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2020-12-21 12:10:35,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ItalicT' (italict_.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,192::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2020-12-21 12:10:35,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'TechnicBold' (techb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,193::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AmdtSymbols' (AMDT_Symbols.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2020-12-21 12:10:35,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,194::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2020-12-21 12:10:35,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkEx BT' (swissek.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 12:10:35,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BdCnOul BT' (swisscbo.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2020-12-21 12:10:35,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CityBlueprint' (cityb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2020-12-21 12:10:35,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2020-12-21 12:10:35,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BdOul BT' (swissbo.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'PanRoman' (panroman.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'UniversalMath1 BT' (umath.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,195::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'TechnicLite' (techl___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanT' (romant__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Ex BT' (swisse.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 12:10:35,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romai___.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2020-12-21 12:10:35,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GOST Common' (GOST Common.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,196::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romai___.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romantic.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:10:35,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2020-12-21 12:10:35,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2020-12-21 12:10:35,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,197::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2020-12-21 12:10:35,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCPEUR' (isocpeui.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkCn BT' (swisscki.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 12:10:35,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'TechnicBold' (techb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 3' (mtproxy3.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,198::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2020-12-21 12:10:35,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2020-12-21 12:10:35,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2020-12-21 12:10:35,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 12:10:35,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2020-12-21 12:10:35,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 5' (mtproxy5.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GENISO' (GENISO.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,199::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanssbo_.ttf) oblique normal 700 normal>) = 11.335
2020-12-21 12:10:35,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2020-12-21 12:10:35,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monos.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,200::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkOul BT' (swissko.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCPEUR' (isocpeui.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2020-12-21 12:10:35,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,201::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 8' (mtproxy8.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vineta BT' (vinet.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanD' (romand__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AIGDT' (AIGDT___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AmdtSymbols' (AMDT_Symbols.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT_IV25' (Amgdt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT' (AMGDT___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,202::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCTEUR' (isocteui.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2020-12-21 12:10:35,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2020-12-21 12:10:35,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2020-12-21 12:10:35,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptC' (scriptc_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Lt BT' (swissli.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 12:10:35,203::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2020-12-21 12:10:35,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 1' (mtproxy1.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'EuroRoman' (eurro___.ttf) oblique normal 400 normal>) = 11.05
2020-12-21 12:10:35,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicI' (gothici_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,204::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkCn BT' (swissck.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swissci.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 12:10:35,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Ex BT' (swisseb.ttf) normal normal 700 expanded>) = 10.535
2020-12-21 12:10:35,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'UniversalMath1 BT' (umath.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanss___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ItalicC' (italicc_.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,205::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2020-12-21 12:10:35,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CountryBlueprint' (counb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 12:10:35,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Ex BT' (swisse.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 12:10:35,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'TechnicLite' (techl___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2020-12-21 12:10:35,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 12:10:35,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2020-12-21 12:10:35,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,206::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2020-12-21 12:10:35,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SuperFrench' (supef___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT_IV25' (Amgdt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 12:10:35,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swissci.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 12:10:35,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanssb__.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,207::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic_IV50.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2020-12-21 12:10:35,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:10:35,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GOST Common' (GOST Common Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Lt BT' (swissl.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 12:10:35,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2020-12-21 12:10:35,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,208::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Bold.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AcadEref' (AcadEref.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CountryBlueprint' (counb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CommercialScript BT' (comsc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic_IV25.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swiss.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,209::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 7' (mtproxy7.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swiss.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutch.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2020-12-21 12:10:35,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,210::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2020-12-21 12:10:35,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT_IV50' (gdt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanss___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 2' (mtproxy2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanssb__.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtCn BT' (swisscli.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 12:10:35,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 XBd BT' (dutcheb.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkCn BT' (swisscki.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 12:10:35,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 12:10:35,211::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCPEUR' (isocpeur.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GOST Common' (GOST Common Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2020-12-21 12:10:35,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutch.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT_IV25' (gdt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCPEUR' (isocpeur.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,212::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2020-12-21 12:10:35,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AcadEref' (AcadEref.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 6' (mtproxy6.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2020-12-21 12:10:35,213::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 12:10:35,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'EuroRoman' (eurr____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtCn BT' (swisscl.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2020-12-21 12:10:35,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 9' (mtproxy9.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,214::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic__.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 12:10:35,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romab___.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CityBlueprint' (cityb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,215::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT_IV50' (gdt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,216::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,216::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,216::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,216::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 12:10:35,216::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,216::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,216::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Stylus BT' (stylu.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,216::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,216::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2020-12-21 12:10:35,216::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,216::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtEx BT' (swissel.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 12:10:35,216::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2020-12-21 12:10:35,216::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 12:10:35,216::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,216::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,216::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,216::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,216::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,217::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2020-12-21 12:10:35,217::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,217::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 12:10:35,217::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,217::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,217::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swisscbi.ttf) italic normal 700 condensed>) = 11.535
2020-12-21 12:10:35,217::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 12:10:35,217::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,217::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 5' (mtproxy5.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,217::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,217::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,217::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,217::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,217::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2020-12-21 12:10:35,217::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,217::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,217::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,217::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,217::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,218::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,218::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,218::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,218::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,218::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,218::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BdCnOul BT' (swisscbo.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,218::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 12:10:35,218::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2020-12-21 12:10:35,218::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT_IV50' (Amgdt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,218::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,218::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,218::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 XBd BT' (dutcheb.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,218::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,218::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,218::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,218::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 1' (mtproxy1.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,218::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,218::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2020-12-21 12:10:35,218::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,219::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 3' (mtproxy3.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,219::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'BankGothic Md BT' (bgothm.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,219::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,219::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 4' (mtproxy4.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,219::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,219::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,219::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,219::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GOST Common' (GOST Common.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,219::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,219::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,219::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,219::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,219::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,219::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,219::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,219::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,219::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,219::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,219::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2020-12-21 12:10:35,220::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,220::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,220::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,220::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,220::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,220::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,220::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,220::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,220::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,220::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romab___.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,220::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,220::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,220::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,220::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swissc.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,220::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,220::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,220::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,220::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,220::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanD' (romand__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,221::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,221::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,221::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,221::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2020-12-21 12:10:35,221::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,221::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,221::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,221::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'EuroRoman' (eurro___.ttf) oblique normal 400 normal>) = 11.05
2020-12-21 12:10:35,221::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,221::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,221::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,221::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,221::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,221::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,221::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtCn BT' (swisscl.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,221::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,221::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,221::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,221::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,222::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,222::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,222::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,222::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,222::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,222::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,222::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,222::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,222::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,222::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,222::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2020-12-21 12:10:35,222::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Blk BT' (swissk.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,222::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,222::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,222::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,222::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,222::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,222::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,223::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,223::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,223::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,223::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,223::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,223::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,223::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,223::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romantic.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,223::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,223::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,223::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 4' (mtproxy4.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,223::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,223::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,223::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BdOul BT' (swissbo.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,223::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,223::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,223::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,223::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,223::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,224::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2020-12-21 12:10:35,224::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GENISO' (GENISO.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,224::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,224::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,224::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 12:10:35,224::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,224::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,224::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,224::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2020-12-21 12:10:35,224::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,224::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Blk BT' (swisski.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,224::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,224::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,224::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2020-12-21 12:10:35,224::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,224::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,224::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2020-12-21 12:10:35,224::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2020-12-21 12:10:35,224::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCTEUR' (isocteui.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,225::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT' (gdt_____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,225::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,225::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,225::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,225::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,225::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,225::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,225::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,225::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,225::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'BankGothic Lt BT' (bgothl.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,225::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,225::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,225::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,225::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,225::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,225::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,225::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,225::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:10:35,225::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,226::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2020-12-21 12:10:35,226::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,226::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:10:35,226::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,226::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,226::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,226::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swisscb.ttf) normal normal 700 condensed>) = 10.535
2020-12-21 12:10:35,226::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,226::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,226::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,226::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swisscbi.ttf) italic normal 700 condensed>) = 11.535
2020-12-21 12:10:35,226::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2020-12-21 12:10:35,226::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,226::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:10:35,226::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,226::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,226::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,226::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2020-12-21 12:10:35,226::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicG' (gothicg_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,227::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,227::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monos.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,227::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 6' (mtproxy6.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,227::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,227::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,227::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,227::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,227::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,227::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,227::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptC' (scriptc_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,227::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,227::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,227::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CommercialPi BT' (compi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,227::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sansso__.ttf) oblique normal 400 normal>) = 11.05
2020-12-21 12:10:35,227::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,227::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanssbo_.ttf) oblique normal 700 normal>) = 11.335
2020-12-21 12:10:35,227::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Lt BT' (swissli.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,227::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,227::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,228::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,228::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,228::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,228::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,228::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,228::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic__.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,228::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,228::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,228::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanC' (romanc__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,228::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:10:35,228::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swisscb.ttf) normal normal 700 condensed>) = 10.535
2020-12-21 12:10:35,228::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:10:35,228::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ItalicC' (italicc_.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:10:35,228::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:10:35,228::DEBUG::matplotlib.font_manager::font_manager.py::1366::findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\Users\\Jake\\miniconda3\\envs\\ML-GPU\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2020-12-21 12:10:35,236::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:10:35,263::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:10:35,276::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:10:35,365::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:10:35,466::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:10:35,526::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:10:35,552::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:10:35,564::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:10:35,646::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:10:35,706::DEBUG::root::ML_Identification.py::651::[INFO] Deleting model and freeing GPU memory... 
2020-12-21 12:10:35,840::DEBUG::root::ML_Identification.py::651::[WARN] Model does not exist! Will now train and save.

2020-12-21 12:10:35,840::DEBUG::root::ML_Identification.py::651::[INIT] Initialising dataset... 
2020-12-21 12:10:35,841::DEBUG::root::ML_Identification.py::651::[INIT] Generating model (input shape = (128, 128, 1), classes = 18, optimizer: Adamax)... 
2020-12-21 12:10:36,144::DEBUG::root::ML_Identification.py::651::[TRAIN] Training...
2020-12-21 12:10:36,144::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 12:10:36,144::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Dataset             : Dataset(3, [0, 0, (0, 1), 0], [0], 128, 128, 2, False).
2020-12-21 12:10:36,145::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Success Condition   : A loss of 0.001.
2020-12-21 12:10:36,145::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Terminate Condition : Reaching epoch 100 or 5 consecutive epochs of stagnation.
2020-12-21 12:10:36,146::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 12:10:36,146::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Training 
2020-12-21 12:11:14,770::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [93m-1[0m Loss: 0.426 - Accuracy: 42.7% 
2020-12-21 12:11:52,630::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> [92m+ [0m Loss: 0.411 - Accuracy: 44.4% 
2020-12-21 12:12:28,549::DEBUG::root::ML_Identification.py::651::[INFO] Optimizing parameter 'steps_per_epoch' across range '[1, 2, 4, 8, 16, 32, 64, 128, 256]'.

2020-12-21 12:12:28,550::DEBUG::root::ML_Identification.py::651::[WARN] Model does not exist! Will now train and save.

2020-12-21 12:12:28,550::DEBUG::root::ML_Identification.py::651::[INIT] Initialising dataset... 
2020-12-21 12:12:28,551::DEBUG::root::ML_Identification.py::651::[INIT] Generating model (input shape = (128, 128, 1), classes = 18, optimizer: Adamax)... 
2020-12-21 12:12:29,506::DEBUG::root::ML_Identification.py::651::[TRAIN] Training...
2020-12-21 12:12:29,507::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 12:12:29,507::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Dataset             : Dataset(3, [0, 0, (0, 1), 0], [0], 128, 128, 1, False).
2020-12-21 12:12:29,508::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Success Condition   : A loss of 0.001.
2020-12-21 12:12:29,508::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Terminate Condition : Reaching epoch 100 or 5 consecutive epochs of stagnation.
2020-12-21 12:12:29,508::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 12:12:29,509::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Training 
2020-12-21 12:13:06,283::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.461 - Accuracy: 41.1% 
2020-12-21 12:13:40,874::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.412 - Accuracy: 45.4% 
2020-12-21 12:14:12,101::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.367 - Accuracy: 46.9% 
2020-12-21 12:14:44,931::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.387 - Accuracy: 45.2% 
2020-12-21 12:15:17,857::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.384 - Accuracy: 45.9% 
2020-12-21 12:15:51,077::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.382 - Accuracy: 45.6% 
2020-12-21 12:16:24,479::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -3 Loss: 0.35 - Accuracy: 47.7% 
2020-12-21 12:16:57,018::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.398 - Accuracy: 45.9% 
2020-12-21 12:17:28,000::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.383 - Accuracy: 47.1% 
2020-12-21 12:17:58,854::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -2 Loss: 0.366 - Accuracy: 47.2% 
2020-12-21 12:18:29,683::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -4 Loss: 0.358 - Accuracy: 47.7% 
2020-12-21 12:18:29,685::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 12:18:29,686::DEBUG::root::ML_Identification.py::651::[WARN]  |-> Learning stagnated at epoch 11.
2020-12-21 12:18:29,686::DEBUG::root::ML_Identification.py::651::[TRAIN] V
2020-12-21 12:18:29,686::DEBUG::root::ML_Identification.py::651::[TRAIN] Done!

2020-12-21 12:18:29,687::DEBUG::root::ML_Identification.py::651::[INFO] Training complete after 6 minutes 1 seconds.

2020-12-21 12:18:29,687::DEBUG::root::ML_Identification.py::651::[SAVE] Saving model... 
2020-12-21 12:18:29,759::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:18:29,765::DEBUG::matplotlib.font_manager::font_manager.py::1334::findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-12-21 12:18:29,765::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-12-21 12:18:29,765::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,765::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,765::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,765::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,765::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,766::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,766::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,766::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,766::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2020-12-21 12:18:29,766::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,766::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,766::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,766::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,766::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,766::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,766::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,766::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,766::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,766::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,766::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-12-21 12:18:29,766::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,767::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,767::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2020-12-21 12:18:29,767::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,767::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,767::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,767::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,767::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,767::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,767::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,767::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,767::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,767::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-12-21 12:18:29,767::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,767::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2020-12-21 12:18:29,767::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,767::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,767::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,767::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,768::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2020-12-21 12:18:29,768::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,768::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 12:18:29,768::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,768::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,768::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,768::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT_IV50' (Amgdt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,768::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Blk BT' (swissk.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,768::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,768::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,768::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,768::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,768::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2020-12-21 12:18:29,768::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,768::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,768::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,768::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,768::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'BankGothic Md BT' (bgothm.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,768::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,769::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,769::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,769::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,769::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,769::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 2' (mtproxy2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,769::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,769::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,769::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,769::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,769::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Bold.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,769::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,769::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2020-12-21 12:18:29,769::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,769::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,769::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,769::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic_IV25.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,769::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 7' (mtproxy7.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,770::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,770::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT_IV25' (gdt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,770::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,770::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,770::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,770::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,770::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,770::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicG' (gothicg_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,770::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2020-12-21 12:18:29,770::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,770::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,770::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,770::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,770::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,770::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,770::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2020-12-21 12:18:29,770::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,770::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2020-12-21 12:18:29,771::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,771::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Ex BT' (swisseb.ttf) normal normal 700 expanded>) = 10.535
2020-12-21 12:18:29,771::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,771::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,771::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:18:29,771::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,771::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vineta BT' (vinet.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,771::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkEx BT' (swissek.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 12:18:29,771::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'EuroRoman' (eurr____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,771::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,771::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,771::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicE' (gothice_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,771::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,771::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2020-12-21 12:18:29,771::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,771::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,771::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,771::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,771::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,772::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,772::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,772::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkCn BT' (swissck.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,772::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,772::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:18:29,772::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,772::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,772::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,772::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swissc.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,772::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2020-12-21 12:18:29,772::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,772::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,772::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,772::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,772::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,772::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2020-12-21 12:18:29,772::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2020-12-21 12:18:29,772::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,773::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,773::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,773::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:18:29,773::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,773::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicI' (gothici_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,773::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,773::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,773::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,773::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,773::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 12:18:29,773::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,773::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:18:29,773::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,773::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,773::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,773::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,773::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,773::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,774::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,774::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,774::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,774::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,774::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,774::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,774::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,774::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,774::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,774::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,774::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,774::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic_IV50.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,774::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sansso__.ttf) oblique normal 400 normal>) = 11.05
2020-12-21 12:18:29,774::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,774::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'PanRoman' (panroman.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,774::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,774::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,774::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,775::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,775::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,775::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCTEUR' (isocteur.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,775::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,775::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,775::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,775::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,775::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,775::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,775::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Lt BT' (swissl.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,775::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,775::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,775::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2020-12-21 12:18:29,775::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CommercialScript BT' (comsc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,775::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,775::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,775::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,775::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,776::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,776::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,776::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,776::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 12:18:29,776::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,776::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,776::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicE' (gothice_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,776::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanC' (romanc__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,776::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,776::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2020-12-21 12:18:29,776::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,776::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2020-12-21 12:18:29,776::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,776::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2020-12-21 12:18:29,776::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,776::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:18:29,776::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,776::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,777::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,777::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,777::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Blk BT' (swisski.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,777::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 12:18:29,777::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,777::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2020-12-21 12:18:29,777::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2020-12-21 12:18:29,777::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2020-12-21 12:18:29,777::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,777::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,777::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,777::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,777::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,777::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Stylus BT' (stylu.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,777::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,777::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,777::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,778::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2020-12-21 12:18:29,778::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,778::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,778::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,778::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,778::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 12:18:29,778::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,778::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,778::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,778::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,778::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,778::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,778::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT' (AMGDT___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,778::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,778::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,778::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,778::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'BankGothic Lt BT' (bgothl.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,778::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,779::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,779::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,779::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,779::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,779::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,779::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,779::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,779::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,779::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Regular.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,779::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,779::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,779::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,779::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Technic' (technic_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,779::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,779::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,779::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AIGDT' (AIGDT___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,779::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,779::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,779::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,780::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,780::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,780::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 8' (mtproxy8.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,780::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,780::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,780::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,780::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,780::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,780::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,780::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,780::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanT' (romant__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,780::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,780::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,780::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,780::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:18:29,780::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,780::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,780::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,781::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,781::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,781::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtEx BT' (swissel.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 12:18:29,781::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,781::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SuperFrench' (supef___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,781::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,781::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CommercialPi BT' (compi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,781::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,781::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,781::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,781::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 9' (mtproxy9.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,781::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,781::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkOul BT' (swissko.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,781::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,781::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,781::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtCn BT' (swisscli.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 12:18:29,781::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,781::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,782::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,782::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,782::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,782::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,782::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,782::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,782::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,782::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,782::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,782::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,782::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,782::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,782::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,782::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,782::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,782::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,782::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,782::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,783::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,783::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,783::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCTEUR' (isocteur.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,783::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,783::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,783::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,783::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,783::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,783::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,783::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Technic' (technic_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,783::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Regular.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,783::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,783::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,783::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,783::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,783::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,783::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,783::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,784::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,784::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:18:29,784::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2020-12-21 12:18:29,784::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT' (gdt_____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,784::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2020-12-21 12:18:29,784::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,784::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,784::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,784::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2020-12-21 12:18:29,784::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,784::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,784::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,784::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2020-12-21 12:18:29,784::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,784::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,784::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2020-12-21 12:18:29,784::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ItalicT' (italict_.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,784::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,785::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,785::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,785::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,785::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2020-12-21 12:18:29,785::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ItalicT' (italict_.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,785::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,785::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,785::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,785::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,785::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,785::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,785::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,785::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,785::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,785::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2020-12-21 12:18:29,785::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,785::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,785::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,785::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,786::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,786::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,786::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,786::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,786::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,786::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'TechnicBold' (techb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,786::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AmdtSymbols' (AMDT_Symbols.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,786::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,786::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,786::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,786::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,786::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2020-12-21 12:18:29,786::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,786::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,786::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,786::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,786::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,786::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,787::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,787::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,787::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,787::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,787::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,787::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,787::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,787::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2020-12-21 12:18:29,787::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,787::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,787::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,787::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,787::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkEx BT' (swissek.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 12:18:29,787::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,787::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BdCnOul BT' (swisscbo.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,787::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2020-12-21 12:18:29,787::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CityBlueprint' (cityb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,787::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2020-12-21 12:18:29,788::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2020-12-21 12:18:29,788::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,788::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,788::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BdOul BT' (swissbo.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,788::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'PanRoman' (panroman.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,788::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'UniversalMath1 BT' (umath.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,788::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,788::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,788::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,788::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'TechnicLite' (techl___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,788::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,788::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanT' (romant__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,788::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Ex BT' (swisse.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 12:18:29,788::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,788::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,788::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,788::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romai___.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,788::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2020-12-21 12:18:29,789::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,789::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GOST Common' (GOST Common.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,789::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,789::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,789::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,789::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,789::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,789::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,789::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,789::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,789::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,789::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,789::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,789::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,789::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romai___.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,789::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romantic.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,789::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,789::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:18:29,790::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,790::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,790::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,790::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2020-12-21 12:18:29,790::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2020-12-21 12:18:29,790::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,790::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,790::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,790::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,790::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,790::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,790::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2020-12-21 12:18:29,790::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,790::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,790::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCPEUR' (isocpeui.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,790::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkCn BT' (swisscki.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 12:18:29,790::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,790::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,791::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'TechnicBold' (techb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,791::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,791::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,791::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,791::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,791::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 3' (mtproxy3.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,791::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,791::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,791::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,791::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2020-12-21 12:18:29,791::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,791::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2020-12-21 12:18:29,791::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,791::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2020-12-21 12:18:29,791::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 12:18:29,791::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2020-12-21 12:18:29,791::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,791::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 5' (mtproxy5.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,792::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,792::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,792::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,792::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,792::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,792::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GENISO' (GENISO.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,792::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,792::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,792::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,792::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,792::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,792::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,792::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,792::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanssbo_.ttf) oblique normal 700 normal>) = 11.335
2020-12-21 12:18:29,792::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2020-12-21 12:18:29,792::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,792::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,792::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,793::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,793::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,793::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,793::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,793::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,793::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,793::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,793::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,793::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monos.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,793::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,793::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,793::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,793::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,793::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,793::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,793::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,793::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,793::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,794::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,794::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,794::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,794::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,794::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkOul BT' (swissko.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,794::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,794::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCPEUR' (isocpeui.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,794::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2020-12-21 12:18:29,794::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,794::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,794::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,794::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 8' (mtproxy8.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,794::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,794::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,794::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,794::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vineta BT' (vinet.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,794::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanD' (romand__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,794::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AIGDT' (AIGDT___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,795::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,795::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,795::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AmdtSymbols' (AMDT_Symbols.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,795::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,795::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,795::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,795::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,795::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT_IV25' (Amgdt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,795::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT' (AMGDT___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,795::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,795::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,795::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCTEUR' (isocteui.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,795::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,795::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2020-12-21 12:18:29,795::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2020-12-21 12:18:29,795::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,795::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,795::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,795::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,796::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,796::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,796::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2020-12-21 12:18:29,796::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptC' (scriptc_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,796::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Lt BT' (swissli.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,796::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,796::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,796::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,796::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,796::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,796::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 12:18:29,796::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,796::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,796::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,796::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,796::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,796::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2020-12-21 12:18:29,796::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,797::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 1' (mtproxy1.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,797::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,797::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,797::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,797::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,797::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,797::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,797::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'EuroRoman' (eurro___.ttf) oblique normal 400 normal>) = 11.05
2020-12-21 12:18:29,797::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,797::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,797::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicI' (gothici_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,797::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkCn BT' (swissck.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,797::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,797::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,797::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,797::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swissci.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 12:18:29,797::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,797::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,798::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,798::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Ex BT' (swisseb.ttf) normal normal 700 expanded>) = 10.535
2020-12-21 12:18:29,798::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,798::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,798::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,798::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,798::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'UniversalMath1 BT' (umath.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,798::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,798::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanss___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,798::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,798::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ItalicC' (italicc_.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,798::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,798::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,798::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,798::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2020-12-21 12:18:29,798::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,798::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CountryBlueprint' (counb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,798::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 12:18:29,798::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,799::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,799::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Ex BT' (swisse.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 12:18:29,799::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,799::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,799::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,799::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'TechnicLite' (techl___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,799::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,799::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,799::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2020-12-21 12:18:29,799::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 12:18:29,799::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2020-12-21 12:18:29,799::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,799::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,799::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,799::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,799::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,799::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,799::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,800::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2020-12-21 12:18:29,800::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,800::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,800::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,800::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SuperFrench' (supef___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,800::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,800::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,800::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT_IV25' (Amgdt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,800::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 12:18:29,800::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,800::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swissci.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 12:18:29,800::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanssb__.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,800::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic_IV50.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,800::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2020-12-21 12:18:29,800::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:18:29,800::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,800::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,800::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,801::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,801::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,801::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GOST Common' (GOST Common Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,801::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Lt BT' (swissl.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,801::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,801::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,801::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,801::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 12:18:29,801::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2020-12-21 12:18:29,801::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,801::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,801::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,801::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,801::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Bold.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,801::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,801::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,801::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AcadEref' (AcadEref.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,801::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CountryBlueprint' (counb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,801::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CommercialScript BT' (comsc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,802::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,802::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,802::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,802::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,802::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic_IV25.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,802::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,802::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,802::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,802::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,802::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,802::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swiss.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,802::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,802::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,802::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,802::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,802::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 7' (mtproxy7.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,802::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,802::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swiss.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,803::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,803::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,803::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,803::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutch.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,803::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,803::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2020-12-21 12:18:29,803::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,803::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,803::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,803::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,803::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,803::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,803::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,803::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2020-12-21 12:18:29,803::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,803::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,803::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,803::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,803::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT_IV50' (gdt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,804::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanss___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,804::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,804::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,804::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 2' (mtproxy2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,804::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,804::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanssb__.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,804::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,804::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtCn BT' (swisscli.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 12:18:29,804::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,804::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 XBd BT' (dutcheb.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,804::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkCn BT' (swisscki.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 12:18:29,804::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 12:18:29,804::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,804::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,804::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCPEUR' (isocpeur.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,804::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,804::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,804::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,805::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GOST Common' (GOST Common Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,805::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2020-12-21 12:18:29,805::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,805::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,805::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,805::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutch.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,805::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT_IV25' (gdt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,805::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,805::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,805::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,805::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCPEUR' (isocpeur.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,805::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,805::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,805::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,805::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,805::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,805::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,805::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,806::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,806::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2020-12-21 12:18:29,806::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AcadEref' (AcadEref.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,806::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,806::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,806::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,806::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,806::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,806::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,806::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 6' (mtproxy6.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,806::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,806::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2020-12-21 12:18:29,806::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,806::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,806::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,806::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,806::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,806::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,806::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 12:18:29,807::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'EuroRoman' (eurr____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,807::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,807::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,807::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtCn BT' (swisscl.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,807::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,807::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,807::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,807::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,807::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2020-12-21 12:18:29,807::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,807::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 9' (mtproxy9.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,807::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,807::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic__.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,807::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,807::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,807::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,807::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,807::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 12:18:29,808::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,808::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,808::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,808::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,808::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romab___.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,808::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,808::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CityBlueprint' (cityb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,808::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,808::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,808::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,808::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,808::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,808::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,808::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT_IV50' (gdt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,808::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,808::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,808::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,808::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 12:18:29,809::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,809::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,809::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Stylus BT' (stylu.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,809::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,809::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2020-12-21 12:18:29,809::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,809::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtEx BT' (swissel.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 12:18:29,809::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2020-12-21 12:18:29,809::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 12:18:29,809::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,809::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,809::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,809::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,809::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,809::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2020-12-21 12:18:29,809::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,809::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 12:18:29,809::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,810::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,810::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swisscbi.ttf) italic normal 700 condensed>) = 11.535
2020-12-21 12:18:29,810::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 12:18:29,810::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,810::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 5' (mtproxy5.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,810::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,810::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,810::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,810::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,810::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2020-12-21 12:18:29,810::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,810::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,810::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,810::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,810::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,810::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,810::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,811::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,811::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,811::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,811::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BdCnOul BT' (swisscbo.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,811::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 12:18:29,811::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2020-12-21 12:18:29,811::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT_IV50' (Amgdt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,811::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,811::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,811::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 XBd BT' (dutcheb.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,811::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,811::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,811::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,811::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 1' (mtproxy1.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,811::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,811::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2020-12-21 12:18:29,811::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,811::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 3' (mtproxy3.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,811::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'BankGothic Md BT' (bgothm.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,812::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,812::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 4' (mtproxy4.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,812::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,812::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,812::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,812::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GOST Common' (GOST Common.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,812::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,812::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,812::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,812::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,812::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,812::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,812::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,812::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,812::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,812::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,812::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2020-12-21 12:18:29,812::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,813::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,813::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,813::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,813::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,813::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,813::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,813::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,813::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,813::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romab___.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,813::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,813::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,813::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,813::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swissc.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,813::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,813::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,813::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,813::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,813::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanD' (romand__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,814::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,814::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,814::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,814::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2020-12-21 12:18:29,814::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,814::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,814::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,814::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'EuroRoman' (eurro___.ttf) oblique normal 400 normal>) = 11.05
2020-12-21 12:18:29,814::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,814::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,814::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,814::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,814::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,814::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,814::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtCn BT' (swisscl.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,814::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,814::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,814::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,815::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,815::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,815::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,815::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,815::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,815::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,815::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,815::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,815::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,815::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,815::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,815::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2020-12-21 12:18:29,815::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Blk BT' (swissk.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,815::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,815::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,815::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,815::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,815::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,815::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,816::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,816::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,816::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,816::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,816::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,816::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,816::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,816::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romantic.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,816::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,816::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,816::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 4' (mtproxy4.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,816::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,816::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,816::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BdOul BT' (swissbo.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,816::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,816::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,816::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,816::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,817::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,817::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2020-12-21 12:18:29,817::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GENISO' (GENISO.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,817::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,817::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,817::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 12:18:29,817::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,817::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,817::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,817::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2020-12-21 12:18:29,817::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,817::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Blk BT' (swisski.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,817::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,817::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,817::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2020-12-21 12:18:29,817::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,817::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,817::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2020-12-21 12:18:29,818::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2020-12-21 12:18:29,818::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCTEUR' (isocteui.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,818::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT' (gdt_____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,818::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,818::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,818::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,818::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,818::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,818::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,818::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,818::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,818::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'BankGothic Lt BT' (bgothl.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,818::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,818::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,818::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,818::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,818::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,818::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,819::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,819::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,819::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,819::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2020-12-21 12:18:29,819::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,819::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,819::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,819::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,819::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,819::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swisscb.ttf) normal normal 700 condensed>) = 10.535
2020-12-21 12:18:29,819::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,819::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,819::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,819::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swisscbi.ttf) italic normal 700 condensed>) = 11.535
2020-12-21 12:18:29,819::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2020-12-21 12:18:29,819::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,819::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,819::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,819::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,820::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,820::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2020-12-21 12:18:29,820::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicG' (gothicg_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,820::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,820::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monos.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,820::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 6' (mtproxy6.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,820::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,820::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,820::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,820::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,820::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,820::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,820::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptC' (scriptc_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,820::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,820::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,820::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CommercialPi BT' (compi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,820::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sansso__.ttf) oblique normal 400 normal>) = 11.05
2020-12-21 12:18:29,820::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,821::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanssbo_.ttf) oblique normal 700 normal>) = 11.335
2020-12-21 12:18:29,821::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Lt BT' (swissli.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,821::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,821::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,821::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,821::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,821::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,821::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,821::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,821::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic__.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,821::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,821::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,821::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanC' (romanc__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,821::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,821::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swisscb.ttf) normal normal 700 condensed>) = 10.535
2020-12-21 12:18:29,821::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,821::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ItalicC' (italicc_.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,821::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:18:29,821::DEBUG::matplotlib.font_manager::font_manager.py::1366::findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\Jake\\miniconda3\\envs\\ML-GPU\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2020-12-21 12:18:29,962::DEBUG::matplotlib.font_manager::font_manager.py::1334::findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2020-12-21 12:18:29,962::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-12-21 12:18:29,962::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,962::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,962::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,962::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,962::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,962::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,962::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,962::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,962::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2020-12-21 12:18:29,963::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,963::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,963::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,963::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,963::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,963::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,963::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,963::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,963::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,963::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,963::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-12-21 12:18:29,963::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,963::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,963::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2020-12-21 12:18:29,963::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,963::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,963::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,963::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,964::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,964::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,964::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,964::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,964::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,964::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-12-21 12:18:29,964::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,964::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2020-12-21 12:18:29,964::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,964::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,964::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,964::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,964::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2020-12-21 12:18:29,964::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,964::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 12:18:29,964::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,964::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,964::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,964::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT_IV50' (Amgdt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,965::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Blk BT' (swissk.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,965::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,965::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,965::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,965::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,965::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2020-12-21 12:18:29,965::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,965::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,965::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,965::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,965::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'BankGothic Md BT' (bgothm.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,965::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,965::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,965::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,965::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,965::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,965::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 2' (mtproxy2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,965::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,966::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,966::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,966::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,966::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Bold.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,966::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,966::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2020-12-21 12:18:29,966::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,966::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,966::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,966::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic_IV25.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,966::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 7' (mtproxy7.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,966::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,966::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT_IV25' (gdt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,966::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,966::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,966::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,966::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,966::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,966::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicG' (gothicg_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,967::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2020-12-21 12:18:29,967::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,967::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,967::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,967::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,967::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,967::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,967::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2020-12-21 12:18:29,967::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,967::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2020-12-21 12:18:29,967::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,967::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Ex BT' (swisseb.ttf) normal normal 700 expanded>) = 10.535
2020-12-21 12:18:29,967::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,967::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,967::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:18:29,967::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,967::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vineta BT' (vinet.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,967::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkEx BT' (swissek.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 12:18:29,967::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'EuroRoman' (eurr____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,968::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,968::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,968::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicE' (gothice_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,968::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,968::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2020-12-21 12:18:29,968::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,968::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,968::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,968::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,968::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,968::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,968::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,968::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkCn BT' (swissck.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,968::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,968::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:18:29,968::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,968::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,968::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,969::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swissc.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,969::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2020-12-21 12:18:29,969::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,969::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,969::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,969::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,969::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,969::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2020-12-21 12:18:29,969::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2020-12-21 12:18:29,969::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,969::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,969::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,969::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:18:29,969::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,969::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicI' (gothici_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,969::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,969::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,969::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,970::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,970::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 12:18:29,970::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,970::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:18:29,970::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,970::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,970::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,970::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,970::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,970::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,970::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,970::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,970::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,970::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,970::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,970::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,970::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,970::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,970::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,971::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,971::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,971::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic_IV50.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,971::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sansso__.ttf) oblique normal 400 normal>) = 11.05
2020-12-21 12:18:29,971::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,971::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'PanRoman' (panroman.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,971::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,971::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,971::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,971::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,971::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,971::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCTEUR' (isocteur.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,971::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,971::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,971::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,971::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,971::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,972::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,972::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Lt BT' (swissl.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,972::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,972::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,972::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2020-12-21 12:18:29,972::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CommercialScript BT' (comsc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,972::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,972::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,972::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,972::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,972::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,972::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,972::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,972::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 12:18:29,972::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,972::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,972::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicE' (gothice_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,972::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanC' (romanc__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,972::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,973::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2020-12-21 12:18:29,973::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,973::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2020-12-21 12:18:29,973::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,973::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2020-12-21 12:18:29,973::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,973::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:18:29,973::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,973::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,973::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,973::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,973::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Blk BT' (swisski.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,973::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 12:18:29,973::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,973::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2020-12-21 12:18:29,973::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2020-12-21 12:18:29,973::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2020-12-21 12:18:29,973::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,973::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,974::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,974::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,974::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,974::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Stylus BT' (stylu.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,974::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,974::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,974::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,974::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2020-12-21 12:18:29,974::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,974::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,974::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,974::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,974::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 12:18:29,974::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,974::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,974::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,974::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,974::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,975::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,975::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT' (AMGDT___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,975::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,975::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,975::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,975::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'BankGothic Lt BT' (bgothl.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,975::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,975::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,975::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,975::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,975::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,975::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,975::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,975::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,975::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,975::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Regular.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,975::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,975::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,975::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,976::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Technic' (technic_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,976::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,976::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,976::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AIGDT' (AIGDT___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,976::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,976::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,976::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,976::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,976::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,976::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 8' (mtproxy8.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,976::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,976::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,976::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,976::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,976::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,976::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,976::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,976::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanT' (romant__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,977::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,977::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,977::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,977::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:18:29,977::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,977::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,977::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,977::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,977::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,977::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtEx BT' (swissel.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 12:18:29,977::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,977::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SuperFrench' (supef___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,977::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,977::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CommercialPi BT' (compi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,977::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,977::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,977::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,977::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 9' (mtproxy9.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,977::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,978::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkOul BT' (swissko.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,978::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,978::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,978::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtCn BT' (swisscli.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 12:18:29,978::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,978::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,978::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,978::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,978::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,978::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,978::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,978::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,978::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,978::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,978::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,978::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,978::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,978::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,979::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,979::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,979::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,979::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,979::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,979::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,979::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,979::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,979::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCTEUR' (isocteur.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,979::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,979::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,979::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,979::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,979::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,979::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,979::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Technic' (technic_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,979::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Regular.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,979::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,979::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,980::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,980::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,980::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,980::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,980::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,980::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,980::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:18:29,980::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2020-12-21 12:18:29,980::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT' (gdt_____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,980::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2020-12-21 12:18:29,980::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,980::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,980::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,980::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2020-12-21 12:18:29,980::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,980::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,980::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,980::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2020-12-21 12:18:29,980::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,981::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,981::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2020-12-21 12:18:29,981::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ItalicT' (italict_.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,981::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,981::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,981::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,981::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,981::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2020-12-21 12:18:29,981::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ItalicT' (italict_.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,981::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,981::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,981::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,981::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,981::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,981::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,981::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,981::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,981::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,981::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2020-12-21 12:18:29,982::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,982::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,982::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,982::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,982::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,982::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,982::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,982::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,982::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,982::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'TechnicBold' (techb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,982::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AmdtSymbols' (AMDT_Symbols.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,982::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,982::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,982::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,982::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,982::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2020-12-21 12:18:29,982::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,982::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,983::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,983::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,983::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,983::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,983::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,983::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,983::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,983::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,983::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,983::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,983::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,983::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2020-12-21 12:18:29,983::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,983::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,983::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,983::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,983::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkEx BT' (swissek.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 12:18:29,983::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,983::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BdCnOul BT' (swisscbo.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,984::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2020-12-21 12:18:29,984::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CityBlueprint' (cityb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,984::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2020-12-21 12:18:29,984::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2020-12-21 12:18:29,984::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,984::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,984::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BdOul BT' (swissbo.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,984::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'PanRoman' (panroman.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,984::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'UniversalMath1 BT' (umath.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,984::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,984::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,984::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,984::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'TechnicLite' (techl___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,984::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,984::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanT' (romant__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,984::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Ex BT' (swisse.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 12:18:29,984::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,984::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,984::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,985::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romai___.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,985::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2020-12-21 12:18:29,985::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,985::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GOST Common' (GOST Common.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,985::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,985::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,985::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,985::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,985::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,985::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,985::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,985::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,985::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,985::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,985::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,985::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,985::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romai___.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,985::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romantic.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,986::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,986::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:18:29,986::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,986::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,986::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,986::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2020-12-21 12:18:29,986::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2020-12-21 12:18:29,986::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,986::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,986::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,986::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,986::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,986::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,986::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2020-12-21 12:18:29,986::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,986::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,986::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCPEUR' (isocpeui.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,986::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkCn BT' (swisscki.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 12:18:29,987::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,987::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,987::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'TechnicBold' (techb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,987::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,987::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,987::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,987::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,987::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 3' (mtproxy3.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,987::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,987::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,987::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,987::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2020-12-21 12:18:29,987::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,987::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2020-12-21 12:18:29,987::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,987::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2020-12-21 12:18:29,987::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 12:18:29,987::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2020-12-21 12:18:29,987::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,988::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 5' (mtproxy5.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,988::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,988::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,988::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,988::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,988::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,988::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GENISO' (GENISO.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,988::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,988::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,988::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,988::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,988::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,988::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,988::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,988::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanssbo_.ttf) oblique normal 700 normal>) = 11.335
2020-12-21 12:18:29,988::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2020-12-21 12:18:29,988::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,988::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,988::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,989::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,989::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,989::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,989::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,989::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,989::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,989::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,989::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,989::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monos.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,989::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,989::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,989::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,989::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,989::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,989::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,989::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,989::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,989::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,989::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,990::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,990::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,990::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,990::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkOul BT' (swissko.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,990::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,990::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCPEUR' (isocpeui.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,990::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2020-12-21 12:18:29,990::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,990::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,990::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,990::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 8' (mtproxy8.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,990::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,990::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,990::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,990::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vineta BT' (vinet.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,990::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanD' (romand__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,990::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AIGDT' (AIGDT___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,990::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,990::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,991::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AmdtSymbols' (AMDT_Symbols.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,991::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,991::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,991::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,991::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,991::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT_IV25' (Amgdt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,991::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT' (AMGDT___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,991::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,991::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,991::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCTEUR' (isocteui.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,991::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,991::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2020-12-21 12:18:29,991::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2020-12-21 12:18:29,991::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,991::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,991::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,991::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,991::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,991::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,992::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2020-12-21 12:18:29,992::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptC' (scriptc_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,992::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Lt BT' (swissli.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,992::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,992::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,992::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,992::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,992::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,992::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 12:18:29,992::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,992::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,992::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,992::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,992::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,992::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2020-12-21 12:18:29,992::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,992::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 1' (mtproxy1.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,992::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,993::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,993::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,993::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,993::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,993::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,993::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'EuroRoman' (eurro___.ttf) oblique normal 400 normal>) = 11.05
2020-12-21 12:18:29,993::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,993::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,993::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicI' (gothici_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,993::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkCn BT' (swissck.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,993::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,993::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,993::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,993::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swissci.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 12:18:29,993::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,993::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,993::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,993::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Ex BT' (swisseb.ttf) normal normal 700 expanded>) = 10.535
2020-12-21 12:18:29,993::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,994::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,994::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,994::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,994::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'UniversalMath1 BT' (umath.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,994::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,994::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanss___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,994::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,994::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ItalicC' (italicc_.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,994::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,994::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,994::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,994::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2020-12-21 12:18:29,994::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,994::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CountryBlueprint' (counb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,994::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 12:18:29,994::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,994::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,994::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Ex BT' (swisse.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 12:18:29,995::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,995::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,995::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,995::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'TechnicLite' (techl___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,995::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,995::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,995::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2020-12-21 12:18:29,995::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 12:18:29,995::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2020-12-21 12:18:29,995::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,995::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,995::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,995::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,995::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,995::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,995::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,995::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2020-12-21 12:18:29,995::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,995::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,996::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,996::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SuperFrench' (supef___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,996::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,996::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,996::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT_IV25' (Amgdt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,996::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 12:18:29,996::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,996::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swissci.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 12:18:29,996::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanssb__.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,996::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic_IV50.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,996::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2020-12-21 12:18:29,996::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:18:29,996::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,996::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,996::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,996::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,996::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,996::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GOST Common' (GOST Common Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,996::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Lt BT' (swissl.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,997::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,997::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,997::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,997::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 12:18:29,997::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2020-12-21 12:18:29,997::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,997::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,997::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,997::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,997::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Bold.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,997::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,997::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,997::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AcadEref' (AcadEref.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,997::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CountryBlueprint' (counb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,997::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CommercialScript BT' (comsc.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,997::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,997::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,997::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,998::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,998::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic_IV25.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,998::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,998::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,998::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,998::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,998::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,998::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swiss.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,998::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,998::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,998::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,998::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,998::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 7' (mtproxy7.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,998::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,998::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swiss.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,998::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,998::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,998::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,998::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutch.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,999::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,999::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2020-12-21 12:18:29,999::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,999::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:29,999::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,999::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,999::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,999::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:18:29,999::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,999::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2020-12-21 12:18:29,999::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,999::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:29,999::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,999::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:29,999::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT_IV50' (gdt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,999::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanss___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,999::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:29,999::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:29,999::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 2' (mtproxy2.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,000::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,000::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanssb__.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,000::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,000::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtCn BT' (swisscli.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 12:18:30,000::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,000::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 XBd BT' (dutcheb.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,000::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BlkCn BT' (swisscki.ttf) italic normal 400 condensed>) = 11.25
2020-12-21 12:18:30,000::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 12:18:30,000::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:30,000::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,000::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCPEUR' (isocpeur.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,000::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:30,000::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,000::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,000::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GOST Common' (GOST Common Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:30,000::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2020-12-21 12:18:30,000::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,000::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,000::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,001::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutch.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,001::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT_IV25' (gdt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,001::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,001::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,001::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT2' (isoct2_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,001::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCPEUR' (isocpeur.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,001::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,001::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:30,001::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Italic.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:30,001::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:30,001::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,001::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,001::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,001::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monosbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:30,001::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2020-12-21 12:18:30,001::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AcadEref' (AcadEref.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,001::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotxt' (monotxt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,001::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,002::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,002::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:30,002::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,002::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:30,002::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 6' (mtproxy6.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,002::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,002::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2020-12-21 12:18:30,002::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,002::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,002::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,002::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP2' (isocp2_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,002::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,002::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,002::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 12:18:30,002::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'EuroRoman' (eurr____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,002::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,002::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:30,002::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtCn BT' (swisscl.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:30,002::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,003::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,003::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:30,003::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,003::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2020-12-21 12:18:30,003::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,003::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 9' (mtproxy9.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,003::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,003::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic__.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:30,003::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,003::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,003::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,003::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,003::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 12:18:30,003::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,003::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,003::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,003::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:30,003::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romab___.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,004::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,004::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CityBlueprint' (cityb___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,004::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:30,004::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:30,004::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,004::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekC' (greekc_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,004::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,004::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2020-12-21 12:18:30,004::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT_IV50' (gdt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,004::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,004::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,004::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:30,004::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 12:18:30,004::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,004::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:30,004::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Stylus BT' (stylu.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:18:30,004::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,004::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2020-12-21 12:18:30,004::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,005::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtEx BT' (swissel.ttf) normal normal 400 expanded>) = 10.25
2020-12-21 12:18:30,005::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2020-12-21 12:18:30,005::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2020-12-21 12:18:30,005::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:18:30,005::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,005::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:30,005::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,005::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,005::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2020-12-21 12:18:30,005::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,005::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 12:18:30,005::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,005::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,005::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swisscbi.ttf) italic normal 700 condensed>) = 11.535
2020-12-21 12:18:30,005::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 12:18:30,005::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symeteo' (symeteo_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,005::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 5' (mtproxy5.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,005::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,005::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,006::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,006::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,006::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2020-12-21 12:18:30,006::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:30,006::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,006::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:30,006::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,006::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,006::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,006::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:30,006::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,006::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,006::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,006::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BdCnOul BT' (swisscbo.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:30,006::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2020-12-21 12:18:30,006::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2020-12-21 12:18:30,006::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'AMGDT_IV50' (Amgdt_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,006::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,006::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,007::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 XBd BT' (dutcheb.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,007::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:18:30,007::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,007::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,007::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 1' (mtproxy1.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,007::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp___.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,007::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2020-12-21 12:18:30,007::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:30,007::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 3' (mtproxy3.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,007::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'BankGothic Md BT' (bgothm.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,007::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:30,007::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 4' (mtproxy4.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,007::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,007::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,007::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:30,007::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GOST Common' (GOST Common.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,007::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GreekS' (greeks__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,007::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,008::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symusic' (symusic_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,008::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,008::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:30,008::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,008::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,008::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,008::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symap' (symap_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,008::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,008::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2020-12-21 12:18:30,008::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,008::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,008::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,008::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT' (isoct_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,008::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,008::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,008::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,008::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Complex' (complex_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,008::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:30,008::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romab___.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,009::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,009::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,009::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,009::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swissc.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:30,009::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptS' (scripts_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,009::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,009::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,009::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,009::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanD' (romand__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,009::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2020-12-21 12:18:30,009::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,009::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,009::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2020-12-21 12:18:30,009::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,009::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Symath' (symath_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,009::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,009::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'EuroRoman' (eurro___.ttf) oblique normal 400 normal>) = 11.05
2020-12-21 12:18:30,009::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,009::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,010::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,010::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP3' (isocp3__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,010::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,010::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:30,010::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 LtCn BT' (swisscl.ttf) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:30,010::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,010::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:30,010::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,010::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,010::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,010::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BT' (swissbi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:30,010::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:30,010::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,010::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,010::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,010::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,010::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,010::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Syastro' (syastro_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,010::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,011::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2020-12-21 12:18:30,011::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Blk BT' (swissk.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,011::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:18:30,011::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,011::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,011::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,011::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:30,011::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,011::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,011::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2020-12-21 12:18:30,011::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCT3' (isoct3__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,011::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:30,011::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:30,011::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,011::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,011::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Romantic' (romantic.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,011::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,011::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2020-12-21 12:18:30,011::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 4' (mtproxy4.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,012::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,012::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:18:30,012::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 BdOul BT' (swissbo.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,012::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,012::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Artifakt Element' (Artifakt Element Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:30,012::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:30,012::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,012::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,012::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2020-12-21 12:18:30,012::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GENISO' (GENISO.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,012::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,012::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,012::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2020-12-21 12:18:30,012::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Dutch801 Rm BT' (dutchb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,012::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,012::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:30,012::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2020-12-21 12:18:30,012::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:30,013::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Blk BT' (swisski.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:30,013::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,013::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,013::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2020-12-21 12:18:30,013::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,013::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,013::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2020-12-21 12:18:30,013::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2020-12-21 12:18:30,013::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCTEUR' (isocteui.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:30,013::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GDT' (gdt_____.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,013::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,013::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:30,013::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,013::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,013::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Simplex' (simplex_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,013::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:30,013::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:30,013::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,013::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'BankGothic Lt BT' (bgothl.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,014::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,014::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,014::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,014::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,014::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,014::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,014::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,014::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2020-12-21 12:18:30,014::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Txt' (txt_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,014::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2020-12-21 12:18:30,014::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,014::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2020-12-21 12:18:30,014::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,014::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:30,014::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,014::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swisscb.ttf) normal normal 700 condensed>) = 10.535
2020-12-21 12:18:30,014::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,014::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:30,015::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,015::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swisscbi.ttf) italic normal 700 condensed>) = 11.535
2020-12-21 12:18:30,015::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2020-12-21 12:18:30,015::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,015::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2020-12-21 12:18:30,015::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanS' (romans_IV50.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,015::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,015::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,015::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2020-12-21 12:18:30,015::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'GothicG' (gothicg_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,015::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,015::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Monospac821 BT' (monos.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,015::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Proxy 6' (mtproxy6.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,015::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:30,015::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,015::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,015::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,015::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,015::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ISOCP' (isocp_IV25.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,016::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ScriptC' (scriptc_.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,016::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,016::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:30,016::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'CommercialPi BT' (compi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,016::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sansso__.ttf) oblique normal 400 normal>) = 11.05
2020-12-21 12:18:30,016::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,016::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'SansSerif' (sanssbo_.ttf) oblique normal 700 normal>) = 11.335
2020-12-21 12:18:30,016::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Lt BT' (swissli.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:30,016::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,016::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,016::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,016::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,016::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,016::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,016::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2020-12-21 12:18:30,016::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Italic' (italic__.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:30,016::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,016::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,016::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'RomanC' (romanc__.ttf) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,017::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2020-12-21 12:18:30,017::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Swis721 Cn BT' (swisscb.ttf) normal normal 700 condensed>) = 10.535
2020-12-21 12:18:30,017::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-12-21 12:18:30,017::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'ItalicC' (italicc_.ttf) italic normal 400 normal>) = 11.05
2020-12-21 12:18:30,017::DEBUG::matplotlib.font_manager::font_manager.py::1346::findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2020-12-21 12:18:30,017::DEBUG::matplotlib.font_manager::font_manager.py::1366::findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\Users\\Jake\\miniconda3\\envs\\ML-GPU\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2020-12-21 12:18:30,024::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:18:30,050::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:18:30,063::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:18:30,145::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:18:30,241::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:18:30,305::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:18:30,331::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:18:30,344::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:18:30,425::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:18:30,485::DEBUG::root::ML_Identification.py::651::[INFO] Deleting model and freeing GPU memory... 
2020-12-21 12:18:30,598::DEBUG::root::ML_Identification.py::651::[WARN] Model does not exist! Will now train and save.

2020-12-21 12:18:30,598::DEBUG::root::ML_Identification.py::651::[INIT] Initialising dataset... 
2020-12-21 12:18:30,599::DEBUG::root::ML_Identification.py::651::[INIT] Generating model (input shape = (128, 128, 1), classes = 18, optimizer: Adamax)... 
2020-12-21 12:18:30,897::DEBUG::root::ML_Identification.py::651::[TRAIN] Training...
2020-12-21 12:18:30,897::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 12:18:30,897::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Dataset             : Dataset(3, [0, 0, (0, 1), 0], [0], 128, 128, 2, False).
2020-12-21 12:18:30,897::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Success Condition   : A loss of 0.001.
2020-12-21 12:18:30,898::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Terminate Condition : Reaching epoch 100 or 5 consecutive epochs of stagnation.
2020-12-21 12:18:30,898::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 12:18:30,898::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Training 
2020-12-21 12:19:09,055::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.419 - Accuracy: 44.0% 
2020-12-21 12:19:45,671::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.418 - Accuracy: 44.3% 
2020-12-21 12:20:21,146::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.403 - Accuracy: 45.5% 
2020-12-21 12:20:55,984::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.383 - Accuracy: 45.8% 
2020-12-21 12:21:31,424::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.368 - Accuracy: 46.0% 
2020-12-21 12:22:07,656::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.375 - Accuracy: 46.8% 
2020-12-21 12:22:43,863::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.362 - Accuracy: 47.3% 
2020-12-21 12:23:20,224::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.356 - Accuracy: 47.8% 
2020-12-21 12:23:55,991::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.339 - Accuracy: 49.6% 
2020-12-21 12:24:31,553::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.351 - Accuracy: 47.9% 
2020-12-21 12:25:06,858::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.343 - Accuracy: 47.8% 
2020-12-21 12:25:43,405::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.343 - Accuracy: 49.8% 
2020-12-21 12:26:19,731::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -3 Loss: 0.311 - Accuracy: 51.8% 
2020-12-21 12:26:57,601::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.338 - Accuracy: 49.4% 
2020-12-21 12:27:34,307::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.341 - Accuracy: 50.0% 
2020-12-21 12:28:10,716::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.333 - Accuracy: 50.3% 
2020-12-21 12:28:47,806::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -4 Loss: 0.314 - Accuracy: 51.9% 
2020-12-21 12:28:47,808::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 12:28:47,808::DEBUG::root::ML_Identification.py::651::[WARN]  |-> Learning stagnated at epoch 17.
2020-12-21 12:28:47,808::DEBUG::root::ML_Identification.py::651::[TRAIN] V
2020-12-21 12:28:47,809::DEBUG::root::ML_Identification.py::651::[TRAIN] Done!

2020-12-21 12:28:47,809::DEBUG::root::ML_Identification.py::651::[INFO] Training complete after 10 minutes 17 seconds.

2020-12-21 12:28:47,809::DEBUG::root::ML_Identification.py::651::[SAVE] Saving model... 
2020-12-21 12:28:47,856::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:28:47,923::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:28:47,951::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:28:47,965::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:28:48,050::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:28:48,150::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:28:48,210::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:28:48,236::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:28:48,249::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:28:48,329::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:28:48,389::DEBUG::root::ML_Identification.py::651::[INFO] Deleting model and freeing GPU memory... 
2020-12-21 12:28:48,525::DEBUG::root::ML_Identification.py::651::[WARN] Model does not exist! Will now train and save.

2020-12-21 12:28:48,525::DEBUG::root::ML_Identification.py::651::[INIT] Initialising dataset... 
2020-12-21 12:28:48,526::DEBUG::root::ML_Identification.py::651::[INIT] Generating model (input shape = (128, 128, 1), classes = 18, optimizer: Adamax)... 
2020-12-21 12:28:48,826::DEBUG::root::ML_Identification.py::651::[TRAIN] Training...
2020-12-21 12:28:48,827::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 12:28:48,827::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Dataset             : Dataset(3, [0, 0, (0, 1), 0], [0], 128, 128, 4, False).
2020-12-21 12:28:48,827::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Success Condition   : A loss of 0.001.
2020-12-21 12:28:48,827::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Terminate Condition : Reaching epoch 100 or 5 consecutive epochs of stagnation.
2020-12-21 12:28:48,828::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 12:28:48,828::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Training 
2020-12-21 12:29:35,236::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.411 - Accuracy: 43.6% 
2020-12-21 12:30:16,502::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.383 - Accuracy: 45.5% 
2020-12-21 12:30:59,599::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.368 - Accuracy: 46.7% 
2020-12-21 12:31:39,940::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.352 - Accuracy: 48.8% 
2020-12-21 12:32:21,877::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.344 - Accuracy: 48.5% 
2020-12-21 12:33:04,271::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.331 - Accuracy: 50.5% 
2020-12-21 12:33:45,357::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.334 - Accuracy: 50.3% 
2020-12-21 12:34:24,882::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.335 - Accuracy: 50.8% 
2020-12-21 12:35:06,878::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.32 - Accuracy: 52.5% 
2020-12-21 12:35:49,771::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -2 Loss: 0.329 - Accuracy: 52.1% 
2020-12-21 12:36:30,529::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.313 - Accuracy: 54.4% 
2020-12-21 12:37:11,888::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.31 - Accuracy: 54.4% 
2020-12-21 12:37:53,965::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.305 - Accuracy: 55.6% 
2020-12-21 12:38:33,517::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.301 - Accuracy: 56.1% 
2020-12-21 12:39:13,859::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.303 - Accuracy: 57.2% 
2020-12-21 12:39:54,654::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.292 - Accuracy: 58.1% 
2020-12-21 12:40:36,573::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.287 - Accuracy: 58.1% 
2020-12-21 12:41:17,043::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.281 - Accuracy: 60.3% 
2020-12-21 12:41:58,839::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.285 - Accuracy: 61.1% 
2020-12-21 12:42:39,019::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.281 - Accuracy: 60.9% 
2020-12-21 12:43:19,682::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.276 - Accuracy: 61.7% 
2020-12-21 12:44:00,253::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -2 Loss: 0.267 - Accuracy: 63.2% 
2020-12-21 12:44:40,297::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.268 - Accuracy: 63.0% 
2020-12-21 12:45:21,254::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.266 - Accuracy: 62.7% 
2020-12-21 12:46:02,903::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.265 - Accuracy: 63.9% 
2020-12-21 12:46:42,837::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.265 - Accuracy: 63.7% 
2020-12-21 12:47:22,129::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.252 - Accuracy: 65.1% 
2020-12-21 12:48:02,003::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.258 - Accuracy: 64.3% 
2020-12-21 12:48:41,515::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.247 - Accuracy: 65.1% 
2020-12-21 12:49:23,390::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.254 - Accuracy: 64.3% 
2020-12-21 12:50:04,647::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -2 Loss: 0.251 - Accuracy: 65.2% 
2020-12-21 12:50:46,329::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.253 - Accuracy: 64.4% 
2020-12-21 12:51:27,088::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -4 Loss: 0.251 - Accuracy: 65.2% 
2020-12-21 12:51:27,090::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 12:51:27,091::DEBUG::root::ML_Identification.py::651::[WARN]  |-> Learning stagnated at epoch 33.
2020-12-21 12:51:27,091::DEBUG::root::ML_Identification.py::651::[TRAIN] V
2020-12-21 12:51:27,091::DEBUG::root::ML_Identification.py::651::[TRAIN] Done!

2020-12-21 12:51:27,092::DEBUG::root::ML_Identification.py::651::[INFO] Training complete after 22 minutes 38 seconds.

2020-12-21 12:51:27,092::DEBUG::root::ML_Identification.py::651::[SAVE] Saving model... 
2020-12-21 12:51:27,146::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:51:27,211::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:51:27,237::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:51:27,250::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:51:27,330::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:51:27,429::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:51:27,490::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:51:27,516::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:51:27,529::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:51:27,609::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 12:51:27,671::DEBUG::root::ML_Identification.py::651::[INFO] Deleting model and freeing GPU memory... 
2020-12-21 12:51:27,839::DEBUG::root::ML_Identification.py::651::[WARN] Model does not exist! Will now train and save.

2020-12-21 12:51:27,840::DEBUG::root::ML_Identification.py::651::[INIT] Initialising dataset... 
2020-12-21 12:51:27,840::DEBUG::root::ML_Identification.py::651::[INIT] Generating model (input shape = (128, 128, 1), classes = 18, optimizer: Adamax)... 
2020-12-21 12:51:28,134::DEBUG::root::ML_Identification.py::651::[TRAIN] Training...
2020-12-21 12:51:28,134::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 12:51:28,135::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Dataset             : Dataset(3, [0, 0, (0, 1), 0], [0], 128, 128, 8, False).
2020-12-21 12:51:28,135::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Success Condition   : A loss of 0.001.
2020-12-21 12:51:28,135::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Terminate Condition : Reaching epoch 100 or 5 consecutive epochs of stagnation.
2020-12-21 12:51:28,135::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 12:51:28,136::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Training 
2020-12-21 12:52:27,832::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.395 - Accuracy: 45.8% 
2020-12-21 12:53:27,386::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.365 - Accuracy: 47.4% 
2020-12-21 12:54:28,656::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.346 - Accuracy: 49.5% 
2020-12-21 12:55:26,189::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.34 - Accuracy: 49.8% 
2020-12-21 12:56:27,665::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.322 - Accuracy: 52.5% 
2020-12-21 12:57:26,311::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.317 - Accuracy: 53.2% 
2020-12-21 12:58:29,451::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.309 - Accuracy: 54.8% 
2020-12-21 12:59:31,899::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.3 - Accuracy: 56.9% 
2020-12-21 13:00:32,958::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.29 - Accuracy: 58.5% 
2020-12-21 13:01:34,696::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.281 - Accuracy: 59.9% 
2020-12-21 13:02:33,863::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.279 - Accuracy: 61.2% 
2020-12-21 13:03:36,688::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.268 - Accuracy: 63.0% 
2020-12-21 13:04:38,420::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.271 - Accuracy: 63.0% 
2020-12-21 13:05:37,830::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.257 - Accuracy: 64.1% 
2020-12-21 13:06:38,307::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.263 - Accuracy: 64.1% 
2020-12-21 13:07:37,452::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.251 - Accuracy: 64.4% 
2020-12-21 13:08:37,141::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.243 - Accuracy: 65.2% 
2020-12-21 13:09:38,449::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.242 - Accuracy: 65.6% 
2020-12-21 13:10:39,168::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.242 - Accuracy: 65.7% 
2020-12-21 13:11:38,116::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.241 - Accuracy: 65.4% 
2020-12-21 13:12:36,256::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.243 - Accuracy: 65.4% 
2020-12-21 13:13:36,494::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -2 Loss: 0.239 - Accuracy: 65.8% 
2020-12-21 13:14:36,728::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.237 - Accuracy: 65.7% 
2020-12-21 13:15:34,657::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.237 - Accuracy: 65.5% 
2020-12-21 13:16:34,729::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.238 - Accuracy: 65.6% 
2020-12-21 13:17:34,682::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.235 - Accuracy: 65.5% 
2020-12-21 13:18:34,969::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -2 Loss: 0.23 - Accuracy: 65.7% 
2020-12-21 13:19:36,380::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.233 - Accuracy: 65.9% 
2020-12-21 13:20:35,301::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.228 - Accuracy: 65.9% 
2020-12-21 13:21:34,980::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.227 - Accuracy: 66.2% 
2020-12-21 13:22:36,271::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.229 - Accuracy: 65.9% 
2020-12-21 13:23:34,543::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.231 - Accuracy: 65.6% 
2020-12-21 13:24:33,864::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -2 Loss: 0.226 - Accuracy: 65.7% 
2020-12-21 13:25:32,163::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -3 Loss: 0.229 - Accuracy: 65.6% 
2020-12-21 13:26:35,508::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -3 Loss: 0.229 - Accuracy: 65.8% 
2020-12-21 13:27:36,312::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.231 - Accuracy: 65.0% 
2020-12-21 13:28:35,393::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -4 Loss: 0.229 - Accuracy: 65.3% 
2020-12-21 13:28:36,441::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 13:28:36,616::DEBUG::root::ML_Identification.py::651::[WARN]  |-> Learning stagnated at epoch 37.
2020-12-21 13:28:36,855::DEBUG::root::ML_Identification.py::651::[TRAIN] V
2020-12-21 13:28:37,001::DEBUG::root::ML_Identification.py::651::[TRAIN] Done!

2020-12-21 13:28:37,094::DEBUG::root::ML_Identification.py::651::[INFO] Training complete after 37 minutes 9 seconds.

2020-12-21 13:28:37,191::DEBUG::root::ML_Identification.py::651::[SAVE] Saving model... 
2020-12-21 13:28:37,406::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 13:28:37,568::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 13:28:37,640::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 13:28:37,682::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 13:28:37,877::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 13:28:38,083::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 13:28:38,195::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 13:28:38,252::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 13:28:38,276::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 13:28:38,409::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 13:28:38,522::DEBUG::root::ML_Identification.py::651::[INFO] Deleting model and freeing GPU memory... 
2020-12-21 13:28:38,875::DEBUG::root::ML_Identification.py::651::[WARN] Model does not exist! Will now train and save.

2020-12-21 13:28:38,880::DEBUG::root::ML_Identification.py::651::[INIT] Initialising dataset... 
2020-12-21 13:28:38,889::DEBUG::root::ML_Identification.py::651::[INIT] Generating model (input shape = (128, 128, 1), classes = 18, optimizer: Adamax)... 
2020-12-21 13:28:39,431::DEBUG::root::ML_Identification.py::651::[TRAIN] Training...
2020-12-21 13:28:39,431::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 13:28:39,432::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Dataset             : Dataset(3, [0, 0, (0, 1), 0], [0], 128, 128, 16, False).
2020-12-21 13:28:39,433::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Success Condition   : A loss of 0.001.
2020-12-21 13:28:39,434::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Terminate Condition : Reaching epoch 100 or 5 consecutive epochs of stagnation.
2020-12-21 13:28:39,435::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 13:28:39,435::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Training 
2020-12-21 13:29:59,289::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.374 - Accuracy: 46.4% 
2020-12-21 13:31:25,112::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.339 - Accuracy: 49.4% 
2020-12-21 13:32:51,896::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.323 - Accuracy: 52.4% 
2020-12-21 13:34:20,375::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.304 - Accuracy: 56.1% 
2020-12-21 13:35:47,853::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.288 - Accuracy: 59.4% 
2020-12-21 13:37:14,138::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.27 - Accuracy: 62.2% 
2020-12-21 13:38:41,774::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.261 - Accuracy: 63.5% 
2020-12-21 13:40:08,971::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.25 - Accuracy: 64.9% 
2020-12-21 13:41:37,130::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.248 - Accuracy: 65.0% 
2020-12-21 13:43:06,021::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.241 - Accuracy: 65.5% 
2020-12-21 13:44:37,487::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.239 - Accuracy: 65.6% 
2020-12-21 13:46:07,383::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.236 - Accuracy: 65.8% 
2020-12-21 13:47:38,625::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.233 - Accuracy: 65.8% 
2020-12-21 13:49:07,380::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.232 - Accuracy: 66.0% 
2020-12-21 13:50:35,875::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.234 - Accuracy: 65.3% 
2020-12-21 13:52:04,790::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.23 - Accuracy: 65.7% 
2020-12-21 13:53:34,436::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.228 - Accuracy: 65.8% 
2020-12-21 13:55:04,908::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.225 - Accuracy: 66.1% 
2020-12-21 13:56:36,886::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.227 - Accuracy: 65.9% 
2020-12-21 13:58:07,414::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.228 - Accuracy: 65.7% 
2020-12-21 13:59:32,620::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.225 - Accuracy: 66.1% 
2020-12-21 14:00:56,840::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -4 Loss: 0.226 - Accuracy: 65.8% 
2020-12-21 14:00:58,234::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 14:00:58,461::DEBUG::root::ML_Identification.py::651::[WARN]  |-> Learning stagnated at epoch 22.
2020-12-21 14:00:58,855::DEBUG::root::ML_Identification.py::651::[TRAIN] V
2020-12-21 14:00:59,189::DEBUG::root::ML_Identification.py::651::[TRAIN] Done!

2020-12-21 14:00:59,347::DEBUG::root::ML_Identification.py::651::[INFO] Training complete after 32 minutes 20 seconds.

2020-12-21 14:00:59,580::DEBUG::root::ML_Identification.py::651::[SAVE] Saving model... 
2020-12-21 14:00:59,802::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 14:00:59,948::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 14:01:00,027::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 14:01:00,048::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 14:01:00,258::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 14:01:00,507::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 14:01:00,651::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 14:01:00,708::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 14:01:00,739::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 14:01:00,923::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 14:01:01,143::DEBUG::root::ML_Identification.py::651::[INFO] Deleting model and freeing GPU memory... 
2020-12-21 14:01:02,070::DEBUG::root::ML_Identification.py::651::[WARN] Model does not exist! Will now train and save.

2020-12-21 14:01:02,239::DEBUG::root::ML_Identification.py::651::[INIT] Initialising dataset... 
2020-12-21 14:01:02,430::DEBUG::root::ML_Identification.py::651::[INIT] Generating model (input shape = (128, 128, 1), classes = 18, optimizer: Adamax)... 
2020-12-21 14:01:03,926::DEBUG::root::ML_Identification.py::651::[TRAIN] Training...
2020-12-21 14:01:04,119::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 14:01:04,363::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Dataset             : Dataset(3, [0, 0, (0, 1), 0], [0], 128, 128, 32, False).
2020-12-21 14:01:04,823::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Success Condition   : A loss of 0.001.
2020-12-21 14:01:05,323::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Terminate Condition : Reaching epoch 100 or 5 consecutive epochs of stagnation.
2020-12-21 14:01:05,836::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 14:01:06,168::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Training 
2020-12-21 14:02:59,526::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.359 - Accuracy: 48.2% 
2020-12-21 14:04:57,805::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.305 - Accuracy: 55.5% 
2020-12-21 14:06:54,371::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.268 - Accuracy: 61.2% 
2020-12-21 14:08:51,233::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.252 - Accuracy: 64.0% 
2020-12-21 14:10:51,624::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.243 - Accuracy: 65.0% 
2020-12-21 14:12:44,956::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.24 - Accuracy: 65.1% 
2020-12-21 14:14:42,512::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.234 - Accuracy: 65.5% 
2020-12-21 14:16:41,974::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.234 - Accuracy: 65.2% 
2020-12-21 14:18:38,603::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.234 - Accuracy: 65.1% 
2020-12-21 14:20:35,842::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.23 - Accuracy: 65.4% 
2020-12-21 14:22:31,484::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -2 Loss: 0.226 - Accuracy: 66.0% 
2020-12-21 14:24:25,949::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.225 - Accuracy: 65.8% 
2020-12-21 14:26:26,778::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.227 - Accuracy: 65.6% 
2020-12-21 14:28:28,568::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.224 - Accuracy: 65.7% 
2020-12-21 14:30:24,199::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.223 - Accuracy: 65.8% 
2020-12-21 14:32:22,518::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.22 - Accuracy: 66.0% 
2020-12-21 14:34:17,954::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.22 - Accuracy: 66.1% 
2020-12-21 14:36:15,056::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.22 - Accuracy: 66.1% 
2020-12-21 14:38:10,166::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.218 - Accuracy: 66.4% 
2020-12-21 14:40:09,401::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -3 Loss: 0.22 - Accuracy: 66.3% 
2020-12-21 14:42:11,529::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -2 Loss: 0.217 - Accuracy: 66.4% 
2020-12-21 14:44:11,733::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.217 - Accuracy: 66.4% 
2020-12-21 14:46:08,978::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -2 Loss: 0.218 - Accuracy: 66.2% 
2020-12-21 14:48:07,680::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.217 - Accuracy: 66.6% 
2020-12-21 14:50:01,594::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -3 Loss: 0.216 - Accuracy: 66.5% 
2020-12-21 14:51:59,890::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -3 Loss: 0.219 - Accuracy: 66.1% 
2020-12-21 14:53:57,820::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.217 - Accuracy: 66.4% 
2020-12-21 14:55:57,251::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -2 Loss: 0.216 - Accuracy: 66.6% 
2020-12-21 14:57:55,097::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -4 Loss: 0.216 - Accuracy: 66.5% 
2020-12-21 14:57:56,859::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 14:57:57,195::DEBUG::root::ML_Identification.py::651::[WARN]  |-> Learning stagnated at epoch 29.
2020-12-21 14:57:57,821::DEBUG::root::ML_Identification.py::651::[TRAIN] V
2020-12-21 14:57:58,159::DEBUG::root::ML_Identification.py::651::[TRAIN] Done!

2020-12-21 14:57:58,405::DEBUG::root::ML_Identification.py::651::[INFO] Training complete after 56 minutes 56 seconds.

2020-12-21 14:57:58,642::DEBUG::root::ML_Identification.py::651::[SAVE] Saving model... 
2020-12-21 14:57:58,953::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 14:57:59,095::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 14:57:59,164::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 14:57:59,215::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 14:57:59,413::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 14:57:59,744::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 14:57:59,898::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 14:57:59,991::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 14:58:00,009::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 14:58:00,241::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 14:58:00,469::DEBUG::root::ML_Identification.py::651::[INFO] Deleting model and freeing GPU memory... 
2020-12-21 14:58:01,637::DEBUG::root::ML_Identification.py::651::[WARN] Model does not exist! Will now train and save.

2020-12-21 14:58:01,867::DEBUG::root::ML_Identification.py::651::[INIT] Initialising dataset... 
2020-12-21 14:58:02,202::DEBUG::root::ML_Identification.py::651::[INIT] Generating model (input shape = (128, 128, 1), classes = 18, optimizer: Adamax)... 
2020-12-21 14:58:04,323::DEBUG::root::ML_Identification.py::651::[TRAIN] Training...
2020-12-21 14:58:04,586::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 14:58:04,951::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Dataset             : Dataset(3, [0, 0, (0, 1), 0], [0], 128, 128, 64, False).
2020-12-21 14:58:05,543::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Success Condition   : A loss of 0.001.
2020-12-21 14:58:06,065::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Terminate Condition : Reaching epoch 100 or 5 consecutive epochs of stagnation.
2020-12-21 14:58:06,599::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 14:58:06,900::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Training 
2020-12-21 15:00:58,832::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.334 - Accuracy: 51.6% 
2020-12-21 15:03:59,646::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.263 - Accuracy: 63.2% 
2020-12-21 15:06:56,677::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.242 - Accuracy: 65.4% 
2020-12-21 15:09:52,888::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.232 - Accuracy: 65.7% 
2020-12-21 15:12:51,654::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.227 - Accuracy: 66.0% 
2020-12-21 15:15:47,643::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.227 - Accuracy: 65.6% 
2020-12-21 15:18:42,422::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.222 - Accuracy: 65.9% 
2020-12-21 15:21:38,397::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.221 - Accuracy: 65.8% 
2020-12-21 15:24:35,263::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.22 - Accuracy: 66.1% 
2020-12-21 15:27:33,183::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.22 - Accuracy: 66.2% 
2020-12-21 15:30:32,102::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.217 - Accuracy: 66.4% 
2020-12-21 15:33:31,655::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.217 - Accuracy: 66.3% 
2020-12-21 15:36:31,005::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.216 - Accuracy: 66.6% 
2020-12-21 15:39:35,343::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.215 - Accuracy: 66.5% 
2020-12-21 15:42:37,797::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.215 - Accuracy: 66.5% 
2020-12-21 15:45:38,265::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.215 - Accuracy: 66.6% 
2020-12-21 15:48:36,873::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.215 - Accuracy: 66.6% 
2020-12-21 15:51:35,657::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -4 Loss: 0.215 - Accuracy: 66.6% 
2020-12-21 15:51:36,954::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 15:51:36,954::DEBUG::root::ML_Identification.py::651::[WARN]  |-> Learning stagnated at epoch 18.
2020-12-21 15:51:36,955::DEBUG::root::ML_Identification.py::651::[TRAIN] V
2020-12-21 15:51:36,955::DEBUG::root::ML_Identification.py::651::[TRAIN] Done!

2020-12-21 15:51:36,955::DEBUG::root::ML_Identification.py::651::[INFO] Training complete after 53 minutes 35 seconds.

2020-12-21 15:51:36,956::DEBUG::root::ML_Identification.py::651::[SAVE] Saving model... 
2020-12-21 15:51:37,072::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 15:51:37,252::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 15:51:37,322::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 15:51:37,372::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 15:51:37,600::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 15:51:37,943::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 15:51:38,133::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 15:51:38,206::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 15:51:38,258::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 15:51:38,475::DEBUG::matplotlib.axes._base::_base.py::2646::top of axes not in the figure, so title not moved
2020-12-21 15:51:38,712::DEBUG::root::ML_Identification.py::651::[INFO] Deleting model and freeing GPU memory... 
2020-12-21 15:51:39,791::DEBUG::root::ML_Identification.py::651::[WARN] Model does not exist! Will now train and save.

2020-12-21 15:51:40,066::DEBUG::root::ML_Identification.py::651::[INIT] Initialising dataset... 
2020-12-21 15:51:40,421::DEBUG::root::ML_Identification.py::651::[INIT] Generating model (input shape = (128, 128, 1), classes = 18, optimizer: Adamax)... 
2020-12-21 15:51:42,333::DEBUG::root::ML_Identification.py::651::[TRAIN] Training...
2020-12-21 15:51:42,624::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 15:51:42,988::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Dataset             : Dataset(3, [0, 0, (0, 1), 0], [0], 128, 128, 128, False).
2020-12-21 15:51:43,527::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Success Condition   : A loss of 0.001.
2020-12-21 15:51:44,112::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Terminate Condition : Reaching epoch 100 or 5 consecutive epochs of stagnation.
2020-12-21 15:51:44,704::DEBUG::root::ML_Identification.py::651::[TRAIN] |
2020-12-21 15:51:45,028::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> Training 
2020-12-21 15:56:40,663::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> -1 Loss: 0.302 - Accuracy: 56.9% 
2020-12-21 16:01:37,607::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.235 - Accuracy: 65.7% 
2020-12-21 16:06:35,820::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.227 - Accuracy: 65.7% 
2020-12-21 16:11:37,611::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.222 - Accuracy: 65.7% 
2020-12-21 16:16:30,903::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.219 - Accuracy: 66.0% 
2020-12-21 16:21:28,185::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.217 - Accuracy: 66.4% 
2020-12-21 16:26:23,502::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.216 - Accuracy: 66.5% 
2020-12-21 16:31:19,460::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.214 - Accuracy: 66.8% 
2020-12-21 16:36:16,956::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.213 - Accuracy: 66.8% 
2020-12-21 16:41:14,298::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.212 - Accuracy: 66.8% 
2020-12-21 16:46:15,316::DEBUG::root::ML_Identification.py::651::[TRAIN] |-> +  Loss: 0.211 - Accuracy: 66.9% 
